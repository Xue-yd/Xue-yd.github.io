<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2022/08/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<p>D:\SogouDownload\nodejs\node_global\hexo d</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>FCA数据库中的原始reads文件之uBAM文件</title>
    <url>/2022/08/15/FCA%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%A7%8Breads%E6%96%87%E4%BB%B6%E4%B9%8BuBAM%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="1-什么是uBAM文件？"><a href="#1-什么是uBAM文件？" class="headerlink" title="1.什么是uBAM文件？"></a>1.什么是uBAM文件？</h2><p>uBAM文件，即unmapped or unaligned BAM文件，里面的reads是没有经过比对的，目的是为了储存原始的reads信息。</p>
<h2 id="2-uBAM-vs-fastq"><a href="#2-uBAM-vs-fastq" class="headerlink" title="2.uBAM vs fastq"></a>2.uBAM vs fastq</h2><p>相比于fastq文件来说，uBAM文件储存的信息更加丰富。由于fastq文件的格式原因，很多信息都不能存放在fastq文件中。而BAM文件中只需要加上tag信息即可。以FlyCellAtlas中的原始BAM文件为例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1	4	*	0	255	*	*	0	91	ATTGGCGACAGAT...CGGAATATATATATATGTATATAT	FFFFFFFFFFFFFFFFFFF...FFFFFFFFFFFFFFFFFF	on:Z:A00428:211:H77T5DSXY:3:1101:1090:1000@2:N:0:GCTCAACC	op:Z:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFF,FFFFFFFFF:FFFFFF	RX:Z:CATCTATTATAT	QX:Z:FFFFFFFFFF:F	CR:Z:TTGGGTAAGGAGGCAG	CY:Z:#FFFFFFFFFFFFFFF</span><br></pre></td></tr></table></figure>

<p>RX tag即UMI信息，QX tag为UMI测序质量信息，CR tag为cell barcode序列，CY tag为cell barcode的测序质量信息。对于单细胞测序而言，一个uBAM文件即将R1(cell barcode + UMI)和R2(真正的reads)的fastq信息都包含在内。</p>
<h2 id="3-uBAM转换为cellranger需要的fastq"><a href="#3-uBAM转换为cellranger需要的fastq" class="headerlink" title="3.uBAM转换为cellranger需要的fastq"></a>3.uBAM转换为cellranger需要的fastq</h2><p>cellranger处理的fastq文件，有两个reads文件和index文件，index文件不是必需的。R1文件中储存的是cell barcode+UMI序列相关信息，R2文件中储存的是真正的测序序列。对于R2文件来说，直接用samtools fastq即可完成转换。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">samtools  fastq sample1.bam &gt; fastq/sample1-1_S1_L001_R2_001.fastq.gz</span><br></pre></td></tr></table></figure>

<p>对于R1文件而言，就有些复杂，我们可以首先将BAM文件中的UMI、barcode序列信息进行提取，然后再用samtools完成转换。这是一个笨方法，而且耗费资源，速度也比较慢，但是不需要写脚本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sample1-1 sample1-2 sample1-3</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	samtools view <span class="variable">$i</span>.bam | awk <span class="string">&#x27;&#123;print $1&quot;\t&quot;$2&quot;\t&quot;$3&quot;\t&quot;$4&quot;\t&quot;$5&quot;\t&quot;$6&quot;\t&quot;$7&quot;\t&quot;$8&quot;\t&quot;$9&quot;\t&quot;$16$14&quot;\t&quot;$17$15&#125;&#x27;</span> &gt; <span class="variable">$i</span>.tmp;		<span class="comment">#提取序列基本信息和barcode(16列)和UMI(14列)信息，17、15列为相对应的质量信息</span></span><br><span class="line">	sed -i <span class="string">&#x27;1,$s/CR:Z://g&#x27;</span> <span class="variable">$i</span>.tmp;    <span class="comment">#处理文件，去掉tag标签，只保留序列</span></span><br><span class="line">	sed -i <span class="string">&#x27;1,$s/CY:Z://g&#x27;</span> <span class="variable">$i</span>.tmp;</span><br><span class="line">	sed -i <span class="string">&#x27;1,$s/RX:Z://g&#x27;</span> <span class="variable">$i</span>.tmp;</span><br><span class="line">	sed -i <span class="string">&#x27;1,$s/QX:Z://g&#x27;</span> <span class="variable">$i</span>.tmp;</span><br><span class="line">	<span class="built_in">cat</span> header <span class="variable">$i</span>.tmp &gt; <span class="variable">$i</span>.sam;		<span class="comment">#加上头文件</span></span><br><span class="line">	<span class="built_in">rm</span> <span class="variable">$i</span>.tmp;</span><br><span class="line">	samtools view -@ 10 -bS <span class="variable">$i</span>.sam -o <span class="variable">$i</span>.R1.bam;	<span class="comment">#转换为bam文件，节省空间</span></span><br><span class="line">	<span class="built_in">rm</span> <span class="variable">$i</span>.sam;</span><br><span class="line">	samtools fastq <span class="variable">$i</span>.R1.bam &gt; fastq/<span class="variable">$i_S1_L001_R1_001</span>.fastq; <span class="comment">#BAM转换为fastq（reads1）</span></span><br><span class="line">	samtools fastq <span class="variable">$i</span>.bam &gt; fastq/<span class="variable">$i_S1_L001_R2_001</span>.fastq;    <span class="comment">#（reads2）</span></span><br><span class="line">	gzip fastq/<span class="variable">$i</span>.R1_001.fastq;</span><br><span class="line">	gzip fastq/<span class="variable">$i</span>.R2_001.fastq;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>完成转换之后就可以走接下来的cellranger流程啦！</p>
]]></content>
      <categories>
        <category>scRNA-seq</category>
      </categories>
      <tags>
        <tag>scRNA-seq</tag>
        <tag>raw reads</tag>
        <tag>10X genomics</tag>
      </tags>
  </entry>
  <entry>
    <title>scRNA-seq分析之cellranger count</title>
    <url>/2022/08/15/scRNA-seq%E5%88%86%E6%9E%90%E4%B9%8Bcellranger-count/</url>
    <content><![CDATA[<h2 id="1-生成cellranger参考基因组"><a href="#1-生成cellranger参考基因组" class="headerlink" title="1. 生成cellranger参考基因组"></a>1. 生成cellranger参考基因组</h2><p>cellranger官方提供有小鼠和人类的参考基因组，其他物种的需要用mkref自己产生。</p>
<h3 id="1-1-生成用于产生参考基因组的gtf文件"><a href="#1-1-生成用于产生参考基因组的gtf文件" class="headerlink" title="1.1 生成用于产生参考基因组的gtf文件"></a>1.1 生成用于产生参考基因组的gtf文件</h3><p>–attribute参数用于指定gtf文件中的biotype。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cellranger mkgtf Dmel.gtf Dmel.BDGP6.32.104.filtered.gtf \</span><br><span class="line">--attribute=gene_biotype:protein_coding \</span><br><span class="line">--attribute=gene_biotype:lncRNA \</span><br><span class="line">--attribute=gene_biotype:antisense</span><br></pre></td></tr></table></figure>

<h3 id="1-2-生成参考基因组文件"><a href="#1-2-生成参考基因组文件" class="headerlink" title="1.2 生成参考基因组文件"></a>1.2 生成参考基因组文件</h3><p>接下来根据上一步产生的gtf文件生成参考基因组文件，–genome参数指定接下来产生的参考基因组的文件夹名字，–fasta为下载的参考基因组的序列文件，–gtf为上一步产生的gtf文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cellranger mkref --genome=Dmel.genome \</span><br><span class="line">--fasta=Dme.dna.fa \</span><br><span class="line">--gtf=Dmel.BDGP6.32.104.filtered.gtf</span><br></pre></td></tr></table></figure>

<h2 id="2-cellranger-count定量"><a href="#2-cellranger-count定量" class="headerlink" title="2. cellranger count定量"></a>2. cellranger count定量</h2><p>有了fastq和参考基因组，接下来就可以定量了。<br>–id输出文件夹名字，–transcriptome参考基因组所在的文件夹，–fastqs为fastq序列所在的文件名，–sample用于分析的文件prefix，–localcores线程数，–localmem内存数，加上–nosecondary参数不进行下游聚类分析。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cellranger count --<span class="built_in">id</span>=run_sample1 \</span><br><span class="line">--fastqs=/storage/XYD/mywork/fastq \</span><br><span class="line">--sample=sample1-44,sample1-48,sample1-49,sample1-56 \</span><br><span class="line">--transcriptome=/storage/XYD/00.reference/01.Dmel/Dmel.genome \</span><br><span class="line">--localcores=12 \</span><br><span class="line">--localmem=128 \</span><br><span class="line">--nosecondary</span><br></pre></td></tr></table></figure>

<p>定量结束之后，产生的文件夹里outs&#x2F;下会有一个网页文件web_summary.html，打开会看到下图的信息。</p>
<p><img src="/pics/2022-815-cellranger-count-1.jpg" alt="alt 图标"></p>
<p>发现有个warning：Low fraction reads in cells，显示我的数据大概在54％左右，理想情况下应该为70%，官方的解释有两种可能：1.环境RNA水平过高；2.有一部分细胞RNA content很低，若是第二种情况，那么可以在count步骤加上–force-cells参数，设置一下自己预期的细胞数量，从而去掉RNA含量低的细胞。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cellranger count --<span class="built_in">id</span>=run_sample1 \</span><br><span class="line">--fastqs=/storage/XYD/mywork/fastq \</span><br><span class="line">--sample=sample1-44,sample1-48,sample1-49,sample1-56 \</span><br><span class="line">--transcriptome=/storage/XYD/00.reference/01.Dmel/Dmel.genome \</span><br><span class="line">--localcores=12 \</span><br><span class="line">--localmem=128 \</span><br><span class="line">--nosecondary</span><br><span class="line">--force-cells=13000</span><br></pre></td></tr></table></figure>

<p>参考资料：<br>1.<a href="https://kb.10xgenomics.com/hc/en-us/articles/360003919491-How-to-interpret-the-Fraction-Reads-in-Cells-metric-">https://kb.10xgenomics.com/hc/en-us/articles/360003919491-How-to-interpret-the-Fraction-Reads-in-Cells-metric-</a></p>
]]></content>
      <categories>
        <category>scRNA-seq</category>
        <category>10X genomics</category>
      </categories>
      <tags>
        <tag>scRNA-seq</tag>
        <tag>10X genomics</tag>
      </tags>
  </entry>
  <entry>
    <title>Seurat包合并多个sample datasets</title>
    <url>/2022/08/17/Seurat%E5%8C%85%E5%90%88%E5%B9%B6%E5%A4%9A%E4%B8%AAsample-datasets/</url>
    <content><![CDATA[<p>很多情况下，我们需要将多个sample dataset合并在一起，然后进行接下来的分析。Seurat v4官方提供了可以用于整合数据集的函数。</p>
<h2 id="1-导入数据，设置SeuratObject"><a href="#1-导入数据，设置SeuratObject" class="headerlink" title="1.导入数据，设置SeuratObject"></a>1.导入数据，设置SeuratObject</h2><p>首先读入数据，然后创建SeuratObject对象。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library<span class="punctuation">(</span>Seurat<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">data1 <span class="operator">&lt;-</span> Read10X<span class="punctuation">(</span>data.dir <span class="operator">=</span> <span class="string">&quot;D:/000 MyWork/000 MyProject/000 scVariants/sample1&quot;</span><span class="punctuation">,</span></span><br><span class="line">	gene.column <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">data2 <span class="operator">&lt;-</span> Read10X<span class="punctuation">(</span>data.dir <span class="operator">=</span> <span class="string">&quot;D:/000 MyWork/000 MyProject/000 scVariants/sample2&quot;</span><span class="punctuation">,</span></span><br><span class="line">	gene.column <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">data1 <span class="operator">&lt;-</span> CreateSeuratObject<span class="punctuation">(</span>counts <span class="operator">=</span> data1<span class="punctuation">,</span>project <span class="operator">=</span> <span class="string">&quot;sample1&quot;</span><span class="punctuation">,</span></span><br><span class="line">	min.cells <span class="operator">=</span> <span class="number">3</span><span class="punctuation">,</span>min.features <span class="operator">=</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">	assay <span class="operator">=</span> <span class="string">&quot;RNA&quot;</span><span class="punctuation">)</span></span><br><span class="line">data2 <span class="operator">&lt;-</span> CreateSeuratObject<span class="punctuation">(</span>counts <span class="operator">=</span> data2<span class="punctuation">,</span>project <span class="operator">=</span> <span class="string">&quot;sample2&quot;</span><span class="punctuation">,</span></span><br><span class="line">	min.cells <span class="operator">=</span> <span class="number">3</span><span class="punctuation">,</span>min.features <span class="operator">=</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">	assay <span class="operator">=</span> <span class="string">&quot;RNA&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>接下来分别对两个数据各自进行Normalize，并鉴定variable features,最后选择两个datasets中repeatedly variable features进行integration。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">data.list <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span>data1<span class="punctuation">,</span>data2<span class="punctuation">)</span></span><br><span class="line">data.list <span class="operator">&lt;-</span> lapply<span class="punctuation">(</span>X <span class="operator">=</span> data.list<span class="punctuation">,</span> FUN <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">	x <span class="operator">&lt;-</span> NormalizeData<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">	x <span class="operator">&lt;-</span> FindVariableFeatures<span class="punctuation">(</span>x<span class="punctuation">,</span> selection.method <span class="operator">=</span> <span class="string">&quot;vst&quot;</span><span class="punctuation">,</span> nfeatures <span class="operator">=</span> <span class="number">2000</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">features <span class="operator">&lt;-</span> SelectIntegrationFeatures<span class="punctuation">(</span>object.list <span class="operator">=</span> data.list<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h2 id="2-进行整合"><a href="#2-进行整合" class="headerlink" title="2.进行整合"></a>2.进行整合</h2><p>然后，使用FindIntegrationAnchors()函数确定Anchor，这个函数以SeuratObject函数作为输入，然后再利用IntegrateData()函数进行整合。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">data.anchors <span class="operator">&lt;-</span> FindIntegrationAnchors<span class="punctuation">(</span>object.list <span class="operator">=</span> data.list<span class="punctuation">,</span></span><br><span class="line">anchor.features <span class="operator">=</span> features<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">data.combined <span class="operator">&lt;-</span> IntegrateData<span class="punctuation">(</span>anchorset <span class="operator">=</span> data.anchors<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h2 id="3-整合后的分析"><a href="#3-整合后的分析" class="headerlink" title="3.整合后的分析"></a>3.整合后的分析</h2><p>接下来就可以进行后续的分析了。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DefaultAssay<span class="punctuation">(</span>data.combined<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="string">&quot;integrated&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Run the standard workflow for visualization and clustering</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> ScaleData<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> verbose <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> RunPCA<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> npcs <span class="operator">=</span> <span class="number">30</span><span class="punctuation">,</span> verbose <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> FindNeighbors<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;pca&quot;</span><span class="punctuation">,</span> dims <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">30</span><span class="punctuation">)</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> FindClusters<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> resolution <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> RunUMAP<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;pca&quot;</span><span class="punctuation">,</span> dims <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">30</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Visualization</span></span><br><span class="line">p1 <span class="operator">&lt;-</span> DimPlot<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;umap&quot;</span><span class="punctuation">)</span></span><br><span class="line">p2 <span class="operator">&lt;-</span> DimPlot<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;umap&quot;</span><span class="punctuation">,</span> label <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> repel <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">p1</span><br><span class="line">p2</span><br></pre></td></tr></table></figure>

<p>参考：<a href="https://satijalab.org/seurat/articles/integration_introduction.html">https://satijalab.org/seurat/articles/integration_introduction.html</a></p>
]]></content>
      <categories>
        <category>R</category>
        <category>Seurat</category>
      </categories>
      <tags>
        <tag>scRNA-seq</tag>
        <tag>Seurat</tag>
      </tags>
  </entry>
  <entry>
    <title>RNA-seq分析(1)之数据质控</title>
    <url>/2022/08/14/RNA-seq%E5%88%86%E6%9E%90%E4%B9%8B%E6%95%B0%E6%8D%AE%E8%B4%A8%E6%8E%A7/</url>
    <content><![CDATA[<h2 id="1-fastq文件质控"><a href="#1-fastq文件质控" class="headerlink" title="1.fastq文件质控"></a>1.fastq文件质控</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastq -f fastq -t 10 -o ./ ./myfastq_r1.fq.gz ./myfastq_r2.fq.gz</span><br></pre></td></tr></table></figure>

<p>之后会产生质控报告和zip文件，查看报告，可以看到base quality、GC content等信息。质控报告每个版块的具体的意义参考(<a href="https://zhuanlan.zhihu.com/p/20731723">https://zhuanlan.zhihu.com/p/20731723</a> )。</p>
<h2 id="2-去除接头序列"><a href="#2-去除接头序列" class="headerlink" title="2.去除接头序列"></a>2.去除接头序列</h2><p>RNA-seq建库测序时，会在样品末端加上接头序列，在后续的步骤中需要去除。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage:</span><br><span class="line">    cutadapt -a ADAPTER [options] [-o output.fastq] input.fastq</span><br><span class="line"></span><br><span class="line">For paired-end reads:</span><br><span class="line">    cutadapt -a ADAPT1 -A ADAPT2 [options] -o out1.fastq -p out2.fastq in1.fastq                            in2.fastq</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>去除接头序列，这里我用cutadapt，对于双端测序来说，需要去掉read1和read2两个序列，参数-a和-A分别是read1和read2序列的3’端序列。-e即error rate,-n为2即最多每条read最多去掉两个adapter，-m为20去掉adapter之后若reads长度小于20，则去掉这条reads，–pair-filter这个参数对于双端测序而言，read1和read2都有可能检测到接头。如果选择any，则只要两个中其中一个检测到接头，read1和read2均舍弃；如果选择both，则必须两个都检测到接头，read1和read2才舍弃，-j线程数，-q [5’CUTOFF,]3’CUTOFF参数，quality cutoff，去掉5’端、3’端碱基质量低于该值。双端测序需要提供两个值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cutadapt -a AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC -A AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT</span><br><span class="line">\ -e 0.1 -O 5 -n 2 -m 20 --pair-filter both -q 20,20 -j 10</span><br><span class="line">\ -o 01.clean/CS-1.clean.r1.fq.gz -p 01.clean/CS-1.clean.r2.fq.gz</span><br><span class="line">\ 00.rawdata/CS-1-LEG8830_L2_1.fq.gz 00.rawdata/CS-1-LEG8830_L2_2.fq.gz</span><br></pre></td></tr></table></figure>

<h2 id="3-去除测序刚开始时不稳定的reads"><a href="#3-去除测序刚开始时不稳定的reads" class="headerlink" title="3.去除测序刚开始时不稳定的reads"></a>3.去除测序刚开始时不稳定的reads</h2><p>测序仪进行测序时，刚开始10bp左右的reads测序不稳定，可以进行适当修剪。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cutadapt -u 10 -o trimmed.fastq input_reads.fastq</span><br></pre></td></tr></table></figure>

<h2 id="4-去除rRNA序列"><a href="#4-去除rRNA序列" class="headerlink" title="4.去除rRNA序列"></a>4.去除rRNA序列</h2><p>有时候质控得到的结果中GC含量为双峰，这可能是一些RNA过表达引起的GC偏好，需要去除一些rRNA序列或是其他我们并不关心的序列，但是也并不必过于担忧，RNA-seq中本身就有一些表达量高的序列，所以质控报告中只要一些如碱基质量等的关键因素满足要求，后续只是进行差异表达等的分析，不去除也是可以的。<br>首先，我们需要在NCBI数据库中下载rRNA序列的fasta文件，然后用Hisat2进行比对，保留没有比对上的序列即可,过程如下：</p>
<h3 id="4-1-构建索引"><a href="#4-1-构建索引" class="headerlink" title="4.1 构建索引"></a>4.1 构建索引</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hisat2-build -p 10 rRNA.fasta ./rRNA/rRNA</span><br></pre></td></tr></table></figure>

<h3 id="4-2-输出没有比对上的序列"><a href="#4-2-输出没有比对上的序列" class="headerlink" title="4.2 输出没有比对上的序列"></a>4.2 输出没有比对上的序列</h3><p>–un-conc-gz参数输出没有比对上的序列。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> CS-1 CS-2 PS-1 PS-2</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	hisat2 -x 03.<span class="built_in">rm</span>/rRNA/rRNA \</span><br><span class="line">	-1 01.clean/<span class="variable">$i</span>.r1.clean.fq.gz \</span><br><span class="line">	-2 01.clean/<span class="variable">$i</span>.r2.clean.fq.gz \</span><br><span class="line">	--un-conc-gz 03.<span class="built_in">rm</span>/<span class="variable">$&#123;i&#125;</span>_rmr_%.fq.gz -p 10 -S 03.<span class="built_in">rm</span>/<span class="variable">$&#123;i&#125;</span>.rRNA.sam</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>这一步进行完之后便会发现fastq文件小了许多，这便是去除成功了。然后便可以继续接下来的分析了。</p>
<p>参考资料：<br>1.<a href="https://zhuanlan.zhihu.com/p/20731723">https://zhuanlan.zhihu.com/p/20731723</a><br>2.<a href="https://mp.weixin.qq.com/s/jVTmp4VJQxB6Lwxh1QmNkA">https://mp.weixin.qq.com/s/jVTmp4VJQxB6Lwxh1QmNkA</a></p>
]]></content>
      <categories>
        <category>RNA-seq</category>
      </categories>
      <tags>
        <tag>RNA-seq</tag>
      </tags>
  </entry>
  <entry>
    <title>RNA-seq分析(2)之Hisat2+FeatureCounts+DEseq2</title>
    <url>/2022/08/17/RNA-seq%E5%88%86%E6%9E%90%E4%B9%8BHisat2+FeatureCounts/</url>
    <content><![CDATA[<h2 id="1-Hisat2-mapping"><a href="#1-Hisat2-mapping" class="headerlink" title="1.Hisat2 mapping"></a>1.Hisat2 mapping</h2><p>Hisat2 mapping,-x即参考基因组所在的文件夹位置，-1、-2分别为read1和read2的fastq文件，然后将比对产生的sam文件转为bam并进行排序。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> CS-1 CS-2 PS-1 PS-2</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	hisat2 -x ~/00.reference/index/Dro.mel/genome</span><br><span class="line">	\ -1 03.<span class="built_in">cut</span>/<span class="variable">$i</span>.r1.trimmed.fq.gz</span><br><span class="line">	\ -2 03.<span class="built_in">cut</span>/<span class="variable">$i</span>.r2.trimmed.fq.gz</span><br><span class="line">	\ -p 12 -S 05.mapping/<span class="variable">$i</span>.sam</span><br><span class="line">	samtools view -S -b 05.mapping/<span class="variable">$i</span>.sam -o 05.mapping/<span class="variable">$i</span>.bam</span><br><span class="line">	samtools <span class="built_in">sort</span> -l 9 05.mapping/<span class="variable">$i</span>.bam -o 05.mapping/<span class="variable">$i</span>.sorted.bam</span><br><span class="line">	<span class="built_in">rm</span> 05.mapping/<span class="variable">$i</span>.sam 05.mapping/<span class="variable">$i</span>.bam</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="2-FeatureCounts定量"><a href="#2-FeatureCounts定量" class="headerlink" title="2.FeatureCounts定量"></a>2.FeatureCounts定量</h2><p>-T线程数，-p双端测序，-g根据gene_id进行，设置feature-type，-t指定的必须是gtf中有的feature，同时read只有落到这些feature上才会被统计到，默认是“exon”，-g参数需要提供一个id identifier 来将feature水平的统计汇总为meta-feature水平的统计(即对一个基因来说，统计map到这个基因的exon上的reads数，以此来进行定量)，默认为gene_id，-a参考基因组gtf文件名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> CS-1 CS-2 PS-1 PS-2</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	featureCounts -p -T 10 -t exon -g gene_id -a ~/00.reference/01.Dmel/Dmel.gtf</span><br><span class="line">	\ -o 06.counts/<span class="variable">$i</span>.count.txt 05.mapping/<span class="variable">$i</span>.sorted.bam</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="3-DEseq2进行差异分析"><a href="#3-DEseq2进行差异分析" class="headerlink" title="3.DEseq2进行差异分析"></a>3.DEseq2进行差异分析</h2><p>RNA-seq进行差异分析多用raw counts数据进行分析，将counts合并之后进行差异分析。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library<span class="punctuation">(</span>DESeq2<span class="punctuation">)</span> </span><br><span class="line"></span><br><span class="line">exprSet <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;counts.txt&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line">group_list <span class="operator">&lt;-</span> <span class="built_in">rep</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;CS&quot;</span><span class="punctuation">,</span> <span class="string">&quot;PS&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> each <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#去除掉所有sample中表达量都为0的基因</span></span><br><span class="line">exprSet <span class="operator">&lt;-</span> exprSet<span class="punctuation">[</span>rowSums<span class="punctuation">(</span>exprSet<span class="punctuation">)</span> <span class="operator">&gt;</span> <span class="number">0</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#### 第一步，构建DESeq2的DESeq对象</span></span><br><span class="line">colData <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>row.names <span class="operator">=</span> colnames<span class="punctuation">(</span>exprSet<span class="punctuation">)</span><span class="punctuation">,</span>group_list <span class="operator">=</span> group_list<span class="punctuation">)</span></span><br><span class="line">dds <span class="operator">&lt;-</span> DESeqDataSetFromMatrix<span class="punctuation">(</span>countData <span class="operator">=</span> exprSet<span class="punctuation">,</span>colData <span class="operator">=</span> colData<span class="punctuation">,</span></span><br><span class="line">                              design <span class="operator">=</span> <span class="operator">~</span> group_list<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#### 第二步，进行差异表达分析</span></span><br><span class="line">dds2 <span class="operator">&lt;-</span> DESeq<span class="punctuation">(</span>dds<span class="punctuation">)</span></span><br><span class="line">res <span class="operator">&lt;-</span> results<span class="punctuation">(</span>dds2<span class="punctuation">,</span>contrast<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;group_list&quot;</span><span class="punctuation">,</span><span class="string">&quot;PS&quot;</span><span class="punctuation">,</span><span class="string">&quot;CS&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span>   <span class="comment"># 提取差异分析结果，PS组对CS组的差异分析结果</span></span><br><span class="line">resOrdered <span class="operator">&lt;-</span> res<span class="punctuation">[</span>order<span class="punctuation">(</span>res<span class="operator">$</span>padj<span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">DEG <span class="operator">&lt;-</span> as.data.frame<span class="punctuation">(</span>resOrdered<span class="punctuation">)</span></span><br><span class="line">DEG <span class="operator">&lt;-</span> na.omit<span class="punctuation">(</span>DEG<span class="punctuation">)</span></span><br><span class="line">head<span class="punctuation">(</span>DEG<span class="punctuation">)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>接下来便可以进行接下来的GO、KEGG等分析了。</p>
<p>参考资料：<br>1.<a href="https://mp.weixin.qq.com/s?__biz=MzUzMTEwODk0Ng==&amp;mid=2247497831&amp;idx=1&amp;sn=5fc90f8b4a3d0955566a869bed164cee&amp;chksm=fa453d5acd32b44c05eb25fbecda756d82b9aa052149995b437d58088582aaf44e8287907c63&amp;scene=178&amp;cur_album_id=1749887454125293572#rd">https://mp.weixin.qq.com/s?__biz=MzUzMTEwODk0Ng==&amp;mid=2247497831&amp;idx=1&amp;sn=5fc90f8b4a3d0955566a869bed164cee&amp;chksm=fa453d5acd32b44c05eb25fbecda756d82b9aa052149995b437d58088582aaf44e8287907c63&amp;scene=178&amp;cur_album_id=1749887454125293572#rd</a></p>
]]></content>
      <categories>
        <category>RNA-seq</category>
      </categories>
      <tags>
        <tag>RNA-seq</tag>
      </tags>
  </entry>
</search>
