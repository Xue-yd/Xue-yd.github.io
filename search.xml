<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2022/08/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<p>D:\SogouDownload\nodejs\node_global\hexo d</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>FCA数据库中的原始reads文件之uBAM文件</title>
    <url>/2022/08/15/FCA%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%A7%8Breads%E6%96%87%E4%BB%B6%E4%B9%8BuBAM%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>本文介绍uBAM文件：</p>
<ul>
<li>什么是uBAM文件</li>
<li>uBAM vs fastq</li>
<li>uBAM转换为fastq<span id="more"></span></li>
</ul>
<h2 id="1-什么是uBAM文件？"><a href="#1-什么是uBAM文件？" class="headerlink" title="1.什么是uBAM文件？"></a>1.什么是uBAM文件？</h2><p>uBAM文件，即unmapped or unaligned BAM文件，里面的reads是没有经过比对的，目的是为了储存原始的reads信息。</p>
<h2 id="2-uBAM-vs-fastq"><a href="#2-uBAM-vs-fastq" class="headerlink" title="2.uBAM vs fastq"></a>2.uBAM vs fastq</h2><p>相比于fastq文件来说，uBAM文件储存的信息更加丰富。由于fastq文件的格式原因，很多信息都不能存放在fastq文件中。而BAM文件中只需要加上tag信息即可。以FlyCellAtlas中的原始BAM文件为例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1	4	*	0	255	*	*	0	91	ATTGGCGACAGAT...CGGAATATATATATATGTATATAT	FFFFFFFFFFFFFFFFFFF...FFFFFFFFFFFFFFFFFF	on:Z:A00428:211:H77T5DSXY:3:1101:1090:1000@2:N:0:GCTCAACC	op:Z:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFF,FFFFFFFFF:FFFFFF	RX:Z:CATCTATTATAT	QX:Z:FFFFFFFFFF:F	CR:Z:TTGGGTAAGGAGGCAG	CY:Z:#FFFFFFFFFFFFFFF</span><br></pre></td></tr></table></figure>

<p>RX tag即UMI信息，QX tag为UMI测序质量信息，CR tag为cell barcode序列，CY tag为cell barcode的测序质量信息。对于单细胞测序而言，一个uBAM文件即将R1(cell barcode + UMI)和R2(真正的reads)的fastq信息都包含在内。</p>
<h2 id="3-uBAM转换为cellranger需要的fastq"><a href="#3-uBAM转换为cellranger需要的fastq" class="headerlink" title="3.uBAM转换为cellranger需要的fastq"></a>3.uBAM转换为cellranger需要的fastq</h2><p>cellranger处理的fastq文件，有两个reads文件和index文件，index文件不是必需的。R1文件中储存的是cell barcode+UMI序列相关信息，R2文件中储存的是真正的测序序列。对于R2文件来说，直接用samtools fastq即可完成转换。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">samtools  fastq sample1.bam &gt; fastq/sample1-1_S1_L001_R2_001.fastq.gz</span><br></pre></td></tr></table></figure>

<p>对于R1文件而言，就有些复杂，我们可以首先将BAM文件中的UMI、barcode序列信息进行提取，然后再用samtools完成转换。这是一个笨方法，而且耗费资源，速度也比较慢，但是不需要写脚本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sample1-1 sample1-2 sample1-3</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	samtools view <span class="variable">$i</span>.bam | awk <span class="string">&#x27;&#123;print $1&quot;\t&quot;$2&quot;\t&quot;$3&quot;\t&quot;$4&quot;\t&quot;$5&quot;\t&quot;$6&quot;\t&quot;$7&quot;\t&quot;$8&quot;\t&quot;$9&quot;\t&quot;$16$14&quot;\t&quot;$17$15&#125;&#x27;</span> &gt; <span class="variable">$i</span>.tmp;		<span class="comment">#提取序列基本信息和barcode(16列)和UMI(14列)信息，17、15列为相对应的质量信息</span></span><br><span class="line">	sed -i <span class="string">&#x27;1,$s/CR:Z://g&#x27;</span> <span class="variable">$i</span>.tmp;    <span class="comment">#处理文件，去掉tag标签，只保留序列</span></span><br><span class="line">	sed -i <span class="string">&#x27;1,$s/CY:Z://g&#x27;</span> <span class="variable">$i</span>.tmp;</span><br><span class="line">	sed -i <span class="string">&#x27;1,$s/RX:Z://g&#x27;</span> <span class="variable">$i</span>.tmp;</span><br><span class="line">	sed -i <span class="string">&#x27;1,$s/QX:Z://g&#x27;</span> <span class="variable">$i</span>.tmp;</span><br><span class="line">	<span class="built_in">cat</span> header <span class="variable">$i</span>.tmp &gt; <span class="variable">$i</span>.sam;		<span class="comment">#加上头文件</span></span><br><span class="line">	<span class="built_in">rm</span> <span class="variable">$i</span>.tmp;</span><br><span class="line">	samtools view -@ 10 -bS <span class="variable">$i</span>.sam -o <span class="variable">$i</span>.R1.bam;	<span class="comment">#转换为bam文件，节省空间</span></span><br><span class="line">	<span class="built_in">rm</span> <span class="variable">$i</span>.sam;</span><br><span class="line">	samtools fastq <span class="variable">$i</span>.R1.bam &gt; fastq/<span class="variable">$i_S1_L001_R1_001</span>.fastq; <span class="comment">#BAM转换为fastq（reads1）</span></span><br><span class="line">	samtools fastq <span class="variable">$i</span>.bam &gt; fastq/<span class="variable">$i_S1_L001_R2_001</span>.fastq;    <span class="comment">#（reads2）</span></span><br><span class="line">	gzip fastq/<span class="variable">$i</span>.R1_001.fastq;</span><br><span class="line">	gzip fastq/<span class="variable">$i</span>.R2_001.fastq;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>完成转换之后就可以走接下来的cellranger流程啦！</p>
]]></content>
      <categories>
        <category>scRNA-seq</category>
      </categories>
      <tags>
        <tag>scRNA-seq</tag>
        <tag>raw reads</tag>
        <tag>10X genomics</tag>
      </tags>
  </entry>
  <entry>
    <title>scRNA-seq分析之cellranger count</title>
    <url>/2022/08/15/scRNA-seq%E5%88%86%E6%9E%90%E4%B9%8Bcellranger-count/</url>
    <content><![CDATA[<p>本文介绍从fastq文件开始，用cellranger进行定量：</p>
<ul>
<li>用cellranger构建参考基因组<ul>
<li>cellranger mkgtf</li>
<li>cellranger mkref</li>
</ul>
</li>
<li>cellranger count<span id="more"></span></li>
</ul>
<h2 id="1-生成cellranger参考基因组"><a href="#1-生成cellranger参考基因组" class="headerlink" title="1. 生成cellranger参考基因组"></a>1. 生成cellranger参考基因组</h2><p>cellranger官方提供有小鼠和人类的参考基因组，其他物种的需要用mkref自己产生。</p>
<h3 id="1-1-生成用于产生参考基因组的gtf文件"><a href="#1-1-生成用于产生参考基因组的gtf文件" class="headerlink" title="1.1 生成用于产生参考基因组的gtf文件"></a>1.1 生成用于产生参考基因组的gtf文件</h3><p>–attribute参数用于指定gtf文件中的biotype。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cellranger mkgtf Dmel.gtf Dmel.BDGP6.32.104.filtered.gtf \</span><br><span class="line">--attribute=gene_biotype:protein_coding \</span><br><span class="line">--attribute=gene_biotype:lncRNA \</span><br><span class="line">--attribute=gene_biotype:antisense</span><br></pre></td></tr></table></figure>

<h3 id="1-2-生成参考基因组文件"><a href="#1-2-生成参考基因组文件" class="headerlink" title="1.2 生成参考基因组文件"></a>1.2 生成参考基因组文件</h3><p>接下来根据上一步产生的gtf文件生成参考基因组文件，–genome参数指定接下来产生的参考基因组的文件夹名字，–fasta为下载的参考基因组的序列文件，–gtf为上一步产生的gtf文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cellranger mkref --genome=Dmel.genome \</span><br><span class="line">--fasta=Dme.dna.fa \</span><br><span class="line">--gtf=Dmel.BDGP6.32.104.filtered.gtf</span><br></pre></td></tr></table></figure>

<h2 id="2-cellranger-count定量"><a href="#2-cellranger-count定量" class="headerlink" title="2. cellranger count定量"></a>2. cellranger count定量</h2><p>有了fastq和参考基因组，接下来就可以定量了。<br>–id输出文件夹名字，–transcriptome参考基因组所在的文件夹，–fastqs为fastq序列所在的文件名，–sample用于分析的文件prefix，–localcores线程数，–localmem内存数，加上–nosecondary参数不进行下游聚类分析。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cellranger count --<span class="built_in">id</span>=run_sample1 \</span><br><span class="line">--fastqs=/storage/XYD/mywork/fastq \</span><br><span class="line">--sample=sample1-44,sample1-48,sample1-49,sample1-56 \</span><br><span class="line">--transcriptome=/storage/XYD/00.reference/01.Dmel/Dmel.genome \</span><br><span class="line">--localcores=12 \</span><br><span class="line">--localmem=128 \</span><br><span class="line">--nosecondary</span><br></pre></td></tr></table></figure>

<p>定量结束之后，产生的文件夹里outs&#x2F;下会有一个网页文件web_summary.html，打开会看到下图的信息。</p>
<p><img src="/pics/2022-0815-cellranger-count-1.jpg" alt="alt 图标"></p>
<p>发现有个warning：Low fraction reads in cells，显示我的数据大概在54％左右，理想情况下应该为70%，官方的解释有两种可能：1.环境RNA水平过高；2.有一部分细胞RNA content很低，若是第二种情况，那么可以在count步骤加上–force-cells参数，设置一下自己预期的细胞数量，从而去掉RNA含量低的细胞。但是我设置了这个参数之后，还是会有这个warning，这可能说明细胞中reads比例低不是第二种情况造成的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cellranger count --<span class="built_in">id</span>=run_sample1 \</span><br><span class="line">--fastqs=/storage/XYD/mywork/fastq \</span><br><span class="line">--sample=sample1-44,sample1-48,sample1-49,sample1-56 \</span><br><span class="line">--transcriptome=/storage/XYD/00.reference/01.Dmel/Dmel.genome \</span><br><span class="line">--localcores=12 \</span><br><span class="line">--localmem=128 \</span><br><span class="line">--nosecondary</span><br><span class="line">--force-cells=13000</span><br></pre></td></tr></table></figure>

<p>参考资料：<br>1.<a href="https://kb.10xgenomics.com/hc/en-us/articles/360003919491-How-to-interpret-the-Fraction-Reads-in-Cells-metric-">https://kb.10xgenomics.com/hc/en-us/articles/360003919491-How-to-interpret-the-Fraction-Reads-in-Cells-metric-</a></p>
]]></content>
      <categories>
        <category>scRNA-seq</category>
        <category>10X genomics</category>
      </categories>
      <tags>
        <tag>scRNA-seq</tag>
        <tag>10X genomics</tag>
      </tags>
  </entry>
  <entry>
    <title>Seurat包合并多个sample datasets</title>
    <url>/2022/08/17/Seurat%E5%8C%85%E5%90%88%E5%B9%B6%E5%A4%9A%E4%B8%AAsample-datasets/</url>
    <content><![CDATA[<p>很多情况下，我们需要将多个sample dataset合并在一起，然后进行接下来的分析。Seurat v4官方提供了可以用于整合数据集的函数：FindIntegrationAnchors()和IntegrateData()。</p>
<span id="more"></span>

<h2 id="1-导入数据，设置SeuratObject"><a href="#1-导入数据，设置SeuratObject" class="headerlink" title="1.导入数据，设置SeuratObject"></a>1.导入数据，设置SeuratObject</h2><p>首先读入数据，然后创建SeuratObject对象。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library<span class="punctuation">(</span>Seurat<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">data1 <span class="operator">&lt;-</span> Read10X<span class="punctuation">(</span>data.dir <span class="operator">=</span> <span class="string">&quot;D:/000 MyWork/000 MyProject/000 scVariants/sample1&quot;</span><span class="punctuation">,</span></span><br><span class="line">	gene.column <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">data2 <span class="operator">&lt;-</span> Read10X<span class="punctuation">(</span>data.dir <span class="operator">=</span> <span class="string">&quot;D:/000 MyWork/000 MyProject/000 scVariants/sample2&quot;</span><span class="punctuation">,</span></span><br><span class="line">	gene.column <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">data1 <span class="operator">&lt;-</span> CreateSeuratObject<span class="punctuation">(</span>counts <span class="operator">=</span> data1<span class="punctuation">,</span>project <span class="operator">=</span> <span class="string">&quot;sample1&quot;</span><span class="punctuation">,</span></span><br><span class="line">	min.cells <span class="operator">=</span> <span class="number">3</span><span class="punctuation">,</span>min.features <span class="operator">=</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">	assay <span class="operator">=</span> <span class="string">&quot;RNA&quot;</span><span class="punctuation">)</span></span><br><span class="line">data2 <span class="operator">&lt;-</span> CreateSeuratObject<span class="punctuation">(</span>counts <span class="operator">=</span> data2<span class="punctuation">,</span>project <span class="operator">=</span> <span class="string">&quot;sample2&quot;</span><span class="punctuation">,</span></span><br><span class="line">	min.cells <span class="operator">=</span> <span class="number">3</span><span class="punctuation">,</span>min.features <span class="operator">=</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">	assay <span class="operator">=</span> <span class="string">&quot;RNA&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>接下来分别对两个数据各自进行Normalize，并鉴定variable features,最后选择两个datasets中repeatedly variable features进行integration。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">data.list <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span>data1<span class="punctuation">,</span>data2<span class="punctuation">)</span></span><br><span class="line">data.list <span class="operator">&lt;-</span> lapply<span class="punctuation">(</span>X <span class="operator">=</span> data.list<span class="punctuation">,</span> FUN <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">	x <span class="operator">&lt;-</span> NormalizeData<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">	x <span class="operator">&lt;-</span> FindVariableFeatures<span class="punctuation">(</span>x<span class="punctuation">,</span> selection.method <span class="operator">=</span> <span class="string">&quot;vst&quot;</span><span class="punctuation">,</span> nfeatures <span class="operator">=</span> <span class="number">2000</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">features <span class="operator">&lt;-</span> SelectIntegrationFeatures<span class="punctuation">(</span>object.list <span class="operator">=</span> data.list<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h2 id="2-进行整合"><a href="#2-进行整合" class="headerlink" title="2.进行整合"></a>2.进行整合</h2><p>然后，使用FindIntegrationAnchors()函数确定Anchor，这个函数以SeuratObject函数作为输入，然后再利用IntegrateData()函数进行整合。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">data.anchors <span class="operator">&lt;-</span> FindIntegrationAnchors<span class="punctuation">(</span>object.list <span class="operator">=</span> data.list<span class="punctuation">,</span></span><br><span class="line">anchor.features <span class="operator">=</span> features<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">data.combined <span class="operator">&lt;-</span> IntegrateData<span class="punctuation">(</span>anchorset <span class="operator">=</span> data.anchors<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>这样整合之后的数据只包括了前面鉴定到的features信息，后续的scale等等分析都仅基于这些features，默认是2000个，因此数据会小很多。</p>
<h2 id="3-整合后的分析"><a href="#3-整合后的分析" class="headerlink" title="3.整合后的分析"></a>3.整合后的分析</h2><p>接下来就可以进行后续的分析了。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DefaultAssay<span class="punctuation">(</span>data.combined<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="string">&quot;integrated&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Run the standard workflow for visualization and clustering</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> ScaleData<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> verbose <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> RunPCA<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> npcs <span class="operator">=</span> <span class="number">30</span><span class="punctuation">,</span> verbose <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> FindNeighbors<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;pca&quot;</span><span class="punctuation">,</span> dims <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">)</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> FindClusters<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> resolution <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> RunUMAP<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;pca&quot;</span><span class="punctuation">,</span> dims <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Visualization</span></span><br><span class="line">p1 <span class="operator">&lt;-</span> DimPlot<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;umap&quot;</span><span class="punctuation">)</span></span><br><span class="line">p2 <span class="operator">&lt;-</span> DimPlot<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;umap&quot;</span><span class="punctuation">,</span> label <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> repel <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">p1</span><br><span class="line">p2</span><br></pre></td></tr></table></figure>

<p>参考：<a href="https://satijalab.org/seurat/articles/integration_introduction.html">https://satijalab.org/seurat/articles/integration_introduction.html</a></p>
]]></content>
      <categories>
        <category>R</category>
        <category>Seurat</category>
      </categories>
      <tags>
        <tag>scRNA-seq</tag>
        <tag>Seurat</tag>
      </tags>
  </entry>
  <entry>
    <title>RNA-seq分析(1)之数据质控</title>
    <url>/2022/08/14/RNA-seq%E5%88%86%E6%9E%90%E4%B9%8B%E6%95%B0%E6%8D%AE%E8%B4%A8%E6%8E%A7/</url>
    <content><![CDATA[<p>本文介绍RNA-seq上游分析之数据质控：</p>
<ul>
<li>fastqc质控<ul>
<li>去除接头序列</li>
<li>reads trim</li>
</ul>
</li>
<li>去除rRNA序列<ul>
<li>rRNA index</li>
<li>反向mapping<span id="more"></span></li>
</ul>
</li>
</ul>
<h2 id="1-fastq文件质控"><a href="#1-fastq文件质控" class="headerlink" title="1.fastq文件质控"></a>1.fastq文件质控</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastq -f fastq -t 10 -o ./ ./myfastq_r1.fq.gz ./myfastq_r2.fq.gz</span><br></pre></td></tr></table></figure>

<p>之后会产生质控报告和zip文件，查看报告，可以看到base quality、GC content等信息。质控报告每个版块的具体的意义参考(<a href="https://zhuanlan.zhihu.com/p/20731723">https://zhuanlan.zhihu.com/p/20731723</a> )。</p>
<h2 id="2-去除接头序列"><a href="#2-去除接头序列" class="headerlink" title="2.去除接头序列"></a>2.去除接头序列</h2><p>RNA-seq建库测序时，会在样品末端加上接头序列，在后续的步骤中需要去除。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage:</span><br><span class="line">    cutadapt -a ADAPTER [options] [-o output.fastq] input.fastq</span><br><span class="line"></span><br><span class="line">For paired-end reads:</span><br><span class="line">    cutadapt -a ADAPT1 -A ADAPT2 [options] -o out1.fastq -p out2.fastq in1.fastq                            in2.fastq</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>去除接头序列，这里我用cutadapt，对于双端测序来说，需要去掉read1和read2两个序列，参数-a和-A分别是read1和read2序列的3’端序列。-e即error rate,-n为2即最多每条read最多去掉两个adapter，-m为20去掉adapter之后若reads长度小于20，则去掉这条reads，–pair-filter这个参数对于双端测序而言，read1和read2都有可能检测到接头。如果选择any，则只要两个中其中一个检测到接头，read1和read2均舍弃；如果选择both，则必须两个都检测到接头，read1和read2才舍弃，-j线程数，-q [5’CUTOFF,]3’CUTOFF参数，quality cutoff，去掉5’端、3’端碱基质量低于该值。双端测序需要提供两个值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cutadapt -a AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC -A AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT</span><br><span class="line">\ -e 0.1 -O 5 -n 2 -m 20 --pair-filter both -q 20,20 -j 10</span><br><span class="line">\ -o 01.clean/CS-1.clean.r1.fq.gz -p 01.clean/CS-1.clean.r2.fq.gz</span><br><span class="line">\ 00.rawdata/CS-1-LEG8830_L2_1.fq.gz 00.rawdata/CS-1-LEG8830_L2_2.fq.gz</span><br></pre></td></tr></table></figure>

<h2 id="3-去除测序刚开始时不稳定的reads"><a href="#3-去除测序刚开始时不稳定的reads" class="headerlink" title="3.去除测序刚开始时不稳定的reads"></a>3.去除测序刚开始时不稳定的reads</h2><p>测序仪进行测序时，刚开始10bp左右的reads测序不稳定，可以进行适当修剪。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cutadapt -u 10 -o trimmed.fastq input_reads.fastq</span><br></pre></td></tr></table></figure>

<h2 id="4-去除rRNA序列"><a href="#4-去除rRNA序列" class="headerlink" title="4.去除rRNA序列"></a>4.去除rRNA序列</h2><p>有时候质控得到的结果中GC含量为双峰，这可能是一些RNA过表达引起的GC偏好，需要去除一些rRNA序列或是其他我们并不关心的序列，但是也并不必过于担忧，RNA-seq中本身就有一些表达量高的序列，所以质控报告中只要一些如碱基质量等的关键因素满足要求，后续只是进行差异表达等的分析，不去除也是可以的。<br>首先，我们需要在NCBI数据库中下载rRNA序列的fasta文件，然后用Hisat2进行比对，保留没有比对上的序列即可,过程如下：</p>
<h3 id="4-1-构建索引"><a href="#4-1-构建索引" class="headerlink" title="4.1 构建索引"></a>4.1 构建索引</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hisat2-build -p 10 rRNA.fasta ./rRNA/rRNA</span><br></pre></td></tr></table></figure>

<h3 id="4-2-输出没有比对上的序列"><a href="#4-2-输出没有比对上的序列" class="headerlink" title="4.2 输出没有比对上的序列"></a>4.2 输出没有比对上的序列</h3><p>–un-conc-gz参数输出没有比对上的序列。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> CS-1 CS-2 PS-1 PS-2</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	hisat2 -x 03.<span class="built_in">rm</span>/rRNA/rRNA \</span><br><span class="line">	-1 01.clean/<span class="variable">$i</span>.r1.clean.fq.gz \</span><br><span class="line">	-2 01.clean/<span class="variable">$i</span>.r2.clean.fq.gz \</span><br><span class="line">	--un-conc-gz 03.<span class="built_in">rm</span>/<span class="variable">$&#123;i&#125;</span>_rmr_%.fq.gz -p 10 -S 03.<span class="built_in">rm</span>/<span class="variable">$&#123;i&#125;</span>.rRNA.sam</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>这一步进行完之后便会发现fastq文件小了许多，这便是去除成功了。然后便可以继续接下来的分析了。</p>
<p>参考资料：<br>1.<a href="https://zhuanlan.zhihu.com/p/20731723">https://zhuanlan.zhihu.com/p/20731723</a><br>2.<a href="https://mp.weixin.qq.com/s/jVTmp4VJQxB6Lwxh1QmNkA">https://mp.weixin.qq.com/s/jVTmp4VJQxB6Lwxh1QmNkA</a></p>
]]></content>
      <categories>
        <category>RNA-seq</category>
      </categories>
      <tags>
        <tag>RNA-seq</tag>
      </tags>
  </entry>
  <entry>
    <title>RNA-seq分析(2)之Hisat2+FeatureCounts+DEseq2</title>
    <url>/2022/08/17/RNA-seq%E5%88%86%E6%9E%90%E4%B9%8BHisat2+FeatureCounts/</url>
    <content><![CDATA[<p>本文介绍RNA-seq流程：</p>
<ul>
<li>Hisat2 mapping</li>
<li>FeatureCounts 定量</li>
<li>DEseq2差异分析<span id="more"></span></li>
</ul>
<h2 id="1-Hisat2-mapping"><a href="#1-Hisat2-mapping" class="headerlink" title="1.Hisat2 mapping"></a>1.Hisat2 mapping</h2><p>Hisat2 mapping,-x即参考基因组所在的文件夹位置，-1、-2分别为read1和read2的fastq文件，然后将比对产生的sam文件转为bam并进行排序。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> CS-1 CS-2 PS-1 PS-2</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	hisat2 -x ~/00.reference/index/Dro.mel/genome</span><br><span class="line">	\ -1 03.<span class="built_in">cut</span>/<span class="variable">$i</span>.r1.trimmed.fq.gz</span><br><span class="line">	\ -2 03.<span class="built_in">cut</span>/<span class="variable">$i</span>.r2.trimmed.fq.gz</span><br><span class="line">	\ -p 12 -S 05.mapping/<span class="variable">$i</span>.sam</span><br><span class="line">	samtools view -S -b 05.mapping/<span class="variable">$i</span>.sam -o 05.mapping/<span class="variable">$i</span>.bam</span><br><span class="line">	samtools <span class="built_in">sort</span> -l 9 05.mapping/<span class="variable">$i</span>.bam -o 05.mapping/<span class="variable">$i</span>.sorted.bam</span><br><span class="line">	<span class="built_in">rm</span> 05.mapping/<span class="variable">$i</span>.sam 05.mapping/<span class="variable">$i</span>.bam</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="2-FeatureCounts定量"><a href="#2-FeatureCounts定量" class="headerlink" title="2.FeatureCounts定量"></a>2.FeatureCounts定量</h2><p>-T线程数，-p双端测序，-g根据gene_id进行，设置feature-type，-t指定的必须是gtf中有的feature，同时read只有落到这些feature上才会被统计到，默认是“exon”，-g参数需要提供一个id identifier 来将feature水平的统计汇总为meta-feature水平的统计(即对一个基因来说，统计map到这个基因的exon上的reads数，以此来进行定量)，默认为gene_id，-a参考基因组gtf文件名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> CS-1 CS-2 PS-1 PS-2</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	featureCounts -p -T 10 -t exon -g gene_id -a ~/00.reference/01.Dmel/Dmel.gtf</span><br><span class="line">	\ -o 06.counts/<span class="variable">$i</span>.count.txt 05.mapping/<span class="variable">$i</span>.sorted.bam</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="3-DEseq2进行差异分析"><a href="#3-DEseq2进行差异分析" class="headerlink" title="3.DEseq2进行差异分析"></a>3.DEseq2进行差异分析</h2><p>RNA-seq进行差异分析多用raw counts数据进行分析，将counts合并之后进行差异分析。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library<span class="punctuation">(</span>DESeq2<span class="punctuation">)</span> </span><br><span class="line"></span><br><span class="line">exprSet <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;counts.txt&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line">group_list <span class="operator">&lt;-</span> <span class="built_in">rep</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;CS&quot;</span><span class="punctuation">,</span> <span class="string">&quot;PS&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> each <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#去除掉所有sample中表达量都为0的基因</span></span><br><span class="line">exprSet <span class="operator">&lt;-</span> exprSet<span class="punctuation">[</span>rowSums<span class="punctuation">(</span>exprSet<span class="punctuation">)</span> <span class="operator">&gt;</span> <span class="number">0</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#### 第一步，构建DESeq2的DESeq对象</span></span><br><span class="line">colData <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>row.names <span class="operator">=</span> colnames<span class="punctuation">(</span>exprSet<span class="punctuation">)</span><span class="punctuation">,</span>group_list <span class="operator">=</span> group_list<span class="punctuation">)</span></span><br><span class="line">dds <span class="operator">&lt;-</span> DESeqDataSetFromMatrix<span class="punctuation">(</span>countData <span class="operator">=</span> exprSet<span class="punctuation">,</span>colData <span class="operator">=</span> colData<span class="punctuation">,</span></span><br><span class="line">                              design <span class="operator">=</span> <span class="operator">~</span> group_list<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#### 第二步，进行差异表达分析</span></span><br><span class="line">dds2 <span class="operator">&lt;-</span> DESeq<span class="punctuation">(</span>dds<span class="punctuation">)</span></span><br><span class="line">res <span class="operator">&lt;-</span> results<span class="punctuation">(</span>dds2<span class="punctuation">,</span>contrast<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;group_list&quot;</span><span class="punctuation">,</span><span class="string">&quot;PS&quot;</span><span class="punctuation">,</span><span class="string">&quot;CS&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span>   <span class="comment"># 提取差异分析结果，PS组对CS组的差异分析结果</span></span><br><span class="line">resOrdered <span class="operator">&lt;-</span> res<span class="punctuation">[</span>order<span class="punctuation">(</span>res<span class="operator">$</span>padj<span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">DEG <span class="operator">&lt;-</span> as.data.frame<span class="punctuation">(</span>resOrdered<span class="punctuation">)</span></span><br><span class="line">DEG <span class="operator">&lt;-</span> na.omit<span class="punctuation">(</span>DEG<span class="punctuation">)</span></span><br><span class="line">head<span class="punctuation">(</span>DEG<span class="punctuation">)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>接下来便可以进行接下来的GO、KEGG等分析了。</p>
<p>参考资料：<br>1.<a href="https://mp.weixin.qq.com/s?__biz=MzUzMTEwODk0Ng==&amp;mid=2247497831&amp;idx=1&amp;sn=5fc90f8b4a3d0955566a869bed164cee&amp;chksm=fa453d5acd32b44c05eb25fbecda756d82b9aa052149995b437d58088582aaf44e8287907c63&amp;scene=178&amp;cur_album_id=1749887454125293572#rd">https://mp.weixin.qq.com/s?__biz=MzUzMTEwODk0Ng==&amp;mid=2247497831&amp;idx=1&amp;sn=5fc90f8b4a3d0955566a869bed164cee&amp;chksm=fa453d5acd32b44c05eb25fbecda756d82b9aa052149995b437d58088582aaf44e8287907c63&amp;scene=178&amp;cur_album_id=1749887454125293572#rd</a></p>
]]></content>
      <categories>
        <category>RNA-seq</category>
      </categories>
      <tags>
        <tag>RNA-seq</tag>
      </tags>
  </entry>
  <entry>
    <title>Seurat数据结构</title>
    <url>/2022/08/24/Seurat%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<ul>
<li>SeuratObject数据结构<ul>
<li>Assays</li>
<li>meta.data</li>
<li>active.assay</li>
<li>active.ident</li>
<li>reduction</li>
</ul>
</li>
<li>提取数据<ul>
<li>提取基因ID和细胞ID</li>
<li>提取细胞坐标信息</li>
<li>提取表达矩阵</li>
<li>提取平均表达量</li>
<li>聚类细胞数目与比例统计</li>
<li>修改聚类后的idents</li>
<li>提取部分Seurat对象<span id="more"></span></li>
</ul>
</li>
</ul>
<h2 id="1-SeuratObject数据结构"><a href="#1-SeuratObject数据结构" class="headerlink" title="1. SeuratObject数据结构"></a>1. SeuratObject数据结构</h2><p>首先，先来了解一下SeuratObject的数据结构和格式。<br><img src="/pics/2022-0824-Seurat%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.png" alt="alt 图标"></p>
<p>图片来源：<a href="https://www.jianshu.com/p/13142bf51e81">https://www.jianshu.com/p/13142bf51e81</a></p>
<h3 id="1-1-Assays"><a href="#1-1-Assays" class="headerlink" title="1.1 Assays"></a>1.1 Assays</h3><p>默认情况下Seurat对象的Assay是”RNA”,在后续的数据处理过程中，会产生新的。例如，integration之后、SCTransform之后等过程处理之后，都会产生新的Assay，存放的是经过处理之后产生的矩阵。修改默认的Assay可以通过DefaultAssay函数，也可通过 @active.assay查看默认的assay。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">pbmc<span class="operator">@</span>active.assay</span><br><span class="line">DefaultAssay<span class="punctuation">(</span>pbmc<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="string">&quot;RNA&quot;</span></span><br></pre></td></tr></table></figure>
<p>在assay数据中，counts是原始数据，data是normalize（归一化）之后的数据，scale.data是scale（标准化）之后的数据。var.features是高变的features，默认是2000个。调用方法：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">pbmc<span class="operator">@</span>assays<span class="operator">$</span>RNA<span class="operator">@</span>counts</span><br><span class="line">pbmc<span class="punctuation">[[</span><span class="string">&quot;RNA&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">@</span>counts</span><br></pre></td></tr></table></figure>

<h3 id="1-2-meta-data"><a href="#1-2-meta-data" class="headerlink" title="1.2 meta.data"></a>1.2 meta.data</h3><p>meta.data数据中储存的是细胞的相关信息，主要包括：orig.ident,nCount_RNA,nFeature_RNA,percent.mito,RNA_snn_res.0.4,seurat_clusters等。orig.ident是细胞的来源信息，例如我的是3个样本合并之后的dataset，那么这个里面就是sample1、sample2、sample3，nCount_RNA是每个细胞中RNA数量，nFeature_RNA同理，percent.mito每个细胞中的线粒体基因占比信息，seurat_clusters是细胞聚类之后被归为哪一类。调用方法：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">pbmc<span class="operator">$</span>orig.ident</span><br><span class="line">pbmc<span class="punctuation">[[</span><span class="string">&quot;orig.ident&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>

<h3 id="1-3-active-assay"><a href="#1-3-active-assay" class="headerlink" title="1.3 active.assay"></a>1.3 active.assay</h3><p>查看当前的默认assay。调用方式：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">pbmc<span class="operator">@</span>active.assays</span><br></pre></td></tr></table></figure>

<h3 id="1-4-active-ident"><a href="#1-4-active-ident" class="headerlink" title="1.4 active.ident"></a>1.4 active.ident</h3><p>查看使用的分群方式。调用方式：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">pbmc<span class="operator">@</span>active.ident</span><br></pre></td></tr></table></figure>

<h3 id="1-5-reduction"><a href="#1-5-reduction" class="headerlink" title="1.5 reduction"></a>1.5 reduction</h3><p>储存降维之后每个细胞的坐标信息，3种方法分别在：pca、tsne、umap。坐标信息在cell.embeddings中；每个基因对pca成分的贡献度在feature.loadings中。assay.used指这个降维使用的assay。调用方法：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">head<span class="punctuation">(</span>pbmc<span class="operator">@</span>reduction<span class="operator">$</span>umap<span class="operator">@</span>cell.embeddings<span class="punctuation">)</span></span><br><span class="line">head<span class="punctuation">(</span>pbmc<span class="operator">@</span>reduction<span class="operator">$</span>umap<span class="operator">@</span>feature.loadings<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h2 id="2-提取数据"><a href="#2-提取数据" class="headerlink" title="2. 提取数据"></a>2. 提取数据</h2><h3 id="2-1-提取基因ID与细胞ID"><a href="#2-1-提取基因ID与细胞ID" class="headerlink" title="2.1 提取基因ID与细胞ID"></a>2.1 提取基因ID与细胞ID</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rownames<span class="punctuation">(</span>pbmc<span class="punctuation">)</span> <span class="comment">#提取基因ID</span></span><br><span class="line">colnames<span class="punctuation">(</span>pbmc<span class="punctuation">)</span> <span class="comment">#提取细胞ID</span></span><br><span class="line">Cells<span class="punctuation">(</span>pbmc<span class="punctuation">)</span>    <span class="comment">#提取细胞ID</span></span><br><span class="line"></span><br><span class="line">WhichCells<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>ident<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="comment">#按照idents提取细胞ID</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照idents提取细胞ID，加上invert表示反向提取，除1,2之外的细胞</span></span><br><span class="line">WhichCells<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>ident<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">,</span>invert<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">)</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照gene1的表达量提取细胞ID，slot指定counts即原始数据</span></span><br><span class="line">WhichCells<span class="punctuation">(</span>pbmc<span class="punctuation">,</span><span class="built_in">expression</span><span class="operator">=</span>gene1<span class="operator">&gt;</span><span class="number">1</span><span class="punctuation">,</span>slot<span class="operator">=</span><span class="string">&quot;counts&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-2-提取细胞坐标信息"><a href="#2-2-提取细胞坐标信息" class="headerlink" title="2.2 提取细胞坐标信息"></a>2.2 提取细胞坐标信息</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">Embeddings<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>reduction<span class="operator">=</span><span class="string">&quot;umap&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-3-提取表达矩阵"><a href="#2-3-提取表达矩阵" class="headerlink" title="2.3 提取表达矩阵"></a>2.3 提取表达矩阵</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#提取所有细胞的表达矩阵</span></span><br><span class="line">raw <span class="operator">&lt;-</span> as.matrix<span class="punctuation">(</span>GetAssayData<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>slot<span class="operator">=</span><span class="string">&quot;counts&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">raw <span class="operator">&lt;-</span> as.matrix<span class="punctuation">(</span>pbmc<span class="operator">@</span>assays<span class="operator">$</span>RNA<span class="operator">@</span>counts<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#提取idents为5的细胞表达矩阵</span></span><br><span class="line">raw5 <span class="operator">&lt;-</span> as.matrix<span class="punctuation">(</span>GetAssayData<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>slot<span class="operator">=</span><span class="string">&quot;counts&quot;</span><span class="punctuation">)</span><span class="punctuation">[</span><span class="punctuation">,</span>WhichCells<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>ident<span class="operator">=</span><span class="string">&quot;5&quot;</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-4-提取平均表达量"><a href="#2-4-提取平均表达量" class="headerlink" title="2.4 提取平均表达量"></a>2.4 提取平均表达量</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">cluster.averages <span class="operator">&lt;-</span> AverageExpression<span class="punctuation">(</span>pbmc<span class="punctuation">)</span></span><br><span class="line">write.table<span class="punctuation">(</span>cluster.averages<span class="punctuation">[[</span><span class="string">&quot;RNA&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="operator">:</span><span class="number">15</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="string">&quot;cluster.averages.txt&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-5-聚类细胞数目与比例统计"><a href="#2-5-聚类细胞数目与比例统计" class="headerlink" title="2.5 聚类细胞数目与比例统计"></a>2.5 聚类细胞数目与比例统计</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看每个cluster的细胞数目</span></span><br><span class="line">table<span class="punctuation">(</span>Idents<span class="punctuation">(</span>pbmc<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">table<span class="punctuation">(</span>pbmc<span class="operator">$</span>RNA_snn_res.0.4<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#统计每个样本的细胞数目</span></span><br><span class="line">table<span class="punctuation">(</span>pbmc<span class="operator">$</span>orig.ident<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将cluster和样本来源一起统计</span></span><br><span class="line">table<span class="punctuation">(</span>Idents<span class="punctuation">(</span>pbmc<span class="punctuation">)</span><span class="punctuation">,</span>pbmc<span class="operator">$</span>orig.ident<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看每个cluster细胞数目占总细胞的比例</span></span><br><span class="line">prop.table<span class="punctuation">(</span>table<span class="punctuation">(</span>Idents<span class="punctuation">(</span>pbmc<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">prop.table<span class="punctuation">(</span>table<span class="punctuation">(</span>pbmc<span class="operator">$</span>RNA_snn_res.0.4<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-6-修改聚类后的idents"><a href="#2-6-修改聚类后的idents" class="headerlink" title="2.6 修改聚类后的idents"></a>2.6 修改聚类后的idents</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">pbmc <span class="operator">&lt;-</span> RenameIdents<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>`<span class="number">0</span>`=&quot;B cells&quot;,`1`=&quot;NK cells&quot;)</span><br></pre></td></tr></table></figure>

<h3 id="2-7-提取部分Seurat对象"><a href="#2-7-提取部分Seurat对象" class="headerlink" title="2.7 提取部分Seurat对象"></a>2.7 提取部分Seurat对象</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 按照细胞ID提取</span></span><br><span class="line">subset<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>cells<span class="operator">=</span>cells<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照cluster提取</span></span><br><span class="line">subset<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>ident<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">subset<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>ident<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">,</span>invert<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>参考<br>1.<a href="https://www.jianshu.com/p/13142bf51e81">https://www.jianshu.com/p/13142bf51e81</a><br>2.<a href="https://www.jianshu.com/p/1db7c28249d4">https://www.jianshu.com/p/1db7c28249d4</a></p>
]]></content>
      <categories>
        <category>R</category>
        <category>Seurat</category>
      </categories>
      <tags>
        <tag>scRNA-seq</tag>
        <tag>Seurat</tag>
      </tags>
  </entry>
  <entry>
    <title>GATK/bcftools变异检测</title>
    <url>/2022/08/27/GATK-bcftools%E5%8F%98%E5%BC%82%E6%A3%80%E6%B5%8B/</url>
    <content><![CDATA[<p>本文总结利用RNA-seq数据进行snp calling的流程。</p>
<span id="more"></span>

<h2 id="1-构建参考基因组index"><a href="#1-构建参考基因组index" class="headerlink" title="1. 构建参考基因组index"></a>1. 构建参考基因组index</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bwa index Dmel.dna.fa</span><br><span class="line">samtools faidx Dmel.dna.fa</span><br><span class="line">picard CreateSequenceDictionary -R ~/00.reference/01.Dmel/Dmel.dna.fa -O Dmel.dna.dict</span><br></pre></td></tr></table></figure>

<h2 id="2-bam文件预处理"><a href="#2-bam文件预处理" class="headerlink" title="2. bam文件预处理"></a>2. bam文件预处理</h2><p>对bam文件进行排序。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">samtools merge -@ 10 -l 9 merged.bam sample1.bam sample2.bam sample3.bam</span><br><span class="line">samtools <span class="built_in">sort</span> -@ 10 -l 9 merged.bam -o merged.sort.bam</span><br></pre></td></tr></table></figure>

<h2 id="3-去重复mark-duplicates"><a href="#3-去重复mark-duplicates" class="headerlink" title="3. 去重复mark duplicates"></a>3. 去重复mark duplicates</h2><p>去除掉建库、测序过程中偏好性导致的一些”假阳性”地增高的reads。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">picard MarkDuplicates -I merged.sort.bam</span><br><span class="line">\ -M merged_mark_metrics.txt</span><br><span class="line">\ --REMOVE_DUPLICATES 1</span><br><span class="line">\ -O merged.sort.removed.bam</span><br><span class="line"></span><br><span class="line">picard BuildBamIndex merged.sort.removed.bam</span><br></pre></td></tr></table></figure>

<h2 id="4-1-GATK-snp-calling"><a href="#4-1-GATK-snp-calling" class="headerlink" title="4-1. GATK snp calling"></a>4-1. GATK snp calling</h2><h3 id="1-SplitNCigarReads"><a href="#1-SplitNCigarReads" class="headerlink" title="1. SplitNCigarReads"></a>1. SplitNCigarReads</h3><p>这一步是针对RNA-seq数据call snp特有的步骤。mRNA转录本主要是由DNA的外显子exon的可变剪切，不包括intron部分。因此，在RNA-seq数据call snp时，如果直接比对到基因组上，若比对到intron的N区域，就会有假阳性的snp，为了减少假阳性，需要将reads进行切割，跨越intron区域。若为n个intron的read片段，则切割为n+1个子read片段。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gatk SplitNCigarReads -R ~/00.reference/01.Dmel/Dmel.dna.fa</span><br><span class="line">\ -I merged.sort.removed.bam </span><br><span class="line">\ -O merged.sort.removed.splited.bam</span><br></pre></td></tr></table></figure>

<h3 id="2-GATK-snp-calling"><a href="#2-GATK-snp-calling" class="headerlink" title="2. GATK snp calling"></a>2. GATK snp calling</h3><p>HaplotypeCaller进行变异检测，之后，只保留SNP位点,并对SNP进行过滤：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gatk HaplotypeCaller -R ~/00.reference/01.Dmel/Dmel.dna.fa</span><br><span class="line">\ --ploidy 2 -I 03.bam/merged.sort.removed.bam</span><br><span class="line">\ -O 04.call_snp/all.merged.vcf.gz</span><br><span class="line"></span><br><span class="line">gatk SelectVariants -R ~/00.reference/01.Dmel/Dmel.dna.fa</span><br><span class="line">\ -O 04.call_snp/all.merged.snp.vcf</span><br><span class="line">\ --variant 04.call_snp/all.merged.vcf.gz</span><br><span class="line">\ --select-type-to-include SNP</span><br><span class="line"></span><br><span class="line">gatk VariantFiltration -R ~/00.reference/01.Dmel/Dmel.dna.fa</span><br><span class="line">\ -V 04.call_snp/all.merged.snp.vcf.gz</span><br><span class="line">\ --cluster-size 4 --cluster-window-size 10</span><br><span class="line">\ --mask-name aroundIndel --mask 04.call_snp/all.merged.indel.vcf.gz -mask-extension 3</span><br><span class="line">\ --filter-name <span class="string">&quot;lowMQRankSum&quot;</span> --filter-expression <span class="string">&quot;MQRankSum &lt; 12.5&quot;</span></span><br><span class="line">\ --filter-name <span class="string">&quot;highFS&quot;</span> --filter-expression <span class="string">&quot;FS &gt; 60.0&quot;</span></span><br><span class="line">\ --filter-name <span class="string">&quot;lowReadPosRankSum&quot;</span> --filter-expression <span class="string">&quot;ReadPosRankSum &lt; -8.0&quot;</span></span><br><span class="line">\ --filter-name <span class="string">&quot;lowMQ&quot;</span> --filter-expression <span class="string">&quot;MQ &lt; 40.0&quot;</span></span><br><span class="line">\ --filter-name <span class="string">&quot;lowQD&quot;</span> --filter-expression <span class="string">&quot;QD &lt; 2.0&quot;</span></span><br><span class="line">\ --genotype-filter-name <span class="string">&quot;lowDP&quot;</span> --genotype-filter-expression <span class="string">&quot;DP &lt; 8.0&quot;</span></span><br><span class="line">\ -O 05.filter_snp/all.merged.filered.snp.vcf.gz</span><br></pre></td></tr></table></figure>

<h2 id="4-2-bcftools-snp-calling"><a href="#4-2-bcftools-snp-calling" class="headerlink" title="4-2. bcftools snp calling"></a>4-2. bcftools snp calling</h2><p>去重复之后，也可利用bcftools进行snp calling,并进行过滤。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bcftools mpileup -f ~/00.reference/01.Dmel/Dmel.dna.fa 03.bam/merged.sort.removed.bam | bcftools call --ploidy 2 -Oz -o all.merged.vcf.gz</span><br><span class="line">bcftools filter all.merged.vcf.gz -e <span class="string">&#x27;QUAL&lt;30&#x27;</span> --SnpGap 5 -e <span class="string">&#x27;DP&lt;10&#x27;</span> -Oz -o all.filtered.merged.vcf.gz;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SNP calling</category>
      </categories>
      <tags>
        <tag>SNP calling</tag>
      </tags>
  </entry>
  <entry>
    <title>从FCA数据库中的loom文件中选择想要的cell构建SeuratObject</title>
    <url>/2022/08/30/%E4%BB%8EFCA%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84loom-h5ad-file%E4%B8%AD%E9%80%89%E6%8B%A9%E7%89%B9%E5%AE%9Acell%E6%9E%84%E5%BB%BASeuratObject/</url>
    <content><![CDATA[<p>从FCA数据库中下载的原始.loom文件,选择自己选择想要的cells转换为Seurat对象。</p>
<span id="more"></span>

<p>将.loom文件格式数据转换为SeuratObject，需要SeuratDisk包。</p>
<h2 id="1-SeuratDisk包安装"><a href="#1-SeuratDisk包安装" class="headerlink" title="1. SeuratDisk包安装"></a>1. SeuratDisk包安装</h2><p>SeuratDisk包只能通过github安装，因此，需要下载devtools，然后再用devtools通过github安装。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;devtools&quot;</span><span class="punctuation">)</span></span><br><span class="line">devtools<span class="operator">::</span>install_github<span class="punctuation">(</span><span class="string">&quot;mojaveazure/SeuratDisk&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<h2 id="2-loom文件格式"><a href="#2-loom文件格式" class="headerlink" title="2. .loom文件格式"></a>2. .loom文件格式</h2><p>loom文件格式是HDF5文件的文件结构，可以有效地储存大型单细胞数据集。可以使用<a href="https://www.hdfgroup.org/downloads/hdfview/">HDFview</a>来查看其数据格式。<br>打开之后，数据格式如下：<br><img src="/pics/2022-0830-loom.jfif" alt="alt 图标"><br>&#x2F;matrix中储存基因*细胞矩阵，&#x2F;attrs中储存数据的一些相关信息，如数据创建日期，&#x2F;col_attrs中储存矩阵列（细胞）的信息，如CellID、ClusterID、Embeddings信息等，&#x2F;row_attrs中储存矩阵行（基因）的信息，如基因ID、细胞marker等。&#x2F;layers中储存另外的基因*矩阵，例如scale.data。</p>
<h2 id="3-将loom转换为Seurat"><a href="#3-将loom转换为Seurat" class="headerlink" title="3. 将loom转换为Seurat"></a>3. 将loom转换为Seurat</h2><p>由于Seurat::as.Seurat()所识别的loom文件和FCA数据库中的loom文件格式不太一样，因此不能直接转换，只能自己构建。<br>导入loom文件，并读取基因*细胞矩阵，这样读取的矩阵是raw counts，可以直接根据矩阵的属性访问。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span>Seurat<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span>SeuratDisk<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> ds <span class="operator">&lt;-</span> Connect<span class="punctuation">(</span><span class="string">&quot;r_fca_biohub_body_10x.loom&quot;</span><span class="punctuation">,</span>mode <span class="operator">=</span> <span class="string">&quot;r&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 读取全部矩阵</span></span><br><span class="line"><span class="operator">&gt;</span> fca_body_mat <span class="operator">&lt;-</span> ds<span class="punctuation">[[</span><span class="string">&quot;/matrix&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line"><span class="comment"># 访问矩阵第一行第一列元素</span></span><br><span class="line"><span class="operator">&gt;</span> ds<span class="punctuation">[[</span><span class="string">&quot;/matrix&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line">	<span class="number">0</span></span><br><span class="line"><span class="comment"># 读取矩阵的维度</span></span><br><span class="line"><span class="operator">&gt;</span> ds<span class="punctuation">[[</span><span class="string">&quot;/matrix&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">$</span>dims</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>读取loom文件中储存的细胞ID和基因ID信息，分别为矩阵的列名和行名。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">fca_body_cellid <span class="operator">&lt;-</span> ds<span class="punctuation">[[</span><span class="string">&quot;/col_attrs/CellID&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">fca_body_geneid <span class="operator">&lt;-</span> ds<span class="punctuation">[[</span><span class="string">&quot;/row_attrs/Gene&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">colnames<span class="punctuation">(</span>fca_body_mat<span class="punctuation">)</span> <span class="operator">&lt;-</span> fca_body_geneid</span><br><span class="line">rownames<span class="punctuation">(</span>fca_body_mat<span class="punctuation">)</span> <span class="operator">&lt;-</span> fca_body_cellid</span><br></pre></td></tr></table></figure>

<p>将自己所需要的细胞ID存储于一个文件中并进行读取。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">mycell <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span>file <span class="operator">=</span> <span class="string">&quot;attrs_myline.txt&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">,</span></span><br><span class="line">sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line">mycell <span class="operator">&lt;-</span> mycell<span class="operator">$</span>CellID</span><br><span class="line">mycell <span class="operator">&lt;-</span> as.array<span class="punctuation">(</span>mycell<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p>提取自己所需要的细胞的矩阵。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">fca_my_mat <span class="operator">&lt;-</span> fca_body_mat<span class="punctuation">[</span>rownames<span class="punctuation">(</span>fca_body_mat<span class="punctuation">)</span> <span class="operator">%in%</span> mycell<span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">rm<span class="punctuation">(</span>fca_body_mat<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p>将矩阵转换为稀疏矩阵(节省空间)并进行转置。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">fca_my_mat <span class="operator">&lt;-</span> Matrix<span class="operator">::</span>Matrix<span class="punctuation">(</span>fca_my_mat<span class="punctuation">,</span> sparse<span class="operator">=</span><span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line">fca_my_mat <span class="operator">&lt;-</span> Matrix<span class="operator">::</span>t<span class="punctuation">(</span>fca_my_mat<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>提取所需要的meta信息。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">attrs <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;CellID&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;ClusterID&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;n_counts&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;n_genes&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;percent_mito&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;sex&#x27;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&#x27;annotation&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;annotation_broad&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;S_annotation_broad_extrapolated&#x27;</span><span class="punctuation">)</span></span><br><span class="line">attrs_df <span class="operator">&lt;-</span> map_dfc<span class="punctuation">(</span>attrs<span class="punctuation">,</span> <span class="operator">~</span> ds<span class="punctuation">[[</span>paste0<span class="punctuation">(</span><span class="string">&quot;col_attrs/&quot;</span><span class="punctuation">,</span> .<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> as.data.frame<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">colnames<span class="punctuation">(</span>attrs_df<span class="punctuation">)</span> <span class="operator">&lt;-</span> attrs</span><br><span class="line">rownames<span class="punctuation">(</span>attrs_df<span class="punctuation">)</span> <span class="operator">&lt;-</span> fca_body_cellid</span><br><span class="line"></span><br><span class="line">attrs_df <span class="operator">&lt;-</span> attrs_df<span class="punctuation">[</span>rownames<span class="punctuation">(</span>attrs_df<span class="punctuation">)</span> <span class="operator">%in%</span> mycell<span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">write.table<span class="punctuation">(</span>attrs_df<span class="punctuation">,</span><span class="string">&quot;attrs.txt&quot;</span><span class="punctuation">,</span>sep<span class="operator">=</span><span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>如果我们不想要数据库已经注释好的信息，想要自己的注释，例如合并某些cluster，怎么办呢？<br>我们可以在输出的attrs.txt中加上一列my_annotation，然后就可以啦。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">attrs <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;CellID&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;ClusterID&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;n_counts&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;n_genes&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;percent_mito&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;sex&#x27;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&#x27;annotation&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;my_annotation&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;annotation_broad&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;S_annotation_broad_extrapolated&#x27;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">attrs_df <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span>file <span class="operator">=</span> <span class="string">&quot;attrs_my.txt&quot;</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line">colnames<span class="punctuation">(</span>attrs_df<span class="punctuation">)</span> <span class="operator">&lt;-</span> attrs</span><br><span class="line">rownames<span class="punctuation">(</span>attrs_df<span class="punctuation">)</span> <span class="operator">&lt;-</span> attrs_df<span class="operator">$</span>CellID</span><br><span class="line"></span><br><span class="line">fca_my_seurat <span class="operator">&lt;-</span> CreateSeuratObject<span class="punctuation">(</span>counts <span class="operator">=</span> fca_my_mat<span class="punctuation">,</span></span><br><span class="line">	meta.data <span class="operator">=</span> attrs_df<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">fca_my_seurat<span class="operator">@</span>active.ident <span class="operator">&lt;-</span> as.factor<span class="punctuation">(</span>fca_my_seurat<span class="operator">$</span>my_annotation<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">saveRDS<span class="punctuation">(</span>fca_my_seurat<span class="punctuation">,</span>file <span class="operator">=</span> <span class="string">&quot;fca_my_seurat.rds&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>这样构建出的SeuratObject就有了自己想要的细胞的表达矩阵以及meta信息，可以进行接下来的分析了。</p>
]]></content>
      <categories>
        <category>R</category>
        <category>Seurat</category>
      </categories>
      <tags>
        <tag>scRNA-seq</tag>
        <tag>Seurat</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令总结-sed、awk、grep、cut</title>
    <url>/2022/08/30/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-sed%E3%80%81awk%E3%80%81grep%E3%80%81cut/</url>
    <content><![CDATA[<p>记性不好，这里总结一些自己常用的命令，会持续更新，以后用到的会再添加上：</p>
<ul>
<li>sed</li>
<li>awk</li>
<li>grep</li>
<li>cut<span id="more"></span></li>
</ul>
<h2 id="1-sed"><a href="#1-sed" class="headerlink" title="1.sed"></a>1.sed</h2><h3 id="1-1-sed替换"><a href="#1-1-sed替换" class="headerlink" title="1.1 sed替换"></a>1.1 sed替换</h3><p>直接替换file.txt文件中指定的内容，g:全局替换</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;1,$s/abc/123/g&#x27;</span> file.txt</span><br></pre></td></tr></table></figure>
<p>不修改文件中的内容，替换后直接输出到屏幕</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;1,$s/abc/123/g&#x27;</span> file.txt</span><br></pre></td></tr></table></figure>
<p>批量替换当前目录下以file开头的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;1,$s/abc/123/g&#x27;</span> file*</span><br></pre></td></tr></table></figure>

<h3 id="1-2-sed查看"><a href="#1-2-sed查看" class="headerlink" title="1.2 sed查看"></a>1.2 sed查看</h3><p>打印出2-5行，并不改变文件中内容:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -n <span class="string">&#x27;2,5p&#x27;</span> file.txt</span><br></pre></td></tr></table></figure>
<h3 id="1-3-sed删除"><a href="#1-3-sed删除" class="headerlink" title="1.3 sed删除"></a>1.3 sed删除</h3><p>删除第2行、2-5行、2至最后：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;2d&#x27;</span> file.txt</span><br><span class="line">sed <span class="string">&#x27;2,5d&#x27;</span> file.txt</span><br><span class="line">sed <span class="string">&#x27;2,$d&#x27;</span> file.txt</span><br></pre></td></tr></table></figure>
<h3 id="1-4-sed添加"><a href="#1-4-sed添加" class="headerlink" title="1.4 sed添加"></a>1.4 sed添加</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;2a add line&#x27;</span> file.txt <span class="comment"># 在第2行后添加&quot;add line&quot;</span></span><br><span class="line">sed <span class="string">&#x27;2i insert line&#x27;</span> file.txt <span class="comment"># 在第2行前添加&quot;insert line&quot;</span></span><br><span class="line">sed <span class="string">&#x27;2a add line1 \</span></span><br><span class="line"><span class="string">add line2&#x27;</span> file.txt <span class="comment"># 在第二行后添加两行用反斜线</span></span><br></pre></td></tr></table></figure>

<h3 id="1-5-sed查找"><a href="#1-5-sed查找" class="headerlink" title="1.5 sed查找"></a>1.5 sed查找</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -n <span class="string">&#x27;/ooo/p&#x27;</span> file.txt <span class="comment"># 查找含有关键字ooo的行</span></span><br><span class="line">sed -n <span class="string">&#x27;/ooo/d&#x27;</span> file.txt <span class="comment"># 查找并删除该行</span></span><br><span class="line">sed -n <span class="string">&#x27;/ooo/&#123;s/ooo/kkk/;p;q&#125;&#x27;</span> <span class="comment"># 查找有ooo的行,替换为kkk，并输出，q:退出</span></span><br></pre></td></tr></table></figure>

<h3 id="1-5-sed多点编辑"><a href="#1-5-sed多点编辑" class="headerlink" title="1.5 sed多点编辑"></a>1.5 sed多点编辑</h3><p>删除第二行，并将ooo替换为kkk。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -e <span class="string">&#x27;2d&#x27;</span> -e <span class="string">&#x27;s/ooo/kkk/&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-awk"><a href="#2-awk" class="headerlink" title="2.awk"></a>2.awk</h2><h3 id="2-1-awk基本用法"><a href="#2-1-awk基本用法" class="headerlink" title="2.1 awk基本用法"></a>2.1 awk基本用法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $1,$2&#125;&#x27;</span> file.txt</span><br><span class="line">awk -F, <span class="string">&#x27;&#123;pritn $1,$2&#125;&#x27;</span> file.txt <span class="comment"># -F,按逗号分割</span></span><br><span class="line">awk -f try.awk file.txt <span class="comment"># -f后加awk脚本</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">内置变量</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$n</td>
<td align="center">当前记录的第n个字段，字段间由FS分隔</td>
</tr>
<tr>
<td align="center">$0</td>
<td align="center">完整的输入记录</td>
</tr>
<tr>
<td align="center">FS</td>
<td align="center">字段分隔符(默认是任何空格)</td>
</tr>
<tr>
<td align="center">IGNORECASE</td>
<td align="center">如果为真，则进行忽略大小写的匹配</td>
</tr>
<tr>
<td align="center">NF</td>
<td align="center">一条记录的字段的数目</td>
</tr>
<tr>
<td align="center">NR</td>
<td align="center">已经读出的记录数，就是行号，从1开始</td>
</tr>
<tr>
<td align="center">OFS</td>
<td align="center">输出字段分隔符，默认值与输入字段分隔符一致。</td>
</tr>
<tr>
<td align="center">ORS</td>
<td align="center">输出记录分隔符(默认值是一个换行符)</td>
</tr>
<tr>
<td align="center">RS</td>
<td align="center">记录分隔符(默认是一个换行符)</td>
</tr>
</tbody></table>
<h3 id="2-2-awk运算符"><a href="#2-2-awk运算符" class="headerlink" title="2.2 awk运算符"></a>2.2 awk运算符</h3><table>
<thead>
<tr>
<th align="center">运算符</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&#x3D;;+&#x3D;,-&#x3D;,*&#x3D;,&#x2F;&#x3D;;%&#x3D;;**&#x3D;;^&#x3D;</td>
<td align="center">赋值运算符</td>
</tr>
<tr>
<td align="center">||;&amp;&amp;</td>
<td align="center">逻辑或、与</td>
</tr>
<tr>
<td align="center"><del>;!</del></td>
<td align="center">正则表达式匹配与不匹配</td>
</tr>
<tr>
<td align="center">&lt;;&lt;&#x3D;;&gt;;&gt;&#x3D;;!&#x3D;;&#x3D;&#x3D;</td>
<td align="center">关系运算符</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;$1==2 &#123;print $1,$3&#125;&#x27;</span> log.txt</span><br><span class="line">awk <span class="string">&#x27;$1&gt;2 &amp;&amp; $2==&quot;aaa&quot; &#123;print $1,$2,$3&#125;&#x27;</span> log.txt</span><br></pre></td></tr></table></figure>

<h3 id="2-3-awk正则匹配"><a href="#2-3-awk正则匹配" class="headerlink" title="2.3 awk正则匹配"></a>2.3 awk正则匹配</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;$2 ~ /th/ &#123;print $2,$4&#125;&#x27;</span> log.txt</span><br><span class="line">awk <span class="string">&#x27;/re/ &#x27;</span> log.txt</span><br><span class="line"> awk <span class="string">&#x27;BEGIN&#123;IGNORECASE=1&#125; /this/&#x27;</span> log.txt  <span class="comment"># 忽略大小写</span></span><br><span class="line">  awk <span class="string">&#x27;$2 !~ /th/ &#123;print $2,$4&#125;&#x27;</span> log.txt </span><br><span class="line">  awk <span class="string">&#x27;!/th/ &#123;print $2,$4&#125;&#x27;</span> log.txt</span><br></pre></td></tr></table></figure>

<h3 id="2-2-awk-if条件语句"><a href="#2-2-awk-if条件语句" class="headerlink" title="2.2 awk if条件语句"></a>2.2 awk if条件语句</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN &#123;</span></span><br><span class="line"><span class="string">a=20;</span></span><br><span class="line"><span class="string">if (a==10)</span></span><br><span class="line"><span class="string">  print &quot;a = 10&quot;;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  print &quot;a = 20&quot;;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk -F, <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">	if($2~/sa59.*/)</span></span><br><span class="line"><span class="string">		print &quot;s1_&quot;$1; </span></span><br><span class="line"><span class="string">	else if($2~/sa60.*/)</span></span><br><span class="line"><span class="string">		print &quot;s2_&quot;$1; </span></span><br><span class="line"><span class="string">	else print &quot;s3_&quot;$1&#125;&#x27;</span> </span><br></pre></td></tr></table></figure>
<h2 id="3-grep"><a href="#3-grep" class="headerlink" title="3.grep"></a>3.grep</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep -v <span class="string">&quot;aaa&quot;</span> <span class="comment"># -v 反向匹配</span></span><br><span class="line"><span class="comment"># -F Interpret PATTERN as a list of fixed strings, separated by newlines, any of which is to be matched. 将样式视为固定字符串的列表。</span></span><br><span class="line"><span class="comment"># -f后面加文件，文件中每一行为一个pattern</span></span><br><span class="line"><span class="built_in">cat</span> test.txt | grep -F -f file.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># -i 忽略字符大小写</span></span><br><span class="line">grep -i <span class="string">&quot;aaa&quot;</span> <span class="built_in">test</span></span><br></pre></td></tr></table></figure>

<h2 id="4-cut"><a href="#4-cut" class="headerlink" title="4.cut"></a>4.cut</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cut</span> -b 2 file.txt   <span class="comment"># 以字节为单位分隔</span></span><br><span class="line"><span class="built_in">cut</span> -c 2- file.txt  <span class="comment"># 以字符为单位分隔，提取第二到最后一个字符</span></span><br><span class="line"><span class="built_in">cut</span> -c 2,4 file.txt <span class="comment"># 以字符为单位分隔，提取第2、4个字符</span></span><br><span class="line"><span class="built_in">cut</span> -c 2-7 file.txt <span class="comment"># 以字符为单位分隔，提取第2至7个字符</span></span><br><span class="line"><span class="built_in">cut</span> -d <span class="string">&quot;,&quot;</span> -f 2 file.txt <span class="comment">#以逗号为分隔符，提取第二个字段</span></span><br><span class="line"><span class="built_in">cut</span> -d <span class="string">&quot;,&quot;</span> -f 2- file.txt</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
</search>
