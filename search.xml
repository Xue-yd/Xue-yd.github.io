<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2022/08/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<p>D:\SogouDownload\nodejs\node_global\hexo d</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>FCA数据库中的原始reads文件之uBAM文件</title>
    <url>/2022/08/15/FCA%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%A7%8Breads%E6%96%87%E4%BB%B6%E4%B9%8BuBAM%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>本文介绍uBAM文件：</p>
<ul>
<li>什么是uBAM文件</li>
<li>uBAM vs fastq</li>
<li>uBAM转换为fastq<span id="more"></span></li>
</ul>
<h2 id="1-什么是uBAM文件？"><a href="#1-什么是uBAM文件？" class="headerlink" title="1.什么是uBAM文件？"></a>1.什么是uBAM文件？</h2><p>uBAM文件，即unmapped or unaligned BAM文件，里面的reads是没有经过比对的，目的是为了储存原始的reads信息。</p>
<h2 id="2-uBAM-vs-fastq"><a href="#2-uBAM-vs-fastq" class="headerlink" title="2.uBAM vs fastq"></a>2.uBAM vs fastq</h2><p>相比于fastq文件来说，uBAM文件储存的信息更加丰富。由于fastq文件的格式原因，很多信息都不能存放在fastq文件中。而BAM文件中只需要加上tag信息即可。以FlyCellAtlas中的原始BAM文件为例:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1	4	*	0	255	*	*	0	91	ATTGGCGACAGAT...CGGAATATATATATATGTATATAT	FFFFFFFFFFFFFFFFFFF...FFFFFFFFFFFFFFFFFF	on:Z:A00428:211:H77T5DSXY:3:1101:1090:1000@2:N:0:GCTCAACC	op:Z:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFF,FFFFFFFFF:FFFFFF	RX:Z:CATCTATTATAT	QX:Z:FFFFFFFFFF:F	CR:Z:TTGGGTAAGGAGGCAG	CY:Z:#FFFFFFFFFFFFFFF</span><br></pre></td></tr></table></figure>

<p>RX tag即UMI信息，QX tag为UMI测序质量信息，CR tag为cell barcode序列，CY tag为cell barcode的测序质量信息。对于单细胞测序而言，一个uBAM文件即将R1(cell barcode + UMI)和R2(真正的reads)的fastq信息都包含在内。</p>
<h2 id="3-uBAM转换为cellranger需要的fastq"><a href="#3-uBAM转换为cellranger需要的fastq" class="headerlink" title="3.uBAM转换为cellranger需要的fastq"></a>3.uBAM转换为cellranger需要的fastq</h2><p>cellranger处理的fastq文件，有两个reads文件和index文件，index文件不是必需的。R1文件中储存的是cell barcode+UMI序列相关信息，R2文件中储存的是真正的测序序列。对于R2文件来说，直接用samtools fastq即可完成转换。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">samtools  fastq sample1.bam &gt; fastq/sample1-1_S1_L001_R2_001.fastq.gz</span><br></pre></td></tr></table></figure>

<p>对于R1文件而言，就有些复杂，我们可以首先将BAM文件中的UMI、barcode序列信息进行提取，然后再用samtools完成转换。这是一个笨方法，而且耗费资源，速度也比较慢，但是不需要写脚本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> sample1-1 sample1-2 sample1-3</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	samtools view <span class="variable">$i</span>.bam | awk <span class="string">&#x27;&#123;print $1&quot;\t&quot;$2&quot;\t&quot;$3&quot;\t&quot;$4&quot;\t&quot;$5&quot;\t&quot;$6&quot;\t&quot;$7&quot;\t&quot;$8&quot;\t&quot;$9&quot;\t&quot;$16$14&quot;\t&quot;$17$15&#125;&#x27;</span> &gt; <span class="variable">$i</span>.tmp;		<span class="comment">#提取序列基本信息和barcode(16列)和UMI(14列)信息，17、15列为相对应的质量信息</span></span><br><span class="line">	sed -i <span class="string">&#x27;1,$s/CR:Z://g&#x27;</span> <span class="variable">$i</span>.tmp;    <span class="comment">#处理文件，去掉tag标签，只保留序列</span></span><br><span class="line">	sed -i <span class="string">&#x27;1,$s/CY:Z://g&#x27;</span> <span class="variable">$i</span>.tmp;</span><br><span class="line">	sed -i <span class="string">&#x27;1,$s/RX:Z://g&#x27;</span> <span class="variable">$i</span>.tmp;</span><br><span class="line">	sed -i <span class="string">&#x27;1,$s/QX:Z://g&#x27;</span> <span class="variable">$i</span>.tmp;</span><br><span class="line">	<span class="built_in">cat</span> header <span class="variable">$i</span>.tmp &gt; <span class="variable">$i</span>.sam;		<span class="comment">#加上头文件</span></span><br><span class="line">	<span class="built_in">rm</span> <span class="variable">$i</span>.tmp;</span><br><span class="line">	samtools view -@ 10 -bS <span class="variable">$i</span>.sam -o <span class="variable">$i</span>.R1.bam;	<span class="comment">#转换为bam文件，节省空间</span></span><br><span class="line">	<span class="built_in">rm</span> <span class="variable">$i</span>.sam;</span><br><span class="line">	samtools fastq <span class="variable">$i</span>.R1.bam &gt; fastq/<span class="variable">$i_S1_L001_R1_001</span>.fastq; <span class="comment">#BAM转换为fastq（reads1）</span></span><br><span class="line">	samtools fastq <span class="variable">$i</span>.bam &gt; fastq/<span class="variable">$i_S1_L001_R2_001</span>.fastq;    <span class="comment">#（reads2）</span></span><br><span class="line">	gzip fastq/<span class="variable">$i</span>.R1_001.fastq;</span><br><span class="line">	gzip fastq/<span class="variable">$i</span>.R2_001.fastq;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>完成转换之后就可以走接下来的cellranger流程啦！</p>
]]></content>
      <categories>
        <category>scRNA-seq</category>
      </categories>
      <tags>
        <tag>scRNA-seq</tag>
        <tag>raw reads</tag>
        <tag>10X genomics</tag>
      </tags>
  </entry>
  <entry>
    <title>scRNA-seq分析之cellranger count</title>
    <url>/2022/08/15/scRNA-seq%E5%88%86%E6%9E%90%E4%B9%8Bcellranger-count/</url>
    <content><![CDATA[<p>本文介绍从fastq文件开始，用cellranger进行定量：</p>
<ul>
<li>用cellranger构建参考基因组<ul>
<li>cellranger mkgtf</li>
<li>cellranger mkref</li>
</ul>
</li>
<li>cellranger count<span id="more"></span></li>
</ul>
<h2 id="1-生成cellranger参考基因组"><a href="#1-生成cellranger参考基因组" class="headerlink" title="1. 生成cellranger参考基因组"></a>1. 生成cellranger参考基因组</h2><p>cellranger官方提供有小鼠和人类的参考基因组，其他物种的需要用mkref自己产生。</p>
<h3 id="1-1-生成用于产生参考基因组的gtf文件"><a href="#1-1-生成用于产生参考基因组的gtf文件" class="headerlink" title="1.1 生成用于产生参考基因组的gtf文件"></a>1.1 生成用于产生参考基因组的gtf文件</h3><p>–attribute参数用于指定gtf文件中的biotype。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cellranger mkgtf Dmel.gtf Dmel.BDGP6.32.104.filtered.gtf \</span><br><span class="line">--attribute=gene_biotype:protein_coding \</span><br><span class="line">--attribute=gene_biotype:lncRNA \</span><br><span class="line">--attribute=gene_biotype:antisense</span><br></pre></td></tr></table></figure>

<h3 id="1-2-生成参考基因组文件"><a href="#1-2-生成参考基因组文件" class="headerlink" title="1.2 生成参考基因组文件"></a>1.2 生成参考基因组文件</h3><p>接下来根据上一步产生的gtf文件生成参考基因组文件，–genome参数指定接下来产生的参考基因组的文件夹名字，–fasta为下载的参考基因组的序列文件，–gtf为上一步产生的gtf文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cellranger mkref --genome=Dmel.genome \</span><br><span class="line">--fasta=Dme.dna.fa \</span><br><span class="line">--gtf=Dmel.BDGP6.32.104.filtered.gtf</span><br></pre></td></tr></table></figure>

<h2 id="2-cellranger-count定量"><a href="#2-cellranger-count定量" class="headerlink" title="2. cellranger count定量"></a>2. cellranger count定量</h2><p>有了fastq和参考基因组，接下来就可以定量了。<br>–id输出文件夹名字，–transcriptome参考基因组所在的文件夹，–fastqs为fastq序列所在的文件名，–sample用于分析的文件prefix，–localcores线程数，–localmem内存数，加上–nosecondary参数不进行下游聚类分析。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cellranger count --<span class="built_in">id</span>=run_sample1 \</span><br><span class="line">--fastqs=/storage/XYD/mywork/fastq \</span><br><span class="line">--sample=sample1-44,sample1-48,sample1-49,sample1-56 \</span><br><span class="line">--transcriptome=/storage/XYD/00.reference/01.Dmel/Dmel.genome \</span><br><span class="line">--localcores=12 \</span><br><span class="line">--localmem=128 \</span><br><span class="line">--nosecondary</span><br></pre></td></tr></table></figure>

<p>定量结束之后，产生的文件夹里outs&#x2F;下会有一个网页文件web_summary.html，打开会看到下图的信息。</p>
<p><img src="/pics/2022-0815-cellranger-count-1.jpg" alt="alt 图标"></p>
<p>发现有个warning：Low fraction reads in cells，显示我的数据大概在54％左右，理想情况下应该为70%，官方的解释有两种可能：1.环境RNA水平过高；2.有一部分细胞RNA content很低，若是第二种情况，那么可以在count步骤加上–force-cells参数，设置一下自己预期的细胞数量，从而去掉RNA含量低的细胞。但是我设置了这个参数之后，还是会有这个warning，这可能说明细胞中reads比例低不是第二种情况造成的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cellranger count --<span class="built_in">id</span>=run_sample1 \</span><br><span class="line">--fastqs=/storage/XYD/mywork/fastq \</span><br><span class="line">--sample=sample1-44,sample1-48,sample1-49,sample1-56 \</span><br><span class="line">--transcriptome=/storage/XYD/00.reference/01.Dmel/Dmel.genome \</span><br><span class="line">--localcores=12 \</span><br><span class="line">--localmem=128 \</span><br><span class="line">--nosecondary</span><br><span class="line">--force-cells=13000</span><br></pre></td></tr></table></figure>

<p>参考资料：<br>1.<a href="https://kb.10xgenomics.com/hc/en-us/articles/360003919491-How-to-interpret-the-Fraction-Reads-in-Cells-metric-">https://kb.10xgenomics.com/hc/en-us/articles/360003919491-How-to-interpret-the-Fraction-Reads-in-Cells-metric-</a></p>
]]></content>
      <categories>
        <category>scRNA-seq</category>
        <category>10X genomics</category>
      </categories>
      <tags>
        <tag>scRNA-seq</tag>
        <tag>10X genomics</tag>
      </tags>
  </entry>
  <entry>
    <title>Seurat包合并多个sample datasets</title>
    <url>/2022/08/17/Seurat%E5%8C%85%E5%90%88%E5%B9%B6%E5%A4%9A%E4%B8%AAsample-datasets/</url>
    <content><![CDATA[<p>很多情况下，我们需要将多个sample dataset合并在一起，然后进行接下来的分析。Seurat v4官方提供了可以用于整合数据集的函数：FindIntegrationAnchors()和IntegrateData()。</p>
<span id="more"></span>

<h2 id="1-导入数据，设置SeuratObject"><a href="#1-导入数据，设置SeuratObject" class="headerlink" title="1.导入数据，设置SeuratObject"></a>1.导入数据，设置SeuratObject</h2><p>首先读入数据，然后创建SeuratObject对象。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library<span class="punctuation">(</span>Seurat<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">data1 <span class="operator">&lt;-</span> Read10X<span class="punctuation">(</span>data.dir <span class="operator">=</span> <span class="string">&quot;D:/000 MyWork/000 MyProject/000 scVariants/sample1&quot;</span><span class="punctuation">,</span></span><br><span class="line">	gene.column <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">data2 <span class="operator">&lt;-</span> Read10X<span class="punctuation">(</span>data.dir <span class="operator">=</span> <span class="string">&quot;D:/000 MyWork/000 MyProject/000 scVariants/sample2&quot;</span><span class="punctuation">,</span></span><br><span class="line">	gene.column <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">data1 <span class="operator">&lt;-</span> CreateSeuratObject<span class="punctuation">(</span>counts <span class="operator">=</span> data1<span class="punctuation">,</span>project <span class="operator">=</span> <span class="string">&quot;sample1&quot;</span><span class="punctuation">,</span></span><br><span class="line">	min.cells <span class="operator">=</span> <span class="number">3</span><span class="punctuation">,</span>min.features <span class="operator">=</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">	assay <span class="operator">=</span> <span class="string">&quot;RNA&quot;</span><span class="punctuation">)</span></span><br><span class="line">data2 <span class="operator">&lt;-</span> CreateSeuratObject<span class="punctuation">(</span>counts <span class="operator">=</span> data2<span class="punctuation">,</span>project <span class="operator">=</span> <span class="string">&quot;sample2&quot;</span><span class="punctuation">,</span></span><br><span class="line">	min.cells <span class="operator">=</span> <span class="number">3</span><span class="punctuation">,</span>min.features <span class="operator">=</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">	assay <span class="operator">=</span> <span class="string">&quot;RNA&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>接下来分别对两个数据各自进行Normalize，并鉴定variable features,最后选择两个datasets中repeatedly variable features进行integration。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">data.list <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span>data1<span class="punctuation">,</span>data2<span class="punctuation">)</span></span><br><span class="line">data.list <span class="operator">&lt;-</span> lapply<span class="punctuation">(</span>X <span class="operator">=</span> data.list<span class="punctuation">,</span> FUN <span class="operator">=</span> <span class="keyword">function</span><span class="punctuation">(</span>x<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">	x <span class="operator">&lt;-</span> NormalizeData<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br><span class="line">	x <span class="operator">&lt;-</span> FindVariableFeatures<span class="punctuation">(</span>x<span class="punctuation">,</span> selection.method <span class="operator">=</span> <span class="string">&quot;vst&quot;</span><span class="punctuation">,</span> nfeatures <span class="operator">=</span> <span class="number">2000</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">features <span class="operator">&lt;-</span> SelectIntegrationFeatures<span class="punctuation">(</span>object.list <span class="operator">=</span> data.list<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h2 id="2-进行整合"><a href="#2-进行整合" class="headerlink" title="2.进行整合"></a>2.进行整合</h2><p>然后，使用FindIntegrationAnchors()函数确定Anchor，这个函数以SeuratObject函数作为输入，然后再利用IntegrateData()函数进行整合。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">data.anchors <span class="operator">&lt;-</span> FindIntegrationAnchors<span class="punctuation">(</span>object.list <span class="operator">=</span> data.list<span class="punctuation">,</span></span><br><span class="line">anchor.features <span class="operator">=</span> features<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">data.combined <span class="operator">&lt;-</span> IntegrateData<span class="punctuation">(</span>anchorset <span class="operator">=</span> data.anchors<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>这样整合之后的数据只包括了前面鉴定到的features信息，后续的scale等等分析都仅基于这些features，默认是2000个，因此数据会小很多。</p>
<h2 id="3-整合后的分析"><a href="#3-整合后的分析" class="headerlink" title="3.整合后的分析"></a>3.整合后的分析</h2><p>接下来就可以进行后续的分析了。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DefaultAssay<span class="punctuation">(</span>data.combined<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="string">&quot;integrated&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Run the standard workflow for visualization and clustering</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> ScaleData<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> verbose <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> RunPCA<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> npcs <span class="operator">=</span> <span class="number">30</span><span class="punctuation">,</span> verbose <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> FindNeighbors<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;pca&quot;</span><span class="punctuation">,</span> dims <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">)</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> FindClusters<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> resolution <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span></span><br><span class="line">data.combined <span class="operator">&lt;-</span> RunUMAP<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;pca&quot;</span><span class="punctuation">,</span> dims <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Visualization</span></span><br><span class="line">p1 <span class="operator">&lt;-</span> DimPlot<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;umap&quot;</span><span class="punctuation">)</span></span><br><span class="line">p2 <span class="operator">&lt;-</span> DimPlot<span class="punctuation">(</span>data.combined<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;umap&quot;</span><span class="punctuation">,</span> label <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> repel <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">p1</span><br><span class="line">p2</span><br></pre></td></tr></table></figure>

<p>参考：<a href="https://satijalab.org/seurat/articles/integration_introduction.html">https://satijalab.org/seurat/articles/integration_introduction.html</a></p>
]]></content>
      <categories>
        <category>R</category>
        <category>Seurat</category>
      </categories>
      <tags>
        <tag>scRNA-seq</tag>
        <tag>Seurat</tag>
      </tags>
  </entry>
  <entry>
    <title>RNA-seq分析(1)之数据质控</title>
    <url>/2022/08/14/RNA-seq%E5%88%86%E6%9E%90%E4%B9%8B%E6%95%B0%E6%8D%AE%E8%B4%A8%E6%8E%A7/</url>
    <content><![CDATA[<p>本文介绍RNA-seq上游分析之数据质控：</p>
<ul>
<li>fastqc质控<ul>
<li>去除接头序列</li>
<li>reads trim</li>
</ul>
</li>
<li>去除rRNA序列<ul>
<li>rRNA index</li>
<li>反向mapping<span id="more"></span></li>
</ul>
</li>
</ul>
<h2 id="1-fastq文件质控"><a href="#1-fastq文件质控" class="headerlink" title="1.fastq文件质控"></a>1.fastq文件质控</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fastq -f fastq -t 10 -o ./ ./myfastq_r1.fq.gz ./myfastq_r2.fq.gz</span><br></pre></td></tr></table></figure>

<p>之后会产生质控报告和zip文件，查看报告，可以看到base quality、GC content等信息。质控报告每个版块的具体的意义参考(<a href="https://zhuanlan.zhihu.com/p/20731723">https://zhuanlan.zhihu.com/p/20731723</a> )。</p>
<h2 id="2-去除接头序列"><a href="#2-去除接头序列" class="headerlink" title="2.去除接头序列"></a>2.去除接头序列</h2><p>RNA-seq建库测序时，会在样品末端加上接头序列，在后续的步骤中需要去除。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Usage:</span><br><span class="line">    cutadapt -a ADAPTER [options] [-o output.fastq] input.fastq</span><br><span class="line"></span><br><span class="line">For paired-end reads:</span><br><span class="line">    cutadapt -a ADAPT1 -A ADAPT2 [options] -o out1.fastq -p out2.fastq in1.fastq                            in2.fastq</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>去除接头序列，这里我用cutadapt，对于双端测序来说，需要去掉read1和read2两个序列，参数-a和-A分别是read1和read2序列的3’端序列。-e即error rate,-n为2即最多每条read最多去掉两个adapter，-m为20去掉adapter之后若reads长度小于20，则去掉这条reads，–pair-filter这个参数对于双端测序而言，read1和read2都有可能检测到接头。如果选择any，则只要两个中其中一个检测到接头，read1和read2均舍弃；如果选择both，则必须两个都检测到接头，read1和read2才舍弃，-j线程数，-q [5’CUTOFF,]3’CUTOFF参数，quality cutoff，去掉5’端、3’端碱基质量低于该值。双端测序需要提供两个值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cutadapt -a AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC -A AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT</span><br><span class="line">\ -e 0.1 -O 5 -n 2 -m 20 --pair-filter both -q 20,20 -j 10</span><br><span class="line">\ -o 01.clean/CS-1.clean.r1.fq.gz -p 01.clean/CS-1.clean.r2.fq.gz</span><br><span class="line">\ 00.rawdata/CS-1-LEG8830_L2_1.fq.gz 00.rawdata/CS-1-LEG8830_L2_2.fq.gz</span><br></pre></td></tr></table></figure>

<h2 id="3-去除测序刚开始时不稳定的reads"><a href="#3-去除测序刚开始时不稳定的reads" class="headerlink" title="3.去除测序刚开始时不稳定的reads"></a>3.去除测序刚开始时不稳定的reads</h2><p>测序仪进行测序时，刚开始10bp左右的reads测序不稳定，可以进行适当修剪。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cutadapt -u 10 -o trimmed.fastq input_reads.fastq</span><br></pre></td></tr></table></figure>

<h2 id="4-去除rRNA序列"><a href="#4-去除rRNA序列" class="headerlink" title="4.去除rRNA序列"></a>4.去除rRNA序列</h2><p>有时候质控得到的结果中GC含量为双峰，这可能是一些RNA过表达引起的GC偏好，需要去除一些rRNA序列或是其他我们并不关心的序列，但是也并不必过于担忧，RNA-seq中本身就有一些表达量高的序列，所以质控报告中只要一些如碱基质量等的关键因素满足要求，后续只是进行差异表达等的分析，不去除也是可以的。<br>首先，我们需要在NCBI数据库中下载rRNA序列的fasta文件，然后用Hisat2进行比对，保留没有比对上的序列即可,过程如下：</p>
<h3 id="4-1-构建索引"><a href="#4-1-构建索引" class="headerlink" title="4.1 构建索引"></a>4.1 构建索引</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hisat2-build -p 10 rRNA.fasta ./rRNA/rRNA</span><br></pre></td></tr></table></figure>

<h3 id="4-2-输出没有比对上的序列"><a href="#4-2-输出没有比对上的序列" class="headerlink" title="4.2 输出没有比对上的序列"></a>4.2 输出没有比对上的序列</h3><p>–un-conc-gz参数输出没有比对上的序列。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> CS-1 CS-2 PS-1 PS-2</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	hisat2 -x 03.<span class="built_in">rm</span>/rRNA/rRNA \</span><br><span class="line">	-1 01.clean/<span class="variable">$i</span>.r1.clean.fq.gz \</span><br><span class="line">	-2 01.clean/<span class="variable">$i</span>.r2.clean.fq.gz \</span><br><span class="line">	--un-conc-gz 03.<span class="built_in">rm</span>/<span class="variable">$&#123;i&#125;</span>_rmr_%.fq.gz -p 10 -S 03.<span class="built_in">rm</span>/<span class="variable">$&#123;i&#125;</span>.rRNA.sam</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>这一步进行完之后便会发现fastq文件小了许多，这便是去除成功了。然后便可以继续接下来的分析了。</p>
<p>参考资料：<br>1.<a href="https://zhuanlan.zhihu.com/p/20731723">https://zhuanlan.zhihu.com/p/20731723</a><br>2.<a href="https://mp.weixin.qq.com/s/jVTmp4VJQxB6Lwxh1QmNkA">https://mp.weixin.qq.com/s/jVTmp4VJQxB6Lwxh1QmNkA</a></p>
]]></content>
      <categories>
        <category>RNA-seq</category>
      </categories>
      <tags>
        <tag>RNA-seq</tag>
      </tags>
  </entry>
  <entry>
    <title>RNA-seq分析(2)之Hisat2+FeatureCounts</title>
    <url>/2022/08/17/RNA-seq%E5%88%86%E6%9E%90%E4%B9%8BHisat2+FeatureCounts/</url>
    <content><![CDATA[<p>本文介绍RNA-seq流程：</p>
<ul>
<li>Hisat2 mapping</li>
<li>FeatureCounts 定量<span id="more"></span></li>
</ul>
<h2 id="1-Hisat2-mapping"><a href="#1-Hisat2-mapping" class="headerlink" title="1.Hisat2 mapping"></a>1.Hisat2 mapping</h2><p>Hisat2 mapping,-x即参考基因组所在的文件夹位置，-1、-2分别为read1和read2的fastq文件，然后将比对产生的sam文件转为bam并进行排序。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> CS-1 CS-2 PS-1 PS-2</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	hisat2 -x ~/00.reference/index/Dro.mel/genome</span><br><span class="line">	\ -1 03.<span class="built_in">cut</span>/<span class="variable">$i</span>.r1.trimmed.fq.gz</span><br><span class="line">	\ -2 03.<span class="built_in">cut</span>/<span class="variable">$i</span>.r2.trimmed.fq.gz</span><br><span class="line">	\ -p 12 -S 05.mapping/<span class="variable">$i</span>.sam</span><br><span class="line">	samtools view -S -b 05.mapping/<span class="variable">$i</span>.sam -o 05.mapping/<span class="variable">$i</span>.bam</span><br><span class="line">	samtools <span class="built_in">sort</span> -l 9 05.mapping/<span class="variable">$i</span>.bam -o 05.mapping/<span class="variable">$i</span>.sorted.bam</span><br><span class="line">	<span class="built_in">rm</span> 05.mapping/<span class="variable">$i</span>.sam 05.mapping/<span class="variable">$i</span>.bam</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="2-FeatureCounts定量"><a href="#2-FeatureCounts定量" class="headerlink" title="2.FeatureCounts定量"></a>2.FeatureCounts定量</h2><p>-T线程数，-p双端测序，-g根据gene_id进行，设置feature-type，-t指定的必须是gtf中有的feature，同时read只有落到这些feature上才会被统计到，默认是“exon”，-g参数需要提供一个id identifier 来将feature水平的统计汇总为meta-feature水平的统计(即对一个基因来说，统计map到这个基因的exon上的reads数，以此来进行定量)，默认为gene_id，-a参考基因组gtf文件名。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> CS-1 CS-2 PS-1 PS-2</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	featureCounts -p -T 10 -t exon -g gene_id -a ~/00.reference/01.Dmel/Dmel.gtf</span><br><span class="line">	\ -o 06.counts/<span class="variable">$i</span>.count.txt 05.mapping/<span class="variable">$i</span>.sorted.bam</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>RNA-seq</category>
      </categories>
      <tags>
        <tag>RNA-seq</tag>
      </tags>
  </entry>
  <entry>
    <title>Seurat数据结构</title>
    <url>/2022/08/24/Seurat%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<ul>
<li>SeuratObject数据结构<ul>
<li>Assays</li>
<li>meta.data</li>
<li>active.assay</li>
<li>active.ident</li>
<li>reduction</li>
</ul>
</li>
<li>提取数据<ul>
<li>提取基因ID和细胞ID</li>
<li>提取细胞坐标信息</li>
<li>提取表达矩阵</li>
<li>提取平均表达量</li>
<li>聚类细胞数目与比例统计</li>
<li>修改聚类后的idents</li>
<li>提取部分Seurat对象<span id="more"></span></li>
</ul>
</li>
</ul>
<h2 id="1-SeuratObject数据结构"><a href="#1-SeuratObject数据结构" class="headerlink" title="1. SeuratObject数据结构"></a>1. SeuratObject数据结构</h2><p>首先，先来了解一下SeuratObject的数据结构和格式。<br><img src="/pics/2022-0824-Seurat%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.png" alt="alt 图标"></p>
<p>图片来源：<a href="https://www.jianshu.com/p/13142bf51e81">https://www.jianshu.com/p/13142bf51e81</a></p>
<h3 id="1-1-Assays"><a href="#1-1-Assays" class="headerlink" title="1.1 Assays"></a>1.1 Assays</h3><p>默认情况下Seurat对象的Assay是”RNA”,在后续的数据处理过程中，会产生新的。例如，integration之后、SCTransform之后等过程处理之后，都会产生新的Assay，存放的是经过处理之后产生的矩阵。修改默认的Assay可以通过DefaultAssay函数，也可通过 @active.assay查看默认的assay。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">pbmc<span class="operator">@</span>active.assay</span><br><span class="line">DefaultAssay<span class="punctuation">(</span>pbmc<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="string">&quot;RNA&quot;</span></span><br></pre></td></tr></table></figure>
<p>在assay数据中，counts是原始数据，data是normalize（归一化）之后的数据，scale.data是scale（标准化）之后的数据。var.features是高变的features，默认是2000个。调用方法：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">pbmc<span class="operator">@</span>assays<span class="operator">$</span>RNA<span class="operator">@</span>counts</span><br><span class="line">pbmc<span class="punctuation">[[</span><span class="string">&quot;RNA&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">@</span>counts</span><br></pre></td></tr></table></figure>

<h3 id="1-2-meta-data"><a href="#1-2-meta-data" class="headerlink" title="1.2 meta.data"></a>1.2 meta.data</h3><p>meta.data数据中储存的是细胞的相关信息，主要包括：orig.ident,nCount_RNA,nFeature_RNA,percent.mito,RNA_snn_res.0.4,seurat_clusters等。orig.ident是细胞的来源信息，例如我的是3个样本合并之后的dataset，那么这个里面就是sample1、sample2、sample3，nCount_RNA是每个细胞中RNA数量，nFeature_RNA同理，percent.mito每个细胞中的线粒体基因占比信息，seurat_clusters是细胞聚类之后被归为哪一类。调用方法：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">pbmc<span class="operator">$</span>orig.ident</span><br><span class="line">pbmc<span class="punctuation">[[</span><span class="string">&quot;orig.ident&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>

<h3 id="1-3-active-assay"><a href="#1-3-active-assay" class="headerlink" title="1.3 active.assay"></a>1.3 active.assay</h3><p>查看当前的默认assay。调用方式：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">pbmc<span class="operator">@</span>active.assays</span><br></pre></td></tr></table></figure>

<h3 id="1-4-active-ident"><a href="#1-4-active-ident" class="headerlink" title="1.4 active.ident"></a>1.4 active.ident</h3><p>查看使用的分群方式。调用方式：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">pbmc<span class="operator">@</span>active.ident</span><br></pre></td></tr></table></figure>

<h3 id="1-5-reduction"><a href="#1-5-reduction" class="headerlink" title="1.5 reduction"></a>1.5 reduction</h3><p>储存降维之后每个细胞的坐标信息，3种方法分别在：pca、tsne、umap。坐标信息在cell.embeddings中；每个基因对pca成分的贡献度在feature.loadings中。assay.used指这个降维使用的assay。调用方法：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">head<span class="punctuation">(</span>pbmc<span class="operator">@</span>reduction<span class="operator">$</span>umap<span class="operator">@</span>cell.embeddings<span class="punctuation">)</span></span><br><span class="line">head<span class="punctuation">(</span>pbmc<span class="operator">@</span>reduction<span class="operator">$</span>umap<span class="operator">@</span>feature.loadings<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h2 id="2-提取数据"><a href="#2-提取数据" class="headerlink" title="2. 提取数据"></a>2. 提取数据</h2><h3 id="2-1-提取基因ID与细胞ID"><a href="#2-1-提取基因ID与细胞ID" class="headerlink" title="2.1 提取基因ID与细胞ID"></a>2.1 提取基因ID与细胞ID</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">rownames<span class="punctuation">(</span>pbmc<span class="punctuation">)</span> <span class="comment">#提取基因ID</span></span><br><span class="line">colnames<span class="punctuation">(</span>pbmc<span class="punctuation">)</span> <span class="comment">#提取细胞ID</span></span><br><span class="line">Cells<span class="punctuation">(</span>pbmc<span class="punctuation">)</span>    <span class="comment">#提取细胞ID</span></span><br><span class="line"></span><br><span class="line">WhichCells<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>ident<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="comment">#按照idents提取细胞ID</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照idents提取细胞ID，加上invert表示反向提取，除1,2之外的细胞</span></span><br><span class="line">WhichCells<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>ident<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">,</span>invert<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">)</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照gene1的表达量提取细胞ID，slot指定counts即原始数据</span></span><br><span class="line">WhichCells<span class="punctuation">(</span>pbmc<span class="punctuation">,</span><span class="built_in">expression</span><span class="operator">=</span>gene1<span class="operator">&gt;</span><span class="number">1</span><span class="punctuation">,</span>slot<span class="operator">=</span><span class="string">&quot;counts&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-2-提取细胞坐标信息"><a href="#2-2-提取细胞坐标信息" class="headerlink" title="2.2 提取细胞坐标信息"></a>2.2 提取细胞坐标信息</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">Embeddings<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>reduction<span class="operator">=</span><span class="string">&quot;umap&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-3-提取表达矩阵"><a href="#2-3-提取表达矩阵" class="headerlink" title="2.3 提取表达矩阵"></a>2.3 提取表达矩阵</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment">#提取所有细胞的表达矩阵</span></span><br><span class="line">raw <span class="operator">&lt;-</span> as.matrix<span class="punctuation">(</span>GetAssayData<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>slot<span class="operator">=</span><span class="string">&quot;counts&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">raw <span class="operator">&lt;-</span> as.matrix<span class="punctuation">(</span>pbmc<span class="operator">@</span>assays<span class="operator">$</span>RNA<span class="operator">@</span>counts<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#提取idents为5的细胞表达矩阵</span></span><br><span class="line">raw5 <span class="operator">&lt;-</span> as.matrix<span class="punctuation">(</span>GetAssayData<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>slot<span class="operator">=</span><span class="string">&quot;counts&quot;</span><span class="punctuation">)</span><span class="punctuation">[</span><span class="punctuation">,</span>WhichCells<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>ident<span class="operator">=</span><span class="string">&quot;5&quot;</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-4-提取平均表达量"><a href="#2-4-提取平均表达量" class="headerlink" title="2.4 提取平均表达量"></a>2.4 提取平均表达量</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">cluster.averages <span class="operator">&lt;-</span> AverageExpression<span class="punctuation">(</span>pbmc<span class="punctuation">)</span></span><br><span class="line">write.table<span class="punctuation">(</span>cluster.averages<span class="punctuation">[[</span><span class="string">&quot;RNA&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="operator">:</span><span class="number">15</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="string">&quot;cluster.averages.txt&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-5-聚类细胞数目与比例统计"><a href="#2-5-聚类细胞数目与比例统计" class="headerlink" title="2.5 聚类细胞数目与比例统计"></a>2.5 聚类细胞数目与比例统计</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看每个cluster的细胞数目</span></span><br><span class="line">table<span class="punctuation">(</span>Idents<span class="punctuation">(</span>pbmc<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">table<span class="punctuation">(</span>pbmc<span class="operator">$</span>RNA_snn_res.0.4<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#统计每个样本的细胞数目</span></span><br><span class="line">table<span class="punctuation">(</span>pbmc<span class="operator">$</span>orig.ident<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将cluster和样本来源一起统计</span></span><br><span class="line">table<span class="punctuation">(</span>Idents<span class="punctuation">(</span>pbmc<span class="punctuation">)</span><span class="punctuation">,</span>pbmc<span class="operator">$</span>orig.ident<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看每个cluster细胞数目占总细胞的比例</span></span><br><span class="line">prop.table<span class="punctuation">(</span>table<span class="punctuation">(</span>Idents<span class="punctuation">(</span>pbmc<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">prop.table<span class="punctuation">(</span>table<span class="punctuation">(</span>pbmc<span class="operator">$</span>RNA_snn_res.0.4<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-6-修改聚类后的idents"><a href="#2-6-修改聚类后的idents" class="headerlink" title="2.6 修改聚类后的idents"></a>2.6 修改聚类后的idents</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">pbmc <span class="operator">&lt;-</span> RenameIdents<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>`<span class="number">0</span>`=&quot;B cells&quot;,`1`=&quot;NK cells&quot;)</span><br></pre></td></tr></table></figure>

<h3 id="2-7-提取部分Seurat对象"><a href="#2-7-提取部分Seurat对象" class="headerlink" title="2.7 提取部分Seurat对象"></a>2.7 提取部分Seurat对象</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 按照细胞ID提取</span></span><br><span class="line">subset<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>cells<span class="operator">=</span>cells<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照cluster提取</span></span><br><span class="line">subset<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>ident<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">subset<span class="punctuation">(</span>pbmc<span class="punctuation">,</span>ident<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">,</span>invert<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>参考<br>1.<a href="https://www.jianshu.com/p/13142bf51e81">https://www.jianshu.com/p/13142bf51e81</a><br>2.<a href="https://www.jianshu.com/p/1db7c28249d4">https://www.jianshu.com/p/1db7c28249d4</a></p>
]]></content>
      <categories>
        <category>R</category>
        <category>Seurat</category>
      </categories>
      <tags>
        <tag>scRNA-seq</tag>
        <tag>Seurat</tag>
      </tags>
  </entry>
  <entry>
    <title>GATK/bcftools变异检测</title>
    <url>/2022/08/27/GATK-bcftools%E5%8F%98%E5%BC%82%E6%A3%80%E6%B5%8B/</url>
    <content><![CDATA[<p>本文总结利用RNA-seq数据进行snp calling的流程。</p>
<span id="more"></span>

<h2 id="1-构建参考基因组index"><a href="#1-构建参考基因组index" class="headerlink" title="1. 构建参考基因组index"></a>1. 构建参考基因组index</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bwa index Dmel.dna.fa</span><br><span class="line">samtools faidx Dmel.dna.fa</span><br><span class="line">picard CreateSequenceDictionary -R ~/00.reference/01.Dmel/Dmel.dna.fa -O Dmel.dna.dict</span><br></pre></td></tr></table></figure>

<h2 id="2-bam文件预处理"><a href="#2-bam文件预处理" class="headerlink" title="2. bam文件预处理"></a>2. bam文件预处理</h2><p>对bam文件进行排序。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">samtools merge -@ 10 -l 9 merged.bam sample1.bam sample2.bam sample3.bam</span><br><span class="line">samtools <span class="built_in">sort</span> -@ 10 -l 9 merged.bam -o merged.sort.bam</span><br></pre></td></tr></table></figure>

<h2 id="3-去重复mark-duplicates"><a href="#3-去重复mark-duplicates" class="headerlink" title="3. 去重复mark duplicates"></a>3. 去重复mark duplicates</h2><p>去除掉建库、测序过程中偏好性导致的一些”假阳性”地增高的reads。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">picard MarkDuplicates -I merged.sort.bam</span><br><span class="line">\ -M merged_mark_metrics.txt</span><br><span class="line">\ --REMOVE_DUPLICATES 1</span><br><span class="line">\ -O merged.sort.removed.bam</span><br></pre></td></tr></table></figure>

<h2 id="4-1-GATK-snp-calling"><a href="#4-1-GATK-snp-calling" class="headerlink" title="4-1. GATK snp calling"></a>4-1. GATK snp calling</h2><h3 id="1-SplitNCigarReads"><a href="#1-SplitNCigarReads" class="headerlink" title="1. SplitNCigarReads"></a>1. SplitNCigarReads</h3><p>这一步是针对RNA-seq数据call snp特有的步骤。mRNA转录本主要是由DNA的外显子exon的可变剪切，不包括intron部分。因此，在RNA-seq数据call snp时，如果直接比对到基因组上，若比对到intron的N区域，就会有假阳性的snp，为了减少假阳性，需要将reads进行切割，跨越intron区域。若为n个intron的read片段，则切割为n+1个子read片段。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gatk SplitNCigarReads -R ~/00.reference/01.Dmel/Dmel.dna.fa</span><br><span class="line">\ -I merged.sort.removed.bam </span><br><span class="line">\ -O merged.sort.removed.splited.bam</span><br></pre></td></tr></table></figure>

<h3 id="2-GATK-snp-calling"><a href="#2-GATK-snp-calling" class="headerlink" title="2. GATK snp calling"></a>2. GATK snp calling</h3><p>HaplotypeCaller进行变异检测，之后，只保留SNP位点,并对SNP进行过滤：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gatk HaplotypeCaller -R ~/00.reference/01.Dmel/Dmel.dna.fa</span><br><span class="line">\ --ploidy 2 -I 03.bam/merged.sort.removed.bam</span><br><span class="line">\ -O 04.call_snp/all.merged.vcf.gz</span><br><span class="line"></span><br><span class="line">gatk SelectVariants -R ~/00.reference/01.Dmel/Dmel.dna.fa</span><br><span class="line">\ -O 04.call_snp/all.merged.snp.vcf</span><br><span class="line">\ --variant 04.call_snp/all.merged.vcf.gz</span><br><span class="line">\ --select-type-to-include SNP</span><br><span class="line"></span><br><span class="line">gatk VariantFiltration -R ~/00.reference/01.Dmel/Dmel.dna.fa</span><br><span class="line">\ -V 04.call_snp/all.merged.snp.vcf.gz</span><br><span class="line">\ --cluster-size 4 --cluster-window-size 10</span><br><span class="line">\ --mask-name aroundIndel --mask 04.call_snp/all.merged.indel.vcf.gz -mask-extension 3</span><br><span class="line">\ --filter-name <span class="string">&quot;lowMQRankSum&quot;</span> --filter-expression <span class="string">&quot;MQRankSum &lt; 12.5&quot;</span></span><br><span class="line">\ --filter-name <span class="string">&quot;highFS&quot;</span> --filter-expression <span class="string">&quot;FS &gt; 60.0&quot;</span></span><br><span class="line">\ --filter-name <span class="string">&quot;lowReadPosRankSum&quot;</span> --filter-expression <span class="string">&quot;ReadPosRankSum &lt; -8.0&quot;</span></span><br><span class="line">\ --filter-name <span class="string">&quot;lowMQ&quot;</span> --filter-expression <span class="string">&quot;MQ &lt; 40.0&quot;</span></span><br><span class="line">\ --filter-name <span class="string">&quot;lowQD&quot;</span> --filter-expression <span class="string">&quot;QD &lt; 2.0&quot;</span></span><br><span class="line">\ --genotype-filter-name <span class="string">&quot;lowDP&quot;</span> --genotype-filter-expression <span class="string">&quot;DP &lt; 8.0&quot;</span></span><br><span class="line">\ -O 05.filter_snp/all.merged.filered.snp.vcf.gz</span><br></pre></td></tr></table></figure>

<h2 id="4-2-bcftools-snp-calling"><a href="#4-2-bcftools-snp-calling" class="headerlink" title="4-2. bcftools snp calling"></a>4-2. bcftools snp calling</h2><p>去重复之后，也可利用bcftools进行snp calling,并进行过滤。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bcftools mpileup -Ou -f ~/00.reference/01.Dmel/Dmel.dna.fa 03.bam/merged.sort.removed.bam | bcftools call -<span class="built_in">mv</span> -o all.merged.vcf.gz</span><br><span class="line">bcftools filter all.merged.vcf.gz -e <span class="string">&#x27;QUAL&lt;30&#x27;</span> --SnpGap 5 -Oz -o all.filtered.merged.vcf.gz;</span><br><span class="line">bcftools filter all.filtered.merged.vcf.gz -e <span class="string">&#x27;DP&lt;10&#x27;</span> -Oz -o all.filtered2.merged.vcf.gz;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SNP calling</category>
      </categories>
      <tags>
        <tag>SNP calling</tag>
      </tags>
  </entry>
  <entry>
    <title>从FCA数据库中的loom文件中选择想要的cell构建SeuratObject</title>
    <url>/2022/08/30/%E4%BB%8EFCA%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84loom-h5ad-file%E4%B8%AD%E9%80%89%E6%8B%A9%E7%89%B9%E5%AE%9Acell%E6%9E%84%E5%BB%BASeuratObject/</url>
    <content><![CDATA[<p>从FCA数据库中下载的原始.loom文件,选择自己选择想要的cells转换为Seurat对象。</p>
<span id="more"></span>

<p>将.loom文件格式数据转换为SeuratObject，需要SeuratDisk包。</p>
<h2 id="1-SeuratDisk包安装"><a href="#1-SeuratDisk包安装" class="headerlink" title="1. SeuratDisk包安装"></a>1. SeuratDisk包安装</h2><p>SeuratDisk包只能通过github安装，因此，需要下载devtools，然后再用devtools通过github安装。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;devtools&quot;</span><span class="punctuation">)</span></span><br><span class="line">devtools<span class="operator">::</span>install_github<span class="punctuation">(</span><span class="string">&quot;mojaveazure/SeuratDisk&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<h2 id="2-loom文件格式"><a href="#2-loom文件格式" class="headerlink" title="2. .loom文件格式"></a>2. .loom文件格式</h2><p>loom文件格式是HDF5文件的文件结构，可以有效地储存大型单细胞数据集。可以使用<a href="https://www.hdfgroup.org/downloads/hdfview/">HDFview</a>来查看其数据格式。<br>打开之后，数据格式如下：<br><img src="/pics/2022-0830-loom.jfif" alt="alt 图标"><br>&#x2F;matrix中储存基因*细胞矩阵，&#x2F;attrs中储存数据的一些相关信息，如数据创建日期，&#x2F;col_attrs中储存矩阵列（细胞）的信息，如CellID、ClusterID、Embeddings信息等，&#x2F;row_attrs中储存矩阵行（基因）的信息，如基因ID、细胞marker等。&#x2F;layers中储存另外的基因*矩阵，例如scale.data。</p>
<h2 id="3-将loom转换为Seurat"><a href="#3-将loom转换为Seurat" class="headerlink" title="3. 将loom转换为Seurat"></a>3. 将loom转换为Seurat</h2><p>由于Seurat::as.Seurat()所识别的loom文件和FCA数据库中的loom文件格式不太一样，因此不能直接转换，只能自己构建。<br>导入loom文件，并读取基因*细胞矩阵，这样读取的矩阵是raw counts，可以直接根据矩阵的属性访问。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span>Seurat<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> library<span class="punctuation">(</span>SeuratDisk<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> ds <span class="operator">&lt;-</span> Connect<span class="punctuation">(</span><span class="string">&quot;r_fca_biohub_body_10x.loom&quot;</span><span class="punctuation">,</span>mode <span class="operator">=</span> <span class="string">&quot;r&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 读取全部矩阵</span></span><br><span class="line"><span class="operator">&gt;</span> fca_body_mat <span class="operator">&lt;-</span> ds<span class="punctuation">[[</span><span class="string">&quot;/matrix&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line"><span class="comment"># 访问矩阵第一行第一列元素</span></span><br><span class="line"><span class="operator">&gt;</span> ds<span class="punctuation">[[</span><span class="string">&quot;/matrix&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line">	<span class="number">0</span></span><br><span class="line"><span class="comment"># 读取矩阵的维度</span></span><br><span class="line"><span class="operator">&gt;</span> ds<span class="punctuation">[[</span><span class="string">&quot;/matrix&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="operator">$</span>dims</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>读取loom文件中储存的细胞ID和基因ID信息，分别为矩阵的列名和行名。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">fca_body_cellid <span class="operator">&lt;-</span> ds<span class="punctuation">[[</span><span class="string">&quot;/col_attrs/CellID&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">fca_body_geneid <span class="operator">&lt;-</span> ds<span class="punctuation">[[</span><span class="string">&quot;/row_attrs/Gene&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">colnames<span class="punctuation">(</span>fca_body_mat<span class="punctuation">)</span> <span class="operator">&lt;-</span> fca_body_geneid</span><br><span class="line">rownames<span class="punctuation">(</span>fca_body_mat<span class="punctuation">)</span> <span class="operator">&lt;-</span> fca_body_cellid</span><br></pre></td></tr></table></figure>

<p>将自己所需要的细胞ID存储于一个文件中并进行读取。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">mycell <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span>file <span class="operator">=</span> <span class="string">&quot;attrs_myline.txt&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">,</span></span><br><span class="line">sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br><span class="line">mycell <span class="operator">&lt;-</span> mycell<span class="operator">$</span>CellID</span><br><span class="line">mycell <span class="operator">&lt;-</span> as.array<span class="punctuation">(</span>mycell<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p>提取自己所需要的细胞的矩阵。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">fca_my_mat <span class="operator">&lt;-</span> fca_body_mat<span class="punctuation">[</span>rownames<span class="punctuation">(</span>fca_body_mat<span class="punctuation">)</span> <span class="operator">%in%</span> mycell<span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">rm<span class="punctuation">(</span>fca_body_mat<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p>将矩阵转换为稀疏矩阵(节省空间)并进行转置。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">fca_my_mat <span class="operator">&lt;-</span> Matrix<span class="operator">::</span>Matrix<span class="punctuation">(</span>fca_my_mat<span class="punctuation">,</span> sparse<span class="operator">=</span><span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line">fca_my_mat <span class="operator">&lt;-</span> Matrix<span class="operator">::</span>t<span class="punctuation">(</span>fca_my_mat<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>提取所需要的meta信息。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">attrs <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;CellID&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;ClusterID&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;n_counts&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;n_genes&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;percent_mito&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;sex&#x27;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&#x27;annotation&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;annotation_broad&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;S_annotation_broad_extrapolated&#x27;</span><span class="punctuation">)</span></span><br><span class="line">attrs_df <span class="operator">&lt;-</span> map_dfc<span class="punctuation">(</span>attrs<span class="punctuation">,</span> <span class="operator">~</span> ds<span class="punctuation">[[</span>paste0<span class="punctuation">(</span><span class="string">&quot;col_attrs/&quot;</span><span class="punctuation">,</span> .<span class="punctuation">)</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">)</span> <span class="operator">%&gt;%</span> as.data.frame<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">colnames<span class="punctuation">(</span>attrs_df<span class="punctuation">)</span> <span class="operator">&lt;-</span> attrs</span><br><span class="line">rownames<span class="punctuation">(</span>attrs_df<span class="punctuation">)</span> <span class="operator">&lt;-</span> fca_body_cellid</span><br><span class="line"></span><br><span class="line">attrs_df <span class="operator">&lt;-</span> attrs_df<span class="punctuation">[</span>rownames<span class="punctuation">(</span>attrs_df<span class="punctuation">)</span> <span class="operator">%in%</span> mycell<span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">write.table<span class="punctuation">(</span>attrs_df<span class="punctuation">,</span><span class="string">&quot;attrs.txt&quot;</span><span class="punctuation">,</span>sep<span class="operator">=</span><span class="string">&quot;\t&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>如果我们不想要数据库已经注释好的信息，想要自己的注释，例如合并某些cluster，怎么办呢？<br>我们可以在输出的attrs.txt中加上一列my_annotation，然后就可以啦。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">attrs <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;CellID&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;ClusterID&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;n_counts&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;n_genes&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;percent_mito&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;sex&#x27;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&#x27;annotation&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;my_annotation&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;annotation_broad&#x27;</span><span class="punctuation">,</span> <span class="string">&#x27;S_annotation_broad_extrapolated&#x27;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">attrs_df <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span>file <span class="operator">=</span> <span class="string">&quot;attrs_my.txt&quot;</span><span class="punctuation">,</span>sep <span class="operator">=</span> <span class="string">&quot;\t&quot;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line">colnames<span class="punctuation">(</span>attrs_df<span class="punctuation">)</span> <span class="operator">&lt;-</span> attrs</span><br><span class="line">rownames<span class="punctuation">(</span>attrs_df<span class="punctuation">)</span> <span class="operator">&lt;-</span> attrs_df<span class="operator">$</span>CellID</span><br><span class="line"></span><br><span class="line">fca_my_seurat <span class="operator">&lt;-</span> CreateSeuratObject<span class="punctuation">(</span>counts <span class="operator">=</span> fca_my_mat<span class="punctuation">,</span></span><br><span class="line">	meta.data <span class="operator">=</span> attrs_df<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">fca_my_seurat<span class="operator">@</span>active.ident <span class="operator">&lt;-</span> as.factor<span class="punctuation">(</span>fca_my_seurat<span class="operator">$</span>my_annotation<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">saveRDS<span class="punctuation">(</span>fca_my_seurat<span class="punctuation">,</span>file <span class="operator">=</span> <span class="string">&quot;fca_my_seurat.rds&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>这样构建出的SeuratObject就有了自己想要的细胞的表达矩阵以及meta信息，可以进行接下来的分析了。</p>
]]></content>
      <categories>
        <category>R</category>
        <category>Seurat</category>
      </categories>
      <tags>
        <tag>scRNA-seq</tag>
        <tag>Seurat</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令总结-sed、awk、grep、cut</title>
    <url>/2022/08/30/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93-sed%E3%80%81awk%E3%80%81grep%E3%80%81cut/</url>
    <content><![CDATA[<p>记性不好，这里总结一些自己常用的命令，会持续更新，以后用到的会再添加上：</p>
<ul>
<li>sed</li>
<li>awk</li>
<li>grep</li>
<li>cut<span id="more"></span></li>
</ul>
<h2 id="1-sed"><a href="#1-sed" class="headerlink" title="1.sed"></a>1.sed</h2><h3 id="1-1-sed替换"><a href="#1-1-sed替换" class="headerlink" title="1.1 sed替换"></a>1.1 sed替换</h3><p>直接替换file.txt文件中指定的内容，g:全局替换</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;1,$s/abc/123/g&#x27;</span> file.txt</span><br></pre></td></tr></table></figure>
<p>不修改文件中的内容，替换后直接输出到屏幕</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;1,$s/abc/123/g&#x27;</span> file.txt</span><br></pre></td></tr></table></figure>
<p>批量替换当前目录下以file开头的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;1,$s/abc/123/g&#x27;</span> file*</span><br></pre></td></tr></table></figure>

<h3 id="1-2-sed查看"><a href="#1-2-sed查看" class="headerlink" title="1.2 sed查看"></a>1.2 sed查看</h3><p>打印出2-5行，并不改变文件中内容:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -n <span class="string">&#x27;2,5p&#x27;</span> file.txt</span><br></pre></td></tr></table></figure>
<h3 id="1-3-sed删除"><a href="#1-3-sed删除" class="headerlink" title="1.3 sed删除"></a>1.3 sed删除</h3><p>删除第2行、2-5行、2至最后：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;2d&#x27;</span> file.txt</span><br><span class="line">sed <span class="string">&#x27;2,5d&#x27;</span> file.txt</span><br><span class="line">sed <span class="string">&#x27;2,$d&#x27;</span> file.txt</span><br></pre></td></tr></table></figure>
<h3 id="1-4-sed添加"><a href="#1-4-sed添加" class="headerlink" title="1.4 sed添加"></a>1.4 sed添加</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">&#x27;2a add line&#x27;</span> file.txt <span class="comment"># 在第2行后添加&quot;add line&quot;</span></span><br><span class="line">sed <span class="string">&#x27;2i insert line&#x27;</span> file.txt <span class="comment"># 在第2行前添加&quot;insert line&quot;</span></span><br><span class="line">sed <span class="string">&#x27;2a add line1 \</span></span><br><span class="line"><span class="string">add line2&#x27;</span> file.txt <span class="comment"># 在第二行后添加两行用反斜线</span></span><br></pre></td></tr></table></figure>

<h3 id="1-5-sed查找"><a href="#1-5-sed查找" class="headerlink" title="1.5 sed查找"></a>1.5 sed查找</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -n <span class="string">&#x27;/ooo/p&#x27;</span> file.txt <span class="comment"># 查找含有关键字ooo的行</span></span><br><span class="line">sed -n <span class="string">&#x27;/ooo/d&#x27;</span> file.txt <span class="comment"># 查找并删除该行</span></span><br><span class="line">sed -n <span class="string">&#x27;/ooo/&#123;s/ooo/kkk/;p;q&#125;&#x27;</span> <span class="comment"># 查找有ooo的行,替换为kkk，并输出，q:退出</span></span><br></pre></td></tr></table></figure>

<h3 id="1-5-sed多点编辑"><a href="#1-5-sed多点编辑" class="headerlink" title="1.5 sed多点编辑"></a>1.5 sed多点编辑</h3><p>删除第二行，并将ooo替换为kkk。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed -e <span class="string">&#x27;2d&#x27;</span> -e <span class="string">&#x27;s/ooo/kkk/&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-awk"><a href="#2-awk" class="headerlink" title="2.awk"></a>2.awk</h2><h3 id="2-1-awk基本用法"><a href="#2-1-awk基本用法" class="headerlink" title="2.1 awk基本用法"></a>2.1 awk基本用法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $1,$2&#125;&#x27;</span> file.txt</span><br><span class="line">awk -F, <span class="string">&#x27;&#123;pritn $1,$2&#125;&#x27;</span> file.txt <span class="comment"># -F,按逗号分割</span></span><br><span class="line">awk -f try.awk file.txt <span class="comment"># -f后加awk脚本</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">内置变量</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">$n</td>
<td align="center">当前记录的第n个字段，字段间由FS分隔</td>
</tr>
<tr>
<td align="center">$0</td>
<td align="center">完整的输入记录</td>
</tr>
<tr>
<td align="center">FS</td>
<td align="center">字段分隔符(默认是任何空格)</td>
</tr>
<tr>
<td align="center">IGNORECASE</td>
<td align="center">如果为真，则进行忽略大小写的匹配</td>
</tr>
<tr>
<td align="center">NF</td>
<td align="center">一条记录的字段的数目</td>
</tr>
<tr>
<td align="center">NR</td>
<td align="center">已经读出的记录数，就是行号，从1开始</td>
</tr>
<tr>
<td align="center">OFS</td>
<td align="center">输出字段分隔符，默认值与输入字段分隔符一致。</td>
</tr>
<tr>
<td align="center">ORS</td>
<td align="center">输出记录分隔符(默认值是一个换行符)</td>
</tr>
<tr>
<td align="center">RS</td>
<td align="center">记录分隔符(默认是一个换行符)</td>
</tr>
</tbody></table>
<h3 id="2-2-awk运算符"><a href="#2-2-awk运算符" class="headerlink" title="2.2 awk运算符"></a>2.2 awk运算符</h3><table>
<thead>
<tr>
<th align="center">运算符</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&#x3D;;+&#x3D;,-&#x3D;,*&#x3D;,&#x2F;&#x3D;;%&#x3D;;**&#x3D;;^&#x3D;</td>
<td align="center">赋值运算符</td>
</tr>
<tr>
<td align="center">||;&amp;&amp;</td>
<td align="center">逻辑或、与</td>
</tr>
<tr>
<td align="center">~;!~</td>
<td align="center">正则表达式匹配与不匹配</td>
</tr>
<tr>
<td align="center">&lt;;&lt;&#x3D;;&gt;;&gt;&#x3D;;!&#x3D;;&#x3D;&#x3D;</td>
<td align="center">关系运算符</td>
</tr>
</tbody></table>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;$1==2 &#123;print $1,$3&#125;&#x27;</span> log.txt</span><br><span class="line">awk <span class="string">&#x27;$1&gt;2 &amp;&amp; $2==&quot;aaa&quot; &#123;print $1,$2,$3&#125;&#x27;</span> log.txt</span><br></pre></td></tr></table></figure>

<h3 id="2-3-awk正则匹配"><a href="#2-3-awk正则匹配" class="headerlink" title="2.3 awk正则匹配"></a>2.3 awk正则匹配</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;$2 ~ /th/ &#123;print $2,$4&#125;&#x27;</span> log.txt</span><br><span class="line">awk <span class="string">&#x27;/re/ &#x27;</span> log.txt</span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;IGNORECASE=1&#125; /this/&#x27;</span> log.txt  <span class="comment"># 忽略大小写</span></span><br><span class="line">awk <span class="string">&#x27;$2 !~ /th/ &#123;print $2,$4&#125;&#x27;</span> log.txt </span><br><span class="line">awk <span class="string">&#x27;!/th/ &#123;print $2,$4&#125;&#x27;</span> log.txt</span><br></pre></td></tr></table></figure>

<h3 id="2-2-awk-if条件语句"><a href="#2-2-awk-if条件语句" class="headerlink" title="2.2 awk if条件语句"></a>2.2 awk if条件语句</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN &#123;</span></span><br><span class="line"><span class="string">a=20;</span></span><br><span class="line"><span class="string">if (a==10)</span></span><br><span class="line"><span class="string">  print &quot;a = 10&quot;;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  print &quot;a = 20&quot;;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">awk -F, <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">	if($2~/sa59.*/)</span></span><br><span class="line"><span class="string">		print &quot;s1_&quot;$1; </span></span><br><span class="line"><span class="string">	else if($2~/sa60.*/)</span></span><br><span class="line"><span class="string">		print &quot;s2_&quot;$1; </span></span><br><span class="line"><span class="string">	else print &quot;s3_&quot;$1&#125;&#x27;</span> </span><br></pre></td></tr></table></figure>
<h2 id="3-grep"><a href="#3-grep" class="headerlink" title="3.grep"></a>3.grep</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep -v <span class="string">&quot;aaa&quot;</span> <span class="comment"># -v 反向匹配</span></span><br><span class="line"><span class="comment"># -F Interpret PATTERN as a list of fixed strings, separated by newlines, any of which is to be matched. 将样式视为固定字符串的列表。</span></span><br><span class="line"><span class="comment"># -f后面加文件，文件中每一行为一个pattern</span></span><br><span class="line"><span class="built_in">cat</span> test.txt | grep -F -f file.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># -i 忽略字符大小写</span></span><br><span class="line">grep -i <span class="string">&quot;aaa&quot;</span> <span class="built_in">test</span></span><br></pre></td></tr></table></figure>

<h2 id="4-cut"><a href="#4-cut" class="headerlink" title="4.cut"></a>4.cut</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cut</span> -b 2 file.txt   <span class="comment"># 以字节为单位分隔</span></span><br><span class="line"><span class="built_in">cut</span> -c 2- file.txt  <span class="comment"># 以字符为单位分隔，提取第二到最后一个字符</span></span><br><span class="line"><span class="built_in">cut</span> -c 2,4 file.txt <span class="comment"># 以字符为单位分隔，提取第2、4个字符</span></span><br><span class="line"><span class="built_in">cut</span> -c 2-7 file.txt <span class="comment"># 以字符为单位分隔，提取第2至7个字符</span></span><br><span class="line"><span class="built_in">cut</span> -d <span class="string">&quot;,&quot;</span> -f 2 file.txt <span class="comment">#以逗号为分隔符，提取第二个字段</span></span><br><span class="line"><span class="built_in">cut</span> -d <span class="string">&quot;,&quot;</span> -f 2- file.txt</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>scRNA-seq分析之Seurat流程</title>
    <url>/2022/09/08/scRNA-seq%E5%88%86%E6%9E%90%E4%B9%8BSeurat%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<p>本文介绍Seurat进行单细胞聚类的流程。</p>
<span id="more"></span>

<h3 id="1-创建对象"><a href="#1-创建对象" class="headerlink" title="1. 创建对象"></a>1. 创建对象</h3><p>首先需要读取数据，并创建Seurat对象，同时过滤掉在少于3个细胞中表达的基因以及检测到的feature少于200的细胞。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">mydata <span class="operator">&lt;-</span> Read10X<span class="punctuation">(</span>data.dir <span class="operator">=</span> <span class="string">&quot;D:/000 MyWork/000 MyProject/000 scVariants/sample1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                 gene.column <span class="operator">=</span> <span class="number">1</span><span class="punctuation">)</span></span><br><span class="line">mydata <span class="operator">&lt;-</span> CreateSeuratObject<span class="punctuation">(</span>counts <span class="operator">=</span> mydata<span class="punctuation">,</span>project <span class="operator">=</span> <span class="string">&quot;sample1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                            min.cells <span class="operator">=</span> <span class="number">3</span><span class="punctuation">,</span>min.features <span class="operator">=</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">                            assay <span class="operator">=</span> <span class="string">&quot;RNA&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-数据质控"><a href="#2-数据质控" class="headerlink" title="2. 数据质控"></a>2. 数据质控</h3><p>常用的质控指标包括：</p>
<ul>
<li>每个细胞的唯一基因数目 feature number<ul>
<li>低质量或空液泡往往只能检测到少量基因</li>
<li>双液泡（doublet）或多液泡（multiplets）会具有异常多的基因数目</li>
</ul>
</li>
<li>每个细胞的总counts数（相当于每个细胞的测序深度）<ul>
<li>线粒体基因占比</li>
<li>低质量或死细胞会具有异常高的线粒体基因表达</li>
</ul>
</li>
</ul>
<p>这里计算线粒体基因的表达比例，并且查看feature number、count number、线粒体基因占比的小提琴图。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">mydata<span class="punctuation">[[</span><span class="string">&quot;percent.mt&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> PercentageFeatureSet<span class="punctuation">(</span>mydata<span class="punctuation">,</span>pattern <span class="operator">=</span> <span class="string">&quot;^mt:&quot;</span><span class="punctuation">)</span></span><br><span class="line">VlnPlot<span class="punctuation">(</span>object <span class="operator">=</span> mydata<span class="punctuation">,</span> </span><br><span class="line">        features <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;nFeature_RNA&quot;</span><span class="punctuation">,</span> <span class="string">&quot;nCount_RNA&quot;</span><span class="punctuation">,</span> <span class="string">&quot;percent.mt&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> </span><br><span class="line">        ncol <span class="operator">=</span> <span class="number">3</span><span class="punctuation">)</span></span><br><span class="line">VlnPlot<span class="punctuation">(</span>object <span class="operator">=</span> mydata<span class="punctuation">,</span></span><br><span class="line">        features <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;nFeature_RNA&quot;</span><span class="punctuation">,</span> <span class="string">&quot;nCount_RNA&quot;</span><span class="punctuation">,</span> <span class="string">&quot;percent.mt&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">        idents <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span>assay <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span>pt.size <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span>ncol <span class="operator">=</span> <span class="number">3</span><span class="punctuation">)</span></span><br><span class="line">mydata <span class="operator">&lt;-</span> subset<span class="punctuation">(</span>mydata<span class="punctuation">,</span> subset <span class="operator">=</span> nFeature_RNA <span class="operator">&gt;</span> <span class="number">500</span></span><br><span class="line">                <span class="operator">&amp;</span> nFeature_RNA <span class="operator">&lt;</span> <span class="number">5000</span> <span class="operator">&amp;</span> percent.mt <span class="operator">&lt;</span> <span class="number">5</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p>根据小提琴图的情况来决定过滤的标准，有个更好的质控方法是根据质控指标的分位数进行过滤，例如过滤掉 nFeature_RNA 上四分位数和下四分位数的细胞。但是有时候也会感觉标准略微严格，如果我想尽可能多地保留细胞，那也可以只过滤掉一些离群值。</p>
<h3 id="3-normalization"><a href="#3-normalization" class="headerlink" title="3. normalization"></a>3. normalization</h3><p>质控之后，进行counts的normalization，默认使用 “LogNormalize” 的方法，即将每个基因的counts除以细胞总的counts数，乘上10,000，再进行对数转换。这种转换的目的？</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">mydata <span class="operator">&lt;-</span> NormalizeData<span class="punctuation">(</span>mydata<span class="punctuation">,</span>scale.factor <span class="operator">=</span> <span class="number">10000</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>Seurat提供了另外的normalization方法，通过 normalization.method 指定， 包括：</p>
<ul>
<li>“CLR”: centered log ratio transformation</li>
<li>“RC”: equals to “LogNormalize” without log-transformation</li>
</ul>
</blockquote>
<h3 id="4-特征选择"><a href="#4-特征选择" class="headerlink" title="4. 特征选择"></a>4. 特征选择</h3><p>鉴定高变基因（代表了细胞之间主要的生物学差异）进行后续分析，默认选择前2000个。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">mydata <span class="operator">&lt;-</span> FindVariableFeatures<span class="punctuation">(</span>mydata<span class="punctuation">,</span> </span><br><span class="line">                                selection.method <span class="operator">=</span> <span class="string">&quot;vst&quot;</span><span class="punctuation">,</span> nfeatures <span class="operator">=</span> <span class="number">2000</span><span class="punctuation">)</span></span><br><span class="line">top10 <span class="operator">&lt;-</span> head<span class="punctuation">(</span>VariableFeatures<span class="punctuation">(</span>mydata<span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">)</span></span><br><span class="line">plot1 <span class="operator">&lt;-</span> VariableFeaturePlot<span class="punctuation">(</span>mydata<span class="punctuation">)</span></span><br><span class="line">plot2 <span class="operator">&lt;-</span> LabelPoints<span class="punctuation">(</span>plot <span class="operator">=</span> plot1<span class="punctuation">,</span> points <span class="operator">=</span> top10<span class="punctuation">,</span> repel <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">                     xnudge <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span>ynudge <span class="operator">=</span> <span class="number">0</span><span class="punctuation">)</span></span><br><span class="line">plot1</span><br><span class="line">plot2</span><br></pre></td></tr></table></figure>

<h3 id="5-数据缩放"><a href="#5-数据缩放" class="headerlink" title="5. 数据缩放"></a>5. 数据缩放</h3><p>对数据进行缩放scaling，目的是使数据的均值为0，方差为1。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">all.genes <span class="operator">&lt;-</span> rownames<span class="punctuation">(</span>mydata<span class="punctuation">)</span></span><br><span class="line">mydata<span class="punctuation">[[</span><span class="string">&quot;percent.mt&quot;</span><span class="punctuation">]</span><span class="punctuation">]</span> <span class="operator">&lt;-</span> PercentageFeatureSet<span class="punctuation">(</span>mydata<span class="punctuation">,</span></span><br><span class="line">                                               pattern <span class="operator">=</span> <span class="string">&quot;^mt:&quot;</span><span class="punctuation">,</span>assay<span class="operator">=</span><span class="string">&quot;RNA&quot;</span><span class="punctuation">)</span></span><br><span class="line">mydata <span class="operator">&lt;-</span> ScaleData<span class="punctuation">(</span>mydata<span class="punctuation">,</span> features <span class="operator">=</span> all.genes<span class="punctuation">,</span>vars.to.regress <span class="operator">=</span> <span class="string">&quot;percent.mt&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>Seurat v4.0版本中新的标准化方法SCTransform，这个函数可以替代三个函数normalization、Scale、FindVariableFeatures的功能。</p>
</blockquote>
<h3 id="6-线性降维"><a href="#6-线性降维" class="headerlink" title="6. 线性降维"></a>6. 线性降维</h3><p>只用2000个高变基因进行PCA线性降维，根据ElbowPlot函数的拐点确定后续用于分析的PCA主成分数。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">mydata <span class="operator">&lt;-</span> RunPCA<span class="punctuation">(</span>mydata<span class="punctuation">,</span> npcs <span class="operator">=</span> <span class="number">20</span><span class="punctuation">,</span> verbose <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">DimPlot<span class="punctuation">(</span>mydata<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;pca&quot;</span><span class="punctuation">)</span></span><br><span class="line">DimHeatmap<span class="punctuation">(</span>mydata<span class="punctuation">,</span> dims <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">,</span> cells <span class="operator">=</span> <span class="number">500</span><span class="punctuation">,</span> balanced <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">mydata <span class="operator">&lt;-</span> JackStraw<span class="punctuation">(</span>mydata<span class="punctuation">,</span> num.replicate <span class="operator">=</span> <span class="number">100</span><span class="punctuation">)</span></span><br><span class="line">mydata <span class="operator">&lt;-</span> ScoreJackStraw<span class="punctuation">(</span>mydata<span class="punctuation">,</span> dims <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">)</span></span><br><span class="line">JackStrawPlot<span class="punctuation">(</span>mydata<span class="punctuation">,</span> dims <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">)</span></span><br><span class="line">ElbowPlot<span class="punctuation">(</span>mydata<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<h3 id="7-细胞聚类"><a href="#7-细胞聚类" class="headerlink" title="7. 细胞聚类"></a>7. 细胞聚类</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">mydata <span class="operator">&lt;-</span> FindNeighbors<span class="punctuation">(</span>mydata<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;pca&quot;</span><span class="punctuation">,</span> dims <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">)</span></span><br><span class="line">mydata <span class="operator">&lt;-</span> FindClusters<span class="punctuation">(</span>mydata<span class="punctuation">,</span> resolution <span class="operator">=</span> <span class="number">0.4</span><span class="punctuation">)</span></span><br><span class="line">mydata <span class="operator">&lt;-</span> RunUMAP<span class="punctuation">(</span>mydata<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;pca&quot;</span><span class="punctuation">,</span> dims <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">)</span></span><br><span class="line">mydata <span class="operator">&lt;-</span> RunTSNE<span class="punctuation">(</span>mydata<span class="punctuation">,</span>reduction <span class="operator">=</span> <span class="string">&quot;pca&quot;</span><span class="punctuation">,</span>dims <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="8-UMAP-x2F-tSNE降维"><a href="#8-UMAP-x2F-tSNE降维" class="headerlink" title="8. UMAP&#x2F;tSNE降维"></a>8. UMAP&#x2F;tSNE降维</h3><figure class="highlight r"><table><tr><td class="code"><pre><span class="line">p1 <span class="operator">&lt;-</span> DimPlot<span class="punctuation">(</span>mydata<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;umap&quot;</span><span class="punctuation">)</span></span><br><span class="line">p2 <span class="operator">&lt;-</span> DimPlot<span class="punctuation">(</span>mydata<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;umap&quot;</span><span class="punctuation">,</span> label <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> repel <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">p1<span class="operator">+</span>p2</span><br><span class="line"></span><br><span class="line">p3 <span class="operator">&lt;-</span> DimPlot<span class="punctuation">(</span>mydata<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;tsne&quot;</span><span class="punctuation">)</span></span><br><span class="line">p4 <span class="operator">&lt;-</span> DimPlot<span class="punctuation">(</span>mydata<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;tsne&quot;</span><span class="punctuation">,</span> label <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> repel <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">p3<span class="operator">+</span>p4</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="9-鉴定细胞类群的marker"><a href="#9-鉴定细胞类群的marker" class="headerlink" title="9. 鉴定细胞类群的marker"></a>9. 鉴定细胞类群的marker</h3><p>FindMarkers返回指定指定cluster之间的marker。<br>FindAllMarkers 可以一次寻找所有clusters的markers，但只返回上调的markers。<br>VlnPlot绘制表达情况的小提琴图；FeaturePlot绘制表达情况的细胞降维图。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># find all markers distinguishing cluster 5 from clusters 0 and 3</span></span><br><span class="line">cluster5.markers <span class="operator">&lt;-</span> FindMarkers<span class="punctuation">(</span>mydata<span class="punctuation">,</span> ident.1 <span class="operator">=</span> <span class="number">5</span><span class="punctuation">,</span> ident.2 <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">0</span><span class="punctuation">,</span> <span class="number">3</span><span class="punctuation">)</span><span class="punctuation">,</span> min.pct <span class="operator">=</span> <span class="number">0.25</span><span class="punctuation">)</span></span><br><span class="line">head<span class="punctuation">(</span>cluster5.markers<span class="punctuation">,</span> n <span class="operator">=</span> <span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># find markers for every cluster compared to all remaining cells, report only the positive ones</span></span><br><span class="line">mydata.markers <span class="operator">&lt;-</span> FindAllMarkers<span class="punctuation">(</span>mydata<span class="punctuation">,</span> only.pos <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> min.pct <span class="operator">=</span> <span class="number">0.25</span><span class="punctuation">,</span> logfc.threshold <span class="operator">=</span> <span class="number">0.25</span></span><br><span class="line">mydata.markers <span class="operator">%&gt;%</span></span><br><span class="line">    group_by<span class="punctuation">(</span>cluster<span class="punctuation">)</span> <span class="operator">%&gt;%</span></span><br><span class="line">    slice_max<span class="punctuation">(</span>n <span class="operator">=</span> <span class="number">2</span><span class="punctuation">,</span> order_by <span class="operator">=</span> avg_log2FC<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">VlnPlot<span class="punctuation">(</span>mydata<span class="punctuation">,</span> features <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;MS4A1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;CD79A&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">FeaturePlot<span class="punctuation">(</span>mydata<span class="punctuation">,</span> features <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;MS4A1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;CD79A&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="10-细胞注释"><a href="#10-细胞注释" class="headerlink" title="10. 细胞注释"></a>10. 细胞注释</h3><p>进行细胞注释，重命名cluster ID为细胞类型。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">new.cluster.ids <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Naive CD4 T&quot;</span><span class="punctuation">,</span> <span class="string">&quot;CD14+ Mono&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Memory CD4 T&quot;</span><span class="punctuation">,</span> <span class="string">&quot;B&quot;</span><span class="punctuation">,</span> <span class="string">&quot;CD8 T&quot;</span><span class="punctuation">,</span> <span class="string">&quot;FCGR3A+ Mono&quot;</span><span class="punctuation">,</span><span class="string">&quot;NK&quot;</span><span class="punctuation">,</span> <span class="string">&quot;DC&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Platelet&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="built_in">names</span><span class="punctuation">(</span>new.cluster.ids<span class="punctuation">)</span> <span class="operator">&lt;-</span> levels<span class="punctuation">(</span>mydata<span class="punctuation">)</span></span><br><span class="line">mydata <span class="operator">&lt;-</span> RenameIdents<span class="punctuation">(</span>mydata<span class="punctuation">,</span> new.cluster.ids<span class="punctuation">)</span></span><br><span class="line">DimPlot<span class="punctuation">(</span>mydata<span class="punctuation">,</span> reduction <span class="operator">=</span> <span class="string">&quot;umap&quot;</span><span class="punctuation">,</span> label <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> pt.size <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span> <span class="operator">+</span> NoLegend<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>R</category>
        <category>Seurat</category>
      </categories>
      <tags>
        <tag>scRNA-seq</tag>
        <tag>Seurat</tag>
      </tags>
  </entry>
  <entry>
    <title>三代hifi测序之基因组组装</title>
    <url>/2022/09/08/%E4%B8%89%E4%BB%A3hifi%E6%B5%8B%E5%BA%8F%E4%B9%8B%E5%9F%BA%E5%9B%A0%E7%BB%84%E7%BB%84%E8%A3%85/</url>
    <content><![CDATA[<p>本文介绍三代hifi基因组测序的组装。</p>
<span id="more"></span>

<h2 id="1-HiFi测序"><a href="#1-HiFi测序" class="headerlink" title="1.HiFi测序"></a>1.HiFi测序</h2><p>HiFi reads（High fidelity reads）是Sequel II三代测序平台推出的兼顾长读长和高准确度的测序序列，2019年由PacBio公司推出，一般采用CCS（Circular Consensus Sequencing）模式测序，HiFi测序能够产出既有较长读长（10-20kb）又具有高序列精度的测序结果（约99.9%）。</p>
<p>环化共有序列CCS的测序方式：构建一个环形的DNA文库，在这种测序模式下，酶读长一般大于插入片段(即被测序片段)长度，因此酶会绕着模板进行滚环测序，插入片段会被多次测序。单次测序中造成的随机测序错误，可以通过算法整合和自我纠错校正来去除，最终得到高准确度的HiFi reads。<br><img src="/pics/2022-0908-hifi.png" alt="alt 图标"></p>
<p>适用于HiFi测序组装的软件有Flye、HiCanu(是Canu软件专门针对HiFi reads优化版本)、hifiasm(速度快、专注解析单倍型)。</p>
<h2 id="2-HiFi测序下机数据"><a href="#2-HiFi测序下机数据" class="headerlink" title="2.HiFi测序下机数据"></a>2.HiFi测序下机数据</h2><p>Sequal平台的下机数据主要有三种：bam文件、bam.pbi文件、xml文件。</p>
<h3 id="2-1-BAM文件"><a href="#2-1-BAM文件" class="headerlink" title="2.1 BAM文件"></a>2.1 BAM文件</h3><p>Pacbio下机数据中的BAM文件是没有比对过的，用于储存序列。<br>第一列：reads信息<br>    {movieName}&#x2F;{holeNumber}&#x2F;{qStart}_{qEnd}<br>    (对于CCS：{movieName}&#x2F;{holeNumber}&#x2F;ccs)<br>    MovieName 是cell的名字，holeNumer是ZMW孔的编号，qStart和qEnd是subreads相对于ZMW reads的位置。<br>第二列 (sum of flags)：比对信息，均为4 代表没有比对上，也表明了bam文件只储存了序列信息，而没有比对信息。<br>第三列 (RNAM)：参考序列，值为*，代表无参考序列<br>第四列 (position) : 比对上的第一个碱基位置 0<br>第五列 (Mapping quality) : 比对质量分数 255<br>第六列 (CIGAR值) : 比对的具体情况<br>第七列 (MRNM, ) : mate 对应的染色体<br>第八列 (mate position) : mate对应的位置 0<br>第九列 (ISIZE, Inferred fragment size) : 推断的插入片段大小 0<br>第十列 (Sequence) : 序列信息 具体的ATCG<br>第十一列 (ASCII码) : 碱基质量分数 ASCII+33<br>第十二列 : 可选区域 记录Reads的总体属性包括信号长度，信号强度等信息。</p>
<h3 id="2-2-bam-pbi"><a href="#2-2-bam-pbi" class="headerlink" title="2.2 bam.pbi"></a>2.2 bam.pbi</h3><p>BAM文件的索引文件。</p>
<h2 id="3-hifi-reads组装"><a href="#3-hifi-reads组装" class="headerlink" title="3.hifi reads组装"></a>3.hifi reads组装</h2><h3 id="3-1-flye组装"><a href="#3-1-flye组装" class="headerlink" title="3.1 flye组装"></a>3.1 flye组装</h3><p>用flye进行组装，输入是测序的fasta或fastq文件，所以需要将下机bam文件转换为fasta文件。bam2fastx软件可以实现转换，也可使用samtools转换。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># bam to fasta</span></span><br><span class="line">conda install bam2fastx</span><br><span class="line">bam2fasta -o out.hifi.fa in.subreads.bam</span><br></pre></td></tr></table></figure>
<p>完成转换之后，可以用flye进行组装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># assembly</span></span><br><span class="line">conda install flye</span><br><span class="line"><span class="comment"># 对pacbio其他数据(Pacbio CLR)用--pabio-raw选项，hifi数据用--pacbio-hifi选项，针对nanopore用--nano-raw选项</span></span><br><span class="line">flye --pacbio-hifi out.hifi.fa --threads 6 --out-dir out</span><br><span class="line"><span class="comment"># some useful option ：</span></span><br><span class="line"><span class="comment"># --genome-size 指定基因组大小</span></span><br><span class="line"><span class="comment"># --hifi-error 指定错误率</span></span><br></pre></td></tr></table></figure>
<p>组装结果，输出文件：<br>assembly.fasta:最终组装结果<br>assembly_graph.gfa&#x2F;assembly_graph.gv:<br>assembly_info.txt:</p>
<h3 id="3-2-hifiasm组装"><a href="#3-2-hifiasm组装" class="headerlink" title="3.2.hifiasm组装"></a>3.2.hifiasm组装</h3><p>hifiasm擅长组装单倍型，其组装有三种模式：只有hifi reads、Hifi reads+ Hi-C、hifi reads＋双亲二代测序的Trio-binning。</p>
<p>hifiasm安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#install</span></span><br><span class="line">conda install -c bioconda hifiasm</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/chhylp123/hifiasm</span><br><span class="line"><span class="built_in">cd</span> hifiasm &amp;&amp; make</span><br></pre></td></tr></table></figure>
<p>hifiasm组装，输出为assembly.fa</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 只有hifi reads</span></span><br><span class="line">hifiasm --primary -o out -t 10 out.hifi.fa &gt; assembly.log</span><br><span class="line"><span class="comment"># --primary：no need for genotyping,不需要分型</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># hifi reads+ Hi-C</span></span><br><span class="line">hifiasm -o out.asm -t 10 -h1 read1.fq.gz -h2 read2.fq.gz hifi.reads.fq.gz</span><br></pre></td></tr></table></figure>

<h3 id="4-quast评估"><a href="#4-quast评估" class="headerlink" title="4. quast评估"></a>4. quast评估</h3><p>完成基因组组装之后，要用quast评估组装结果，quast主要是计算contigs数量、总长度、N50、N90、L50、GC rate等等，可以根据参考基因组进行评估，也可以不依据参考基因组进行评估。软件使用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#install</span></span><br><span class="line">wget -c https://github.com/ablab/quast/releases/download/quast_5.1.0rc1/quast-5.1.0rc1.tar.gz</span><br><span class="line">tar -zxvf quast-5.1.0rc1.tar.gz</span><br><span class="line"></span><br><span class="line">python quast.py assembly.fasta -t 8 -r reference.fa -o quast-r</span><br></pre></td></tr></table></figure>

<p>评估指标：<br>1.contig size<br>    No. of contigs: 组装中的 contigs 总个数。<br>    Largest contig: 最长 contig 的长度。<br>    Total length: assembly 中的碱基总数。<br>    Nx (where 0&lt;&#x3D;x&lt;&#x3D;100): 最长长度的 contigs 占组装碱基的百分比。<br>    NGx, Genome Nx: 相等或更长的重叠群产生参考基因组长度的 x% 的重叠群长度，而不是组装结果长度的 x%。</p>
<p>2.基因组相关统计<br>    Genome fraction (%) : 基因组中被组装结果覆盖到的碱基数 除以 参考序列的总长度得到的比值；位于重复区域的contig可能会比对到多个位置，因此会被重复计算。<br>    Duplication ratio：组装结果中可比对到基因组的碱基数 与 基因组中被覆盖到的碱基数的比值；如果组装的结果中重复序列较多，多个contig覆盖同一个基因组区域的话，这个值会大于1。这种情况可能是由于过多的估计了重复序列的拷贝数。<br>    Largest alignment：将组装结果同基因组进行比对，得到的最大的连续的比对的长度；这个值一般会同largest contig相同，但是如果larget contig有些missassembled，或者部分未比对上去的话，会相对小一些。<br>    Total aligned length：组装结果中可比对到基因组的碱基数，由于存在未比对和部分未比对，这个数字一般会小于组装的结果的总长度（total length)。</p>
<p>3.组装错误等，这些只能根据已知参考基因组进行评估。<br>    No. of misassemblies: 组装错误的数量。<br>    No. of misassembled contigs: 包含错误组装断点的 contigs 数量。<br>    Misassembled contigs length: 在所有 contig 中包含一个或多个错配的碱基总数。<br>    No. of unaligned contigs: 与参考序列没有对齐的 contigs 数量。<br>    No. of ambiguously mapped contigs: 在参考基因组的多个位置具有相同质量的高得分参考比对的 contigs 数量。<br>    除了以上汇总统计数据之外，Quast 还生成包含每个 contig 详细信息的报告，包括 contig 是否未对齐、不明群映射、错误组装或正确。</p>
<p>4.未比对上的。<br>    fully unaligned contigs：没有比对上参考基因组的contig数<br>    Fully unaligned length：没有比对上参考基因组的contig总长度<br>    partially unaligned contigs：部分没有比对上基因组的contig数，长度大于参数值（500bp）<br>    Partially unaligned length：部分没有比对上基因组的contig中总的没有比对上的碱基数</p>
<p>5.错配的<br>    mismatches ：所有比对上的碱基中，mismatch的个数<br>    indels ：所有比对上的碱基中，indel的个数<br>    Indels length ：indel的总长度<br>    mismatches per 100 kbp：每100kbp中，mismatch的个数<br>    indels per 100 kbp : 每100kbp中，indel的个数<br>    indels (&lt;&#x3D; 5 bp) : 长度小于5的indel个数<br>    indels (&gt; 5 bp) : 长度大于5bp的indel个数<br>    N’s ：N碱基的个数<br>    N’s per 100 kbp：每100kbp中N碱基的个数</p>
<h3 id="5-进行polish"><a href="#5-进行polish" class="headerlink" title="5.进行polish"></a>5.进行polish</h3><p>三代测序读长长，但是也有较高的错误率，组装完成后可以用pilon进行polish，可以用二代测序(pilon)或三代数据(gcpp或racon)再次纠错。这里，介绍gcpp，gcpp封装在pb-assembly中，可以通过conda安装pb-assembly,也可以直接安装gcpp。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># use NGS pair end data or hifi reads to polish, here, we use hifi reads to polish hifi-assembly</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># environment</span></span><br><span class="line">conda create -n pb-polish</span><br><span class="line">conda activate pb-polish</span><br><span class="line">conda install -c bioconda pilon</span><br><span class="line">conda install -c bioconda pbmm2</span><br><span class="line">conda install -c bioconda pbgcpp</span><br><span class="line"><span class="comment"># input: assembly.fa hifi.subreads.bam</span></span><br><span class="line"><span class="comment"># output: assembly-polished.fa</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># interation 2~3 times迭代2至3次。</span></span><br><span class="line">samtools faidx assembly.fa</span><br><span class="line">samtools index pacbio.subreads.bam</span><br><span class="line">pbmm2 align --preset HIFI pacbio.subreads.bam assembly.fasta | samtools <span class="built_in">sort</span> -@ 16 &gt; map.pacbio.bam</span><br><span class="line">pbindex map.pacbio.bam</span><br><span class="line">gcpp -j 16 -r assembly.fasta -o variants.vcf -o consensus</span><br><span class="line"></span><br><span class="line"><span class="comment">#gcpp -j 16 -r assembly.fasta -o variants.vcf -o polished.1.fasta DN.map2flye.bam</span></span><br></pre></td></tr></table></figure>

<h3 id="6-busco评估基因组组装完整性"><a href="#6-busco评估基因组组装完整性" class="headerlink" title="6.busco评估基因组组装完整性"></a>6.busco评估基因组组装完整性</h3><p>conda install -c bioconda busco<br>待更新</p>
]]></content>
      <categories>
        <category>基因组</category>
      </categories>
      <tags>
        <tag>基因组</tag>
      </tags>
  </entry>
  <entry>
    <title>python学习之1</title>
    <url>/2022/09/13/python%E5%AD%A6%E4%B9%A0%E4%B9%8B1/</url>
    <content><![CDATA[<p>这个category记录了自己重新学习python的过程(Python 3),这篇是一些基础过程。</p>
<span id="more"></span>

<h2 id="1-Python数据类型"><a href="#1-Python数据类型" class="headerlink" title="1.Python数据类型"></a>1.Python数据类型</h2><p>python有6个数据类型：不可变数据：数字、字符串、元组；可变数据：列表、集合、字典。type()函数可以查看变量的类型。类型转换函数：int()、float()、str()、tuple()、list()、set()、frozenset()等等。</p>
<h3 id="1-1-python推导式"><a href="#1-1-python推导式" class="headerlink" title="1.1 python推导式"></a>1.1 python推导式</h3><h4 id="1-列表推导式："><a href="#1-列表推导式：" class="headerlink" title="(1).列表推导式："></a>(1).列表推导式：</h4><p>[表达式 for 变量 in 列表]<br>[out_exp_res for out_exp in input_list]<br>或者<br>[表达式 for 变量 in 列表 if 条件]<br>[out_exp_res for out_exp in input_list if condition]</p>
<p>例如：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>names = [<span class="string">&#x27;Bob&#x27;</span>,<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;alice&#x27;</span>,<span class="string">&#x27;Jerry&#x27;</span>,<span class="string">&#x27;Wendy&#x27;</span>,<span class="string">&#x27;Smith&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_names = [name.upper()<span class="keyword">for</span> name <span class="keyword">in</span> names <span class="keyword">if</span> <span class="built_in">len</span>(name)&gt;<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(new_names)</span><br><span class="line">[<span class="string">&#x27;ALICE&#x27;</span>, <span class="string">&#x27;JERRY&#x27;</span>, <span class="string">&#x27;WENDY&#x27;</span>, <span class="string">&#x27;SMITH&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>multiples = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>) <span class="keyword">if</span> i % <span class="number">3</span> == <span class="number">0</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(multiples)</span><br><span class="line">[<span class="number">0</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">9</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">18</span>, <span class="number">21</span>, <span class="number">24</span>, <span class="number">27</span>]</span><br></pre></td></tr></table></figure>

<h4 id="2-字典推导式"><a href="#2-字典推导式" class="headerlink" title="(2).字典推导式"></a>(2).字典推导式</h4><p>{ key_expr: value_expr for value in collection }<br>或<br>{ key_expr: value_expr for value in collection if condition }</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">listdemo = [<span class="string">&#x27;Google&#x27;</span>,<span class="string">&#x27;Runoob&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>]</span><br><span class="line"><span class="comment"># 将列表中各字符串值为键，各字符串的长度为值，组成键值对</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>newdict = &#123;key:<span class="built_in">len</span>(key) <span class="keyword">for</span> key <span class="keyword">in</span> listdemo&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>newdict</span><br><span class="line">&#123;<span class="string">&#x27;Google&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;Runoob&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;Taobao&#x27;</span>: <span class="number">6</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic = &#123;x: x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> (<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>)&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="number">2</span>: <span class="number">4</span>, <span class="number">4</span>: <span class="number">16</span>, <span class="number">6</span>: <span class="number">36</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(dic)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;dict&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>
<p>集合推导式、元组推导式也类似。</p>
<p>python注释：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">多行</span></span><br><span class="line"><span class="string">注释</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">多行</span></span><br><span class="line"><span class="string">注释</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-一些有用的函数"><a href="#2-一些有用的函数" class="headerlink" title="2. 一些有用的函数"></a>2. 一些有用的函数</h3><h4 id="2-1-随机数函数"><a href="#2-1-随机数函数" class="headerlink" title="2.1 随机数函数"></a>2.1 随机数函数</h4><p><code>choice(seq)</code><br>从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。<br><code>randrange ([start,] stop [,step])</code><br>从指定范围内，按指定基数递增的集合中获取一个随机数，基数默认值为 1<br><code>random()</code><br>随机生成下一个实数，它在[0,1)范围内。<br><code>seed([x])</code>改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed。<br><code>shuffle(lst)</code><br>将序列的所有元素随机排序<br><code>uniform(x, y)</code><br>随机生成下一个实数，它在[x,y]范围内。</p>
<h4 id="2-2-字符串函数"><a href="#2-2-字符串函数" class="headerlink" title="2.2 字符串函数"></a>2.2 字符串函数</h4><p><code>join(seq)</code><br>    以指定字符串作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串。<br><code>len(string)</code>	<br>    返回字符串长度<br><code>lower()</code><br>    转换字符串中所有大写字符为小写。<br><code>lstrip()</code><br>    截掉字符串左边的空格或指定字符。<br><code>split(str=&quot;&quot;, num=string.count(str))</code><br>    以 str 为分隔符截取字符串，如果 num 有指定值，则仅截取 num+1 个子字符串<br><code>upper()</code><br>    转换字符串中的小写字母为大写<br><code>find(str, beg=0, end=len(string))</code><br>    检测 str 是否包含在字符串中，如果指定范围 beg 和 end ，则检查是否包含在指定范围内，如果包含返回开始的索引值，否则返回-1<br><code>count(str, beg= 0,end=len(string))</code><br>    返回 str 在 string 里面出现的次数，如果 beg 或者 end 指定则返回指定范围内 str 出现的次数</p>
<h3 id="3-索引"><a href="#3-索引" class="headerlink" title="3. 索引"></a>3. 索引</h3><p>python索引：从前到后的索引从0开始，从后往前的索引：最后一项是-1。切片时是[2:5]即取索引为2到4的值，相当于前闭后开区间。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>医学统计基础学习笔记1</title>
    <url>/2022/09/14/%E5%8C%BB%E5%AD%A6%E7%BB%9F%E8%AE%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</url>
    <content><![CDATA[<p>医学统计方法基础。</p>
<span id="more"></span>

<h3 id="1-统计学概念"><a href="#1-统计学概念" class="headerlink" title="1 统计学概念"></a>1 统计学概念</h3><p>样本之间的变异（variation）使得实验或观察的结果具有不确定性，统计学的目的就是采用统计学方法，发现不确定现象背后隐藏的规律。</p>
<h4 id="1-1-数据类型"><a href="#1-1-数据类型" class="headerlink" title="1.1 数据类型"></a>1.1 数据类型</h4><p>定性&#x2F;分类数据：又分为有序数据（如肿瘤分级、I级、II级等）和无序数据（如血型、性别）；<br>    分类数据的分层大于2时，为多分类数据。<br>定量&#x2F;计量数据：连续型数据（如身高、体重）和不连续型数据（如疾病复发次数）。</p>
<h4 id="1-2-总体与样本"><a href="#1-2-总体与样本" class="headerlink" title="1.2 总体与样本"></a>1.2 总体与样本</h4><p>总体：研究对象全体；<br>样本：样本要有随机性，并且具有总体的特征。<br>从总体到样本：sampling；取样中的问题：取多少？采样部位（均匀的或不均匀的，这与样本分布有关）？如何保证抽样的随机性？<br>从样本到总体：inference。推断不是百分百正确的，是有误差在的，怎样使误差最小？</p>
<h4 id="1-3-参数与统计量"><a href="#1-3-参数与统计量" class="headerlink" title="1.3 参数与统计量"></a>1.3 参数与统计量</h4><p>参数：总体的统计指标，如均值、标准差，固定的常数；<br>统计量：样本的统计指标，如样本均值、样本标准差，是在参数附近随机波动的随机变量。</p>
<p>一些常用的统计量：</p>
<blockquote>
<p>方差：变异度分析<br>标准差：变量分布的离散程度，结合均数描述正态分布特征<br>标准误：样本统计量的标准差（描述抽样误差的大小）<br>极差：<br>四分位数间距：与中位数一起描述数据的集中和离散程度<br>变异系数：标准差&#x2F;均值，代表数据沿着平均值波动的幅度比例，值越大意味着波动性越大，且该种波动性是以平均值作为标准。</p>
</blockquote>
<h4 id="1-4-统计推断"><a href="#1-4-统计推断" class="headerlink" title="1.4 统计推断"></a>1.4 统计推断</h4><p><strong>参数估计</strong>：用样本指标(即统计量)估计总体指标(称为参数)<br>    点估计：直接估计，没有考虑抽样误差的情况<br>    区间估计：以一定的可信度下（置信区间：1-α），同时考虑抽样误差，来估计总体</p>
<p><strong>假设检验</strong>：假设检验是先对总体参数提出一个假设值，然后利用样本信息判断这一假设是否成立。<br>    一种叫原假设，也叫零假设，用H0表示。原假设一般是统计者想要拒绝的假设。原假设的设置一般为：等于&#x3D;、大于等于&gt;&#x3D;、小于等于&lt;&#x3D;。另外一种叫备择假设，用H1表示。备则假设是统计者想要接受的假设。备择假设的设置一般为：不等于、大于&gt;、小于&lt;。</p>
<p><strong>抽样误差</strong>：样本统计量与总体参数之间的差异（由于个体差异导致的）。<br><strong>标准误</strong>：均数的标准误&#x2F;率的标准误<br><strong>标准误与标准差</strong></p>
<blockquote>
<p>例如我们要调查地区A中10岁男孩的身高。如果全部都统计下来，直接测是最准确的数据。但是成本高，不现实。因此需要进行采样，一次测量100个男孩的身高，求这一次的均值M1与标准差S1，如果采样10次，每次都取100人，我们会得到10个均值，分别记为M1，M2，M3…M10，对这10个均值再求一个均值M以及标准差S，其中这个标准差S就是标准误(standard error)，即均值的标准误差(standard error of mean)。<br>第一，标准差是对一次抽样的原始数据进行计算的，而标准误则是对多次抽样的样本统计量进行计算的（这个统计量可以是均值，可以是率）；第二，标准差只是一个描述性指标，只是描述原始数据的波动情况，而标准误是跟统计推断有关的指标，大多数的统计量计算都需要用到标准误。</p>
</blockquote>
<p><strong>置信区间</strong>：按照预先给定的概率1-α，确定一个包含未知总体参数的范围，这一范围为参数的置信区间。<br>    95%置信区间：从样本中作随机抽样，作100次，每个样本可算得一个置信区间，这100个可信区间中，平均有95个置信区间包含μ（估计正确），5个不包含μ（估计错误）。<br><strong>p值的含义</strong>：p值并不代表差异显著性的大小，而是说明两组之间的差异具有统计学意义。同时，p值越小，实验结果重现性越好。<br>注：有统计学差异，不代表就具有生物学意义。</p>
<p><strong>一型错误α：假阳性错误，弃真错误</strong><br>    I类错误，也称为假阳性错误，就是说实际上总体并无差异，原假设H0是成立的，但是通过假设检验P≤α，在设定α的检验水准下，拒绝了H0，认为有差异，出现了假阳性的现象。<br><strong>二型错误β：假阴性错误，纳伪错误</strong><br>    II类错误，也称为假阴性错误，就是说实际上原假设H0不成立，但是通过假设检验P＞α，在设定α的检验水准下，不拒绝H0，得出了阴性的结论，此时犯II类错误的概率为β。</p>
<table>
<thead>
<tr>
<th align="center">基于样本的决定</th>
<th align="center">H0为真</th>
<th align="center">H0为假</th>
</tr>
</thead>
<tbody><tr>
<td align="center">接受H1</td>
<td align="center">I类错误</td>
<td align="center">正确</td>
</tr>
<tr>
<td align="center">接受H0</td>
<td align="center">正确</td>
<td align="center">II类错误</td>
</tr>
</tbody></table>
<p><strong>检验效能</strong>：1-β，即1-第二类错误的概率，表示在一定的检验水准下，当H1为真时，意味着H0为假，假设检验能够拒绝H0的概率。</p>
<h3 id="2-假设检验方法的选择"><a href="#2-假设检验方法的选择" class="headerlink" title="2 假设检验方法的选择"></a>2 假设检验方法的选择</h3><p><strong>1）、单组资料的分析</strong><br>如果数据呈正态分布，则采用单样本t检验(One-Sample Test)；如果数据呈非正态分布，可以采用相应的非参数统计方法Wilcoxon符号等级检验(Wilcoxon Signed-Rank Test)。 </p>
<p><strong>2）、两组资料的分析</strong><br>首先，需要判别数据为定量数据还是分类数据。如果是定量数据，数据的分布特征呈正态，则选择两样本t检验(Two-Sample Test)；如果定量数据呈非正态分布，则选择Wilcoxon等级和检验(Wileoxon Rank Sum Test)。对于分类数据，卡方检验(Chi-Square Test)被广泛运用。但值得注意的是，如果行列表中有1&#x2F;5以上的格子理论频数小于5，或有一个格子理论频数小于1，卡方检验将导致分析的偏性。此时，可以采用 Fishe‘s 精确概率法(Fishe’s Exact Test)计算P值。</p>
<p> <strong>3）、三组或以上资料的分析</strong><br>与两组资料分析类似，如果数据为定量资料呈正态分布，则采用单因素方差分析 (One way ANOVA)；如果定量数据，呈非正态分布，则选择Kruskal一Wallis检验 (Kruskal一Wallis Test)。对于分类数据，多分类无序数据采用卡方检验(Chi-Square Test)或Fish‘s精确概率法；多分类有序数据可采用Cochran-Mantel-Haenszel 检验(Cochran-Mantel -Haenszel Test)。</p>
<p><strong>4）、 等效性检验</strong><br>等效性检验中无效假设H0指治疗间有差异（至少为Δ），Δ为临床无差异之和，拒绝H0意味着治疗之间差异没有显著意义。在双单侧检验（TOST）中，σ值是A药和B药的理论差异，Δ为无差异之和。在差异性检验中，无效假设H0居中，备择假设H1在左侧或右侧；在等效性检验中，备则假设H1居中，H0滑向两侧，那么研究者需设两个H0，即H01（σ≤Δ）和H02 （σ≥Δ），然后进行2次非劣效性检验（Δ－σ和σ－Δ）。在等效性检验中，通常只检验均值或率比。部分研究者倾向于找到σ的可信区间（CI），如果CI不能括入Δ，研究者有证据拒绝H0，并得出等效性结论。 </p>
<p><strong>5）、把握度分析</strong><br>把握度分析可在设计试验阶段进行, 来阐明各试验设计参数之间的互变关系, 尤其是在不同的显著性水平下,研究者进行样本量与把握度关系间的分析，对设计试验时选择合适的样本量大小具有极为重要的作用。 </p>
<p><strong>6）、多因素方差分析（Multi-way ANOVA）</strong><br>t检验是对一个变量的1或2个均值进行检验；方差分析又称F检验，单因素方差分析是对1个变量的≥3个均值进行检验；多因素方差分析是对2个或2个以上变量的多个均值进行检验。</p>
<p><strong>7）、相关性分析(Researeh Question Sabout Relationships among Variables)</strong><br>许多临床研究涉及对一组研究对象2个连续性变量的相互关系的研究。如用2个不同的指标测定心功能，拟评价这2个指标是否一致，这就需要涉及相关(Correlation)和一致性(Agreement)的评价。当数据为正态分布时，Pearson相关系数(Pearson‘s relation Coefficient)可以评价2个指标的相关性。当数据分布非正态，相应的非参数统计量为Spearman’s 等级相关系数(Spearman‘s Rank Correlation Coeffielent)以及Kendall’s Tau-b等级相关系数(Kendall‘s Tau-b Rank Correlation Coeffielent)，两者类似，但更多的统计学家推荐使用后者。 对一致性的评价，定量数据可以采用Concordance相关系数(Concordance Correlation Coeffieient)，分类数据采用 Kappa分析 (Cohen‘s Kappa statistic)。 值得注意的是，相关性与一致性的区别。如在临床研究中，希望评价一个新的方法是否等同于原来的方法，需要使用一致性分析。</p>
<p><strong>8）、多因素分析(StatlstiealMethodSfo:MultipleVariables)</strong><br>临床研究的对象常常为病人，与有严格实验条件控制的动物实验不同，除了研究的因素外，常需要控制许多混杂因素或协变量，统计分析需要采用多因素模型对协变量进行校正。统计分析软件和程序的使用为多因素分析提供了可能。根据反应变量的类型，可以采用多元线形回归(Muiriple LinearRegression)、协方差分析(ANOVA，Analysis of Covariance)、Logistic回归(Logistic Regression)、判别分析、聚类分析等。</p>
<p><strong>9）、重复测量数据的分析(Methods for Analyzing Repeated Measures Data)</strong><br>定量数据可以采用重复测量方差分析(Repeated-Measures ANOVA)以及混合效应模型(MixeD-effects linear Model)。对于分类数据，可以广义估算方程(Generalized Estimated Evluation，GEE)拟合Logistic模型。</p>
<p><strong>10）、生存分析(Analyzing Researeh Questions about Survival)</strong><br>分析一段时间后生存、死亡或其它事件发生情况需要采用生存分析，例如，研究者想了解心脏移植后病人生存天数是否与不同的手术方式有关。生存分析的目的通常是为了描述研究人群的事件发生时间(生存时间、suvival time)的分布特征，比较不同组的生存时间或研究生存时间是否与研究变量有关。单因素生存分析可以采用Log-Rank检验(Log-Rank Test)；多因素可以考虑选择比例风险模型(Cox Proportional Hazards Model)。需要注意的是，在临床研究中经常包含重复测量数据，如病人从心脏移植至死亡发生期间，重复测量了多次心功能值，对于这种资料，可以采用SAS PHREG中，重复测量资料的cox模型的运用。</p>
<p>一些其他重要的：<br>一般情况下，大于两倍标准差（μ+2δ&#x2F;μ-2δ），可以判断是奇异值。<br>一旦定下统计规则，就不能更改。<br>先把简单问题复杂化（选择统计方法），再把复杂问题简单化（描述统计结果）。<br>variation。<br>检验效能 power&#x3D;1-β，β：二型错误；<br>样本量和检验效能的关系。样本量很大时，做卡方检验，卡方值很大，没有意义?</p>
]]></content>
      <categories>
        <category>统计</category>
      </categories>
      <tags>
        <tag>统计</tag>
      </tags>
  </entry>
  <entry>
    <title>RNA-seq分析(3)之DESeq2差异分析</title>
    <url>/2022/09/17/RNA-seq%E5%88%86%E6%9E%90%E4%B9%8BDESeq2%E5%B7%AE%E5%BC%82%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>利用DESeq2包进行差异表达分析。</p>
<span id="more"></span>

<h3 id="1-读入数据并构建DESeq2对象"><a href="#1-读入数据并构建DESeq2对象" class="headerlink" title="1. 读入数据并构建DESeq2对象"></a>1. 读入数据并构建DESeq2对象</h3><p>DESeq2差异分析是使用原始counts数据进行分析的，首先要创建DESeq2包能够处理的对象，创建该对象需要三个数据集：<br>    countData基因计数矩阵:行为基因，列为每个样本。<br>    colData样本信息数据：分别哪个样本是control、哪个是treatment。<br>    group_list：分组信息。<br>    这三个数据中的样本id要一致，否则会报错。<br>数据结构如图所示：<br><img src="/pics/2022-09-17-DESeq2.png" alt="alt 图标"></p>
<p>读入数据及预处理：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library<span class="punctuation">(</span>DESeq2<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>dplyr<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>ggrepel<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读入数据</span></span><br><span class="line">count <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span>file <span class="operator">=</span> <span class="string">&quot;counts.txt&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 命名行和列的名字:行名为第一列</span></span><br><span class="line">rownames<span class="punctuation">(</span>count<span class="punctuation">)</span> <span class="operator">&lt;-</span> count<span class="operator">$</span>V1</span><br><span class="line">count <span class="operator">&lt;-</span> count<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line">count <span class="operator">&lt;-</span> count<span class="punctuation">[</span>rowSums<span class="punctuation">(</span>count<span class="punctuation">)</span><span class="operator">&gt;</span><span class="number">0</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">colnames<span class="punctuation">(</span>count<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;CS-1&quot;</span><span class="punctuation">,</span><span class="string">&quot;CS-2&quot;</span><span class="punctuation">,</span><span class="string">&quot;PS-1&quot;</span><span class="punctuation">,</span><span class="string">&quot;PS-2&quot;</span><span class="punctuation">)</span></span><br><span class="line">count <span class="operator">&lt;-</span> count<span class="punctuation">[</span><span class="operator">-</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>
<p>三个dataframe：<br>    ColData:样本和分组的对应信息,即colData；<br>    grouplist:分组信息；<br>    countData:rawcounts,即count。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">group_list <span class="operator">&lt;-</span> <span class="built_in">rep</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;CS&quot;</span><span class="punctuation">,</span><span class="string">&quot;PS&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span>each <span class="operator">=</span><span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">colData <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>sample <span class="operator">=</span> colnames<span class="punctuation">(</span>count<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                      group_list <span class="operator">=</span> group_list <span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>有了这三个矩阵信息，就可以进行接下来DESeq2对象的构建了。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dds <span class="operator">&lt;-</span> DESeqDataSetFromMatrix<span class="punctuation">(</span>countData <span class="operator">=</span> count<span class="punctuation">,</span>colData <span class="operator">=</span> colData<span class="punctuation">,</span></span><br><span class="line">                              design <span class="operator">=</span> group_list<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-差异分析"><a href="#2-差异分析" class="headerlink" title="2. 差异分析"></a>2. 差异分析</h3><p>接下来可以进行差异分析,并提取差异分析的结果。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">dds2 <span class="operator">&lt;-</span> DESeq<span class="punctuation">(</span>dds<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 提取差异分析结果</span></span><br><span class="line">res <span class="operator">&lt;-</span> results<span class="punctuation">(</span>dds2<span class="punctuation">,</span>contrast<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;group_list&quot;</span><span class="punctuation">,</span><span class="string">&quot;CS&quot;</span><span class="punctuation">,</span><span class="string">&quot;PS&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>
<p>这里需要注意contrast参数，两个组的先后顺序如果不同分析出来的差异。原文是这样写的：</p>
<blockquote>
<p>The results table when printed will provide the information about the comparison, e.g. “log2 fold change (MAP): condition treated vs untreated”, meaning that the estimates are of log2(treated &#x2F; untreated), as would be returned by contrast&#x3D;c(“condition”,”treated”,”untreated”).</p>
</blockquote>
<p>所以两个组的顺序应该是对照在后面，实验组在前面，否则得到的上下调基因会刚好相反。</p>
<p>res中包含的列：base means across samples, log2 fold changes, standard errors, test statistics, p-values and adjusted p-values。<br>由于我的gene id用的是果蝇flybase数据库中的id，所以我希望在得到的结果中添加上gene symbol信息用于火山图部分基因的标记，添加entrez id以便后续的kegg分析。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">res<span class="operator">$</span>symbol <span class="operator">&lt;-</span> mapIds<span class="punctuation">(</span>org.Dm.eg.db<span class="punctuation">,</span> </span><br><span class="line">                     keys<span class="operator">=</span>row.names<span class="punctuation">(</span>res<span class="punctuation">)</span><span class="punctuation">,</span> </span><br><span class="line">                     column<span class="operator">=</span><span class="string">&quot;SYMBOL&quot;</span><span class="punctuation">,</span> </span><br><span class="line">                     keytype<span class="operator">=</span><span class="string">&quot;ENSEMBL&quot;</span><span class="punctuation">,</span></span><br><span class="line">                     multiVals<span class="operator">=</span><span class="string">&quot;first&quot;</span><span class="punctuation">)</span></span><br><span class="line">res<span class="operator">$</span>entrez <span class="operator">&lt;-</span> mapIds<span class="punctuation">(</span>org.Dm.eg.db<span class="punctuation">,</span> </span><br><span class="line">                     keys<span class="operator">=</span>row.names<span class="punctuation">(</span>res<span class="punctuation">)</span><span class="punctuation">,</span> </span><br><span class="line">                     column<span class="operator">=</span><span class="string">&quot;ENTREZID&quot;</span><span class="punctuation">,</span> </span><br><span class="line">                     keytype<span class="operator">=</span><span class="string">&quot;ENSEMBL&quot;</span><span class="punctuation">,</span></span><br><span class="line">                     multiVals<span class="operator">=</span><span class="string">&quot;first&quot;</span><span class="punctuation">)</span></span><br><span class="line">res<span class="operator">$</span>name <span class="operator">=</span>   mapIds<span class="punctuation">(</span>org.Dm.eg.db<span class="punctuation">,</span></span><br><span class="line">                    keys<span class="operator">=</span>row.names<span class="punctuation">(</span>res<span class="punctuation">)</span><span class="punctuation">,</span> </span><br><span class="line">                    column<span class="operator">=</span><span class="string">&quot;GENENAME&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    keytype<span class="operator">=</span><span class="string">&quot;ENSEMBL&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    multiVals<span class="operator">=</span><span class="string">&quot;first&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 按照pvalue大小排序</span></span><br><span class="line">res_ordered <span class="operator">&lt;-</span> res<span class="punctuation">[</span>order<span class="punctuation">(</span>res<span class="operator">$</span>pvalue<span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line"></span><br><span class="line">DEG <span class="operator">&lt;-</span> as.data.frame<span class="punctuation">(</span>res_ordered<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 去除NA值：na.omit()去除含有NA值的整行数据</span></span><br><span class="line">DEG <span class="operator">&lt;-</span> na.omit<span class="punctuation">(</span>DEG<span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="3-根据差异表达倍数确定上下调的基因"><a href="#3-根据差异表达倍数确定上下调的基因" class="headerlink" title="3. 根据差异表达倍数确定上下调的基因"></a>3. 根据差异表达倍数确定上下调的基因</h3><p>确定上下调表达的基因，可以选择静态阈值或者动态阈值。静态阈值比如：p&lt;0.05,logFC&gt;2。动态阈值根据数据整体的情况确定一个阈值。</p>
<p>如果采用动态阈值，则计算动态阈值的代码如下：</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 动态阈值计算：差异倍数绝对值的均值±两倍标准差</span></span><br><span class="line">logFC_t <span class="operator">&lt;-</span> with<span class="punctuation">(</span>DEG<span class="punctuation">,</span>mean<span class="punctuation">(</span><span class="built_in">abs</span><span class="punctuation">(</span>log2FoldChange<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> <span class="number">2</span><span class="operator">*</span>sd<span class="punctuation">(</span><span class="built_in">abs</span><span class="punctuation">(</span>log2FoldChange<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">logFC_t <span class="operator">&lt;-</span> <span class="built_in">round</span><span class="punctuation">(</span>logFC_t<span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span> <span class="comment">#取前两位小数</span></span><br></pre></td></tr></table></figure>

<p>这里以采用静态阈值2为例进行分析并绘制火山图，也可以采用padj确定上下调基因。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">DEG<span class="operator">$</span>change <span class="operator">=</span> as.factor<span class="punctuation">(</span>ifelse<span class="punctuation">(</span>DEG<span class="operator">$</span>pvalue <span class="operator">&lt;</span> <span class="number">0.05</span> <span class="operator">&amp;</span> <span class="built_in">abs</span><span class="punctuation">(</span>DEG<span class="operator">$</span>log2FoldChange<span class="punctuation">)</span> <span class="operator">&gt;</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">                              ifelse<span class="punctuation">(</span>DEG<span class="operator">$</span>log2FoldChange <span class="operator">&gt;</span> <span class="number">2</span> <span class="punctuation">,</span><span class="string">&#x27;UP&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;DOWN&#x27;</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="string">&#x27;STABLE&#x27;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">table<span class="punctuation">(</span>DEG<span class="operator">$</span>change<span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">DEG<span class="operator">$</span>label <span class="operator">&lt;-</span> ifelse<span class="punctuation">(</span>DEG<span class="operator">$</span>pvalue <span class="operator">&lt;</span> <span class="number">0.00000001</span> <span class="operator">&amp;</span> <span class="built_in">abs</span><span class="punctuation">(</span>DEG<span class="operator">$</span>log2FoldChange<span class="punctuation">)</span> <span class="operator">&gt;=</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">                    DEG<span class="operator">$</span>symbol<span class="punctuation">,</span><span class="string">&quot;&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ggplot<span class="punctuation">(</span>DEG<span class="punctuation">,</span> aes<span class="punctuation">(</span>x<span class="operator">=</span>log2FoldChange<span class="punctuation">,</span> y<span class="operator">=</span><span class="operator">-</span>log10<span class="punctuation">(</span>pvalue<span class="punctuation">)</span><span class="punctuation">,</span>color<span class="operator">=</span>change<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">  geom_point<span class="punctuation">(</span>alpha<span class="operator">=</span><span class="number">0.4</span><span class="punctuation">,</span> size<span class="operator">=</span><span class="number">2</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">  theme_classic<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">  xlab<span class="punctuation">(</span><span class="string">&quot;log2 fold change&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  ylab<span class="punctuation">(</span><span class="string">&quot;-log10 pvalue&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  theme<span class="punctuation">(</span>plot.title <span class="operator">=</span> element_text<span class="punctuation">(</span>size<span class="operator">=</span><span class="number">15</span><span class="punctuation">,</span>hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">  scale_colour_manual<span class="punctuation">(</span>values <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;blue&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;black&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;red&#x27;</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  geom_hline<span class="punctuation">(</span>yintercept <span class="operator">=</span> <span class="operator">-</span>log10<span class="punctuation">(</span><span class="number">0.05</span><span class="punctuation">)</span><span class="punctuation">,</span> lty <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  geom_vline<span class="punctuation">(</span>xintercept <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">2</span><span class="punctuation">)</span><span class="punctuation">,</span> lty <span class="operator">=</span> <span class="number">2</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  geom_label_repel<span class="punctuation">(</span>data <span class="operator">=</span> DEG<span class="punctuation">,</span> aes<span class="punctuation">(</span>label <span class="operator">=</span> label<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                   size <span class="operator">=</span> <span class="number">3</span><span class="punctuation">,</span>box.padding <span class="operator">=</span> unit<span class="punctuation">(</span><span class="number">0.5</span><span class="punctuation">,</span> <span class="string">&quot;lines&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                   point.padding <span class="operator">=</span> unit<span class="punctuation">(</span><span class="number">0.8</span><span class="punctuation">,</span> <span class="string">&quot;lines&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                   segment.color <span class="operator">=</span> <span class="string">&quot;black&quot;</span><span class="punctuation">,</span></span><br><span class="line">                   show.legend <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> max.overlaps <span class="operator">=</span> <span class="number">10000</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>到这里，差异分析就完成啦！</p>
<p>参考链接：</p>
<ol>
<li><a href="https://www.jianshu.com/p/694b40961fc7">https://www.jianshu.com/p/694b40961fc7</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzUzMTEwODk0Ng==&amp;mid=2247497831&amp;idx=1&amp;sn=5fc90f8b4a3d0955566a869bed164cee&amp;chksm=fa453d5acd32b44c05eb25fbecda756d82b9aa052149995b437d58088582aaf44e8287907c63&amp;scene=178&amp;cur_album_id=1749887454125293572#rd">https://mp.weixin.qq.com/s?__biz=MzUzMTEwODk0Ng==&amp;mid=2247497831&amp;idx=1&amp;sn=5fc90f8b4a3d0955566a869bed164cee&amp;chksm=fa453d5acd32b44c05eb25fbecda756d82b9aa052149995b437d58088582aaf44e8287907c63&amp;scene=178&amp;cur_album_id=1749887454125293572#rd</a></li>
</ol>
]]></content>
      <categories>
        <category>RNA-seq</category>
      </categories>
      <tags>
        <tag>RNA-seq</tag>
      </tags>
  </entry>
  <entry>
    <title>RNA-seq分析(4)之KEGG富集分析</title>
    <url>/2022/09/18/RNA-seq%E5%88%86%E6%9E%90%E4%B9%8BKEGG%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>接上一篇<a href="http://xueyd.top/2022/09/17/RNA-seq%E5%88%86%E6%9E%90%E4%B9%8BDESeq2%E5%B7%AE%E5%BC%82%E5%88%86%E6%9E%90/#more">DESeq2包差异分析</a>，使用clusterProfiler包进行KEGG富集分析。</p>
<span id="more"></span>

<h3 id="1-提取基因集ID"><a href="#1-提取基因集ID" class="headerlink" title="1. 提取基因集ID"></a>1. 提取基因集ID</h3><p>得到差异分析中基因上下调的结果之后，就可以进行KEGG分析了，KEGG分析只需要一串基因id就可以了,因此首先先提取上下调基因集，这里我们使用entrez id进行基因富集。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">library<span class="punctuation">(</span>clusterProfiler<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>ggplot2<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>ggrepel<span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span><span class="string">&quot;AnnotationDbi&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span><span class="string">&quot;org.Dm.eg.db&quot;</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">gene_up <span class="operator">&lt;-</span> DEG<span class="punctuation">[</span>DEG<span class="operator">$</span>change <span class="operator">==</span> <span class="string">&quot;UP&quot;</span><span class="punctuation">,</span><span class="string">&quot;entrez&quot;</span><span class="punctuation">]</span></span><br><span class="line">gene_down <span class="operator">&lt;-</span> DEG<span class="punctuation">[</span>DEG<span class="operator">$</span>change <span class="operator">==</span> <span class="string">&quot;DOWN&quot;</span><span class="punctuation">,</span><span class="string">&quot;entrez&quot;</span><span class="punctuation">]</span></span><br><span class="line">gene_diff <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span>gene_up<span class="punctuation">,</span>gene_down<span class="punctuation">)</span></span><br><span class="line">gene_all <span class="operator">&lt;-</span> <span class="built_in">as.character</span><span class="punctuation">(</span>DEG<span class="punctuation">[</span><span class="punctuation">,</span><span class="string">&quot;entrez&quot;</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-KEGG富集"><a href="#2-KEGG富集" class="headerlink" title="2. KEGG富集"></a>2. KEGG富集</h3><p>接下来进行KEGG富集，enrichKEGG函数的keytype参数有4个选项：”kegg”、’ncbi-geneid’、’ncib-proteinid’、’uniprot’。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">kk.up <span class="operator">&lt;-</span> enrichKEGG<span class="punctuation">(</span>gene          <span class="operator">=</span>  gene_up<span class="punctuation">,</span></span><br><span class="line">                    organism      <span class="operator">=</span>  <span class="string">&quot;dme&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    keyType <span class="operator">=</span> <span class="string">&quot;ncbi-geneid&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    universe      <span class="operator">=</span>  gene_all<span class="punctuation">,</span></span><br><span class="line">                    pvalueCutoff  <span class="operator">=</span>  <span class="number">0.8</span><span class="punctuation">,</span></span><br><span class="line">                    qvalueCutoff  <span class="operator">=</span>  <span class="number">0.8</span><span class="punctuation">)</span></span><br><span class="line">kk.down <span class="operator">&lt;-</span> enrichKEGG<span class="punctuation">(</span>gene          <span class="operator">=</span>  gene_down<span class="punctuation">,</span></span><br><span class="line">                      organism      <span class="operator">=</span>  <span class="string">&quot;dme&quot;</span><span class="punctuation">,</span></span><br><span class="line">                      keyType <span class="operator">=</span> <span class="string">&quot;ncbi-geneid&quot;</span><span class="punctuation">,</span></span><br><span class="line">                      universe      <span class="operator">=</span>  gene_all<span class="punctuation">,</span></span><br><span class="line">                      pvalueCutoff  <span class="operator">=</span>  <span class="number">0.8</span><span class="punctuation">,</span></span><br><span class="line">                      qvalueCutoff  <span class="operator">=</span>  <span class="number">0.8</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<p>提取KEGG分析的结果，将上调和下调的基因富集结果整合在一起。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">kegg_down_dt <span class="operator">&lt;-</span> as.data.frame<span class="punctuation">(</span>kk.down<span class="punctuation">)</span></span><br><span class="line">kegg_up_dt <span class="operator">&lt;-</span> as.data.frame<span class="punctuation">(</span>kk.up<span class="punctuation">)</span></span><br><span class="line">down_kegg <span class="operator">&lt;-</span> kegg_down_dt<span class="punctuation">[</span>kegg_down_dt<span class="operator">$</span>pvalue <span class="operator">&lt;</span> <span class="number">0.05</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">down_kegg<span class="operator">$</span>group <span class="operator">=</span> <span class="operator">-</span><span class="number">1</span></span><br><span class="line">up_kegg <span class="operator">&lt;-</span> kegg_up_dt<span class="punctuation">[</span>kegg_up_dt<span class="operator">$</span>pvalue <span class="operator">&lt;</span> <span class="number">0.05</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">up_kegg<span class="operator">$</span>group <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line">dat <span class="operator">&lt;-</span> rbind<span class="punctuation">(</span>up_kegg<span class="punctuation">,</span> down_kegg<span class="punctuation">)</span></span><br><span class="line">dat<span class="operator">$</span>pvalue <span class="operator">&lt;-</span> <span class="operator">-</span>log10<span class="punctuation">(</span>dat<span class="operator">$</span>pvalue<span class="punctuation">)</span></span><br><span class="line">dat<span class="operator">$</span>pvalue <span class="operator">&lt;-</span> dat<span class="operator">$</span>pvalue <span class="operator">*</span> dat<span class="operator">$</span>group</span><br><span class="line"></span><br><span class="line">dat <span class="operator">&lt;-</span> dat<span class="punctuation">[</span>order<span class="punctuation">(</span>dat<span class="operator">$</span>pvalue<span class="punctuation">,</span> decreasing <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>

<p>绘图。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ggplot<span class="punctuation">(</span>dat<span class="punctuation">,</span> aes<span class="punctuation">(</span>x <span class="operator">=</span> reorder<span class="punctuation">(</span>Description<span class="punctuation">,</span> order<span class="punctuation">(</span>pvalue<span class="punctuation">,</span> decreasing<span class="operator">=</span><span class="built_in">F</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span> </span><br><span class="line">                y <span class="operator">=</span> pvalue<span class="punctuation">,</span> fill <span class="operator">=</span> group<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">  geom_bar<span class="punctuation">(</span>stat <span class="operator">=</span> <span class="string">&quot;identity&quot;</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">  scale_fill_gradient<span class="punctuation">(</span>low <span class="operator">=</span> <span class="string">&quot;blue&quot;</span><span class="punctuation">,</span> high <span class="operator">=</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span> guide <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span> <span class="operator">+</span> </span><br><span class="line">  scale_x_discrete<span class="punctuation">(</span>name <span class="operator">=</span> <span class="string">&quot;Pathway names&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  scale_y_continuous<span class="punctuation">(</span>name <span class="operator">=</span> <span class="string">&quot;log10P-value&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  coord_flip<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span> theme_bw<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span> theme<span class="punctuation">(</span>plot.title <span class="operator">=</span> element_text<span class="punctuation">(</span>hjust <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  ggtitle<span class="punctuation">(</span><span class="string">&quot;Pathway Enrichment&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>RNA-seq</category>
      </categories>
      <tags>
        <tag>RNA-seq</tag>
      </tags>
  </entry>
  <entry>
    <title>RNA-seq分析(5)之GO富集分析</title>
    <url>/2022/09/19/RNA-seq%E5%88%86%E6%9E%90-5-%E4%B9%8BGO%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>接上一篇<a href="http://xueyd.top/2022/09/18/RNA-seq%E5%88%86%E6%9E%90%E4%B9%8BKEGG%E5%AF%8C%E9%9B%86%E5%88%86%E6%9E%90/#more">KEGG富集分析</a>，使用clusterProfiler包进行GO通路富集分析。</p>
<span id="more"></span>

<h3 id="1-上调基因通路富集"><a href="#1-上调基因通路富集" class="headerlink" title="1. 上调基因通路富集"></a>1. 上调基因通路富集</h3><p>enrichGO进行上调基因的通路富集，并提取富集结果。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ego_up <span class="operator">&lt;-</span> enrichGO<span class="punctuation">(</span>gene          <span class="operator">=</span> gene_up<span class="punctuation">,</span></span><br><span class="line">                OrgDb         <span class="operator">=</span> org.Dm.eg.db<span class="punctuation">,</span></span><br><span class="line">                keytype <span class="operator">=</span> <span class="string">&quot;ENTREZID&quot;</span><span class="punctuation">,</span></span><br><span class="line">                ont           <span class="operator">=</span> <span class="string">&quot;ALL&quot;</span> <span class="punctuation">,</span></span><br><span class="line">                universe      <span class="operator">=</span> gene_all<span class="punctuation">,</span></span><br><span class="line">                pAdjustMethod <span class="operator">=</span> <span class="string">&quot;BH&quot;</span><span class="punctuation">,</span></span><br><span class="line">                pvalueCutoff  <span class="operator">=</span> <span class="number">0.99</span><span class="punctuation">,</span></span><br><span class="line">                qvalueCutoff  <span class="operator">=</span> <span class="number">0.99</span><span class="punctuation">,</span></span><br><span class="line">                readable      <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">head<span class="punctuation">(</span>ego_up<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="operator">:</span><span class="number">6</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">ego_up_result <span class="operator">&lt;-</span> ego_up<span class="operator">@</span>result<span class="punctuation">[</span>order<span class="punctuation">(</span>ego_up<span class="operator">@</span>result<span class="operator">$</span>pvalue<span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>

<p>选择前10个BP、CC、MF合并到一个dataset中并绘图。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ego_up_sig <span class="operator">&lt;-</span> rbind<span class="punctuation">(</span>head<span class="punctuation">(</span>subset<span class="punctuation">(</span>ego_up_result<span class="punctuation">,</span> ONTOLOGY <span class="operator">==</span> <span class="string">&quot;BP&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                    head<span class="punctuation">(</span>subset<span class="punctuation">(</span>ego_up_result<span class="punctuation">,</span> ONTOLOGY <span class="operator">==</span> <span class="string">&quot;CC&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                    head<span class="punctuation">(</span>subset<span class="punctuation">(</span>ego_up_result<span class="punctuation">,</span> ONTOLOGY <span class="operator">==</span> <span class="string">&quot;MF&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">ego_up_sig<span class="operator">$</span>pvalue <span class="operator">&lt;-</span> <span class="operator">-</span>log10<span class="punctuation">(</span>ego_up_sig<span class="operator">$</span>pvalue<span class="punctuation">)</span></span><br><span class="line">ego_up_sig<span class="operator">$</span>Description <span class="operator">&lt;-</span> factor<span class="punctuation">(</span>ego_up_sig<span class="operator">$</span>Description<span class="punctuation">,</span></span><br><span class="line">								 levels <span class="operator">=</span> <span class="built_in">as.character</span><span class="punctuation">(</span>rev<span class="punctuation">(</span>ego_up_sig<span class="operator">$</span>Description<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">ggplot<span class="punctuation">(</span>ego_up_sig<span class="punctuation">,</span> aes<span class="punctuation">(</span>x <span class="operator">=</span> Description<span class="punctuation">,</span> y <span class="operator">=</span> pvalue<span class="punctuation">,</span> fill <span class="operator">=</span> ONTOLOGY<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  geom_col<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  coord_flip<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  theme_classic<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  facet_grid<span class="punctuation">(</span>ONTOLOGY<span class="operator">~</span>.<span class="punctuation">,</span> scales <span class="operator">=</span> <span class="string">&quot;free&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  xlab<span class="punctuation">(</span><span class="string">&quot;Up regulated&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  ylab<span class="punctuation">(</span><span class="string">&quot;-log10 pvalue&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>

<h3 id="2-下调基因通路富集"><a href="#2-下调基因通路富集" class="headerlink" title="2. 下调基因通路富集"></a>2. 下调基因通路富集</h3><p>下调基因同理。</p>
<figure class="highlight r"><table><tr><td class="code"><pre><span class="line">ego_down <span class="operator">&lt;-</span> enrichGO<span class="punctuation">(</span>gene          <span class="operator">=</span> gene_down<span class="punctuation">,</span></span><br><span class="line">                   OrgDb         <span class="operator">=</span> org.Hs.eg.db<span class="punctuation">,</span></span><br><span class="line">                   ont           <span class="operator">=</span> <span class="string">&quot;ALL&quot;</span> <span class="punctuation">,</span></span><br><span class="line">                   universe      <span class="operator">=</span> gene_all<span class="punctuation">,</span></span><br><span class="line">                   pAdjustMethod <span class="operator">=</span> <span class="string">&quot;BH&quot;</span><span class="punctuation">,</span></span><br><span class="line">                   pvalueCutoff  <span class="operator">=</span> <span class="number">0.99</span><span class="punctuation">,</span></span><br><span class="line">                   qvalueCutoff  <span class="operator">=</span> <span class="number">0.99</span><span class="punctuation">,</span></span><br><span class="line">                   readable      <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">head<span class="punctuation">(</span>ego_down<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="operator">:</span><span class="number">6</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line">ego_down_result <span class="operator">&lt;-</span> ego_down<span class="operator">@</span>result<span class="punctuation">[</span>order<span class="punctuation">(</span>ego_down<span class="operator">@</span>result<span class="operator">$</span>pvalue<span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">ego_down_sig <span class="operator">&lt;-</span> rbind<span class="punctuation">(</span>head<span class="punctuation">(</span>subset<span class="punctuation">(</span>ego_down_result<span class="punctuation">,</span> ONTOLOGY <span class="operator">==</span> <span class="string">&quot;BP&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                    head<span class="punctuation">(</span>subset<span class="punctuation">(</span>ego_down_result<span class="punctuation">,</span> ONTOLOGY <span class="operator">==</span> <span class="string">&quot;CC&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">                    head<span class="punctuation">(</span>subset<span class="punctuation">(</span>ego_down_result<span class="punctuation">,</span> ONTOLOGY <span class="operator">==</span> <span class="string">&quot;MF&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="number">10</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">ego_down_sig<span class="operator">$</span>pvalue <span class="operator">&lt;-</span> <span class="operator">-</span>log10<span class="punctuation">(</span>ego_down_sig<span class="operator">$</span>pvalue<span class="punctuation">)</span></span><br><span class="line">ego_down_sig<span class="operator">$</span>Description <span class="operator">&lt;-</span> factor<span class="punctuation">(</span>ego_down_sig<span class="operator">$</span>Description<span class="punctuation">,</span> </span><br><span class="line">								   levels <span class="operator">=</span> <span class="built_in">as.character</span><span class="punctuation">(</span>rev<span class="punctuation">(</span>ego_down_sig<span class="operator">$</span>Description<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">ggplot<span class="punctuation">(</span>ego_down_sig<span class="punctuation">,</span> aes<span class="punctuation">(</span>x <span class="operator">=</span> Description<span class="punctuation">,</span> y <span class="operator">=</span> pvalue<span class="punctuation">,</span> fill <span class="operator">=</span> ONTOLOGY<span class="punctuation">)</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  geom_col<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  coord_flip<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  theme_classic<span class="punctuation">(</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  facet_grid<span class="punctuation">(</span>ONTOLOGY<span class="operator">~</span>.<span class="punctuation">,</span> scales <span class="operator">=</span> <span class="string">&quot;free&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  xlab<span class="punctuation">(</span><span class="string">&quot;Down regulated&quot;</span><span class="punctuation">)</span> <span class="operator">+</span></span><br><span class="line">  ylab<span class="punctuation">(</span><span class="string">&quot;-log10 pvalue&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>RNA-seq</category>
      </categories>
      <tags>
        <tag>RNA-seq</tag>
      </tags>
  </entry>
</search>
